// Generated by view binder compiler. Do not edit!
package org.wikipedia.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.fragment.app.FragmentContainerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.progressindicator.LinearProgressIndicator;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wikipedia.R;
import org.wikipedia.views.CabSearchView;
import org.wikipedia.views.LangCodeView;
import org.wikipedia.views.LanguageScrollView;

public final class FragmentSearchBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final FragmentContainerView fragmentSearchResults;

  @NonNull
  public final CabSearchView searchCabView;

  @NonNull
  public final LinearLayout searchContainer;

  @NonNull
  public final LangCodeView searchLangButton;

  @NonNull
  public final LinearLayout searchLangButtonContainer;

  @NonNull
  public final LanguageScrollView searchLanguageScrollView;

  @NonNull
  public final LinearLayout searchLanguageScrollViewContainer;

  @NonNull
  public final FragmentContainerView searchPanelRecent;

  @NonNull
  public final LinearProgressIndicator searchProgressBar;

  @NonNull
  public final MaterialToolbar searchToolbar;

  private FragmentSearchBinding(@NonNull LinearLayout rootView,
      @NonNull FragmentContainerView fragmentSearchResults, @NonNull CabSearchView searchCabView,
      @NonNull LinearLayout searchContainer, @NonNull LangCodeView searchLangButton,
      @NonNull LinearLayout searchLangButtonContainer,
      @NonNull LanguageScrollView searchLanguageScrollView,
      @NonNull LinearLayout searchLanguageScrollViewContainer,
      @NonNull FragmentContainerView searchPanelRecent,
      @NonNull LinearProgressIndicator searchProgressBar, @NonNull MaterialToolbar searchToolbar) {
    this.rootView = rootView;
    this.fragmentSearchResults = fragmentSearchResults;
    this.searchCabView = searchCabView;
    this.searchContainer = searchContainer;
    this.searchLangButton = searchLangButton;
    this.searchLangButtonContainer = searchLangButtonContainer;
    this.searchLanguageScrollView = searchLanguageScrollView;
    this.searchLanguageScrollViewContainer = searchLanguageScrollViewContainer;
    this.searchPanelRecent = searchPanelRecent;
    this.searchProgressBar = searchProgressBar;
    this.searchToolbar = searchToolbar;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSearchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSearchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_search, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSearchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.fragment_search_results;
      FragmentContainerView fragmentSearchResults = ViewBindings.findChildViewById(rootView, id);
      if (fragmentSearchResults == null) {
        break missingId;
      }

      id = R.id.search_cab_view;
      CabSearchView searchCabView = ViewBindings.findChildViewById(rootView, id);
      if (searchCabView == null) {
        break missingId;
      }

      LinearLayout searchContainer = (LinearLayout) rootView;

      id = R.id.search_lang_button;
      LangCodeView searchLangButton = ViewBindings.findChildViewById(rootView, id);
      if (searchLangButton == null) {
        break missingId;
      }

      id = R.id.search_lang_button_container;
      LinearLayout searchLangButtonContainer = ViewBindings.findChildViewById(rootView, id);
      if (searchLangButtonContainer == null) {
        break missingId;
      }

      id = R.id.search_language_scroll_view;
      LanguageScrollView searchLanguageScrollView = ViewBindings.findChildViewById(rootView, id);
      if (searchLanguageScrollView == null) {
        break missingId;
      }

      id = R.id.search_language_scroll_view_container;
      LinearLayout searchLanguageScrollViewContainer = ViewBindings.findChildViewById(rootView, id);
      if (searchLanguageScrollViewContainer == null) {
        break missingId;
      }

      id = R.id.search_panel_recent;
      FragmentContainerView searchPanelRecent = ViewBindings.findChildViewById(rootView, id);
      if (searchPanelRecent == null) {
        break missingId;
      }

      id = R.id.search_progress_bar;
      LinearProgressIndicator searchProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (searchProgressBar == null) {
        break missingId;
      }

      id = R.id.search_toolbar;
      MaterialToolbar searchToolbar = ViewBindings.findChildViewById(rootView, id);
      if (searchToolbar == null) {
        break missingId;
      }

      return new FragmentSearchBinding((LinearLayout) rootView, fragmentSearchResults,
          searchCabView, searchContainer, searchLangButton, searchLangButtonContainer,
          searchLanguageScrollView, searchLanguageScrollViewContainer, searchPanelRecent,
          searchProgressBar, searchToolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
