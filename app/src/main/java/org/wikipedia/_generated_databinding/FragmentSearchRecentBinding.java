// Generated by view binder compiler. Do not edit!
package org.wikipedia.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wikipedia.R;

public final class FragmentSearchRecentBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button addLanguagesButton;

  @NonNull
  public final TextView listTitle;

  @NonNull
  public final LinearLayout namespacesContainer;

  @NonNull
  public final RecyclerView namespacesRecycler;

  @NonNull
  public final LinearLayout recentSearches;

  @NonNull
  public final ConstraintLayout recentSearchesContainer;

  @NonNull
  public final ImageView recentSearchesDeleteButton;

  @NonNull
  public final FrameLayout recentSearchesHeaderContainer;

  @NonNull
  public final RecyclerView recentSearchesRecycler;

  @NonNull
  public final LinearLayout searchEmptyContainer;

  @NonNull
  public final ImageView searchEmptyImage;

  @NonNull
  public final TextView searchEmptyMessage;

  private FragmentSearchRecentBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button addLanguagesButton, @NonNull TextView listTitle,
      @NonNull LinearLayout namespacesContainer, @NonNull RecyclerView namespacesRecycler,
      @NonNull LinearLayout recentSearches, @NonNull ConstraintLayout recentSearchesContainer,
      @NonNull ImageView recentSearchesDeleteButton,
      @NonNull FrameLayout recentSearchesHeaderContainer,
      @NonNull RecyclerView recentSearchesRecycler, @NonNull LinearLayout searchEmptyContainer,
      @NonNull ImageView searchEmptyImage, @NonNull TextView searchEmptyMessage) {
    this.rootView = rootView;
    this.addLanguagesButton = addLanguagesButton;
    this.listTitle = listTitle;
    this.namespacesContainer = namespacesContainer;
    this.namespacesRecycler = namespacesRecycler;
    this.recentSearches = recentSearches;
    this.recentSearchesContainer = recentSearchesContainer;
    this.recentSearchesDeleteButton = recentSearchesDeleteButton;
    this.recentSearchesHeaderContainer = recentSearchesHeaderContainer;
    this.recentSearchesRecycler = recentSearchesRecycler;
    this.searchEmptyContainer = searchEmptyContainer;
    this.searchEmptyImage = searchEmptyImage;
    this.searchEmptyMessage = searchEmptyMessage;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSearchRecentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSearchRecentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_search_recent, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSearchRecentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_languages_button;
      Button addLanguagesButton = ViewBindings.findChildViewById(rootView, id);
      if (addLanguagesButton == null) {
        break missingId;
      }

      id = R.id.list_title;
      TextView listTitle = ViewBindings.findChildViewById(rootView, id);
      if (listTitle == null) {
        break missingId;
      }

      id = R.id.namespacesContainer;
      LinearLayout namespacesContainer = ViewBindings.findChildViewById(rootView, id);
      if (namespacesContainer == null) {
        break missingId;
      }

      id = R.id.namespaces_recycler;
      RecyclerView namespacesRecycler = ViewBindings.findChildViewById(rootView, id);
      if (namespacesRecycler == null) {
        break missingId;
      }

      id = R.id.recent_searches;
      LinearLayout recentSearches = ViewBindings.findChildViewById(rootView, id);
      if (recentSearches == null) {
        break missingId;
      }

      ConstraintLayout recentSearchesContainer = (ConstraintLayout) rootView;

      id = R.id.recent_searches_delete_button;
      ImageView recentSearchesDeleteButton = ViewBindings.findChildViewById(rootView, id);
      if (recentSearchesDeleteButton == null) {
        break missingId;
      }

      id = R.id.recentSearchesHeaderContainer;
      FrameLayout recentSearchesHeaderContainer = ViewBindings.findChildViewById(rootView, id);
      if (recentSearchesHeaderContainer == null) {
        break missingId;
      }

      id = R.id.recent_searches_recycler;
      RecyclerView recentSearchesRecycler = ViewBindings.findChildViewById(rootView, id);
      if (recentSearchesRecycler == null) {
        break missingId;
      }

      id = R.id.search_empty_container;
      LinearLayout searchEmptyContainer = ViewBindings.findChildViewById(rootView, id);
      if (searchEmptyContainer == null) {
        break missingId;
      }

      id = R.id.search_empty_image;
      ImageView searchEmptyImage = ViewBindings.findChildViewById(rootView, id);
      if (searchEmptyImage == null) {
        break missingId;
      }

      id = R.id.search_empty_message;
      TextView searchEmptyMessage = ViewBindings.findChildViewById(rootView, id);
      if (searchEmptyMessage == null) {
        break missingId;
      }

      return new FragmentSearchRecentBinding((ConstraintLayout) rootView, addLanguagesButton,
          listTitle, namespacesContainer, namespacesRecycler, recentSearches,
          recentSearchesContainer, recentSearchesDeleteButton, recentSearchesHeaderContainer,
          recentSearchesRecycler, searchEmptyContainer, searchEmptyImage, searchEmptyMessage);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
