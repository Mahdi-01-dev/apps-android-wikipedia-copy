// Generated by view binder compiler. Do not edit!
package org.wikipedia.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.progressindicator.LinearProgressIndicator;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wikipedia.R;
import org.wikipedia.commons.FilePageView;
import org.wikipedia.views.WikiErrorView;
import org.wikipedia.views.WikiSwipeRefreshLayout;

public final class FragmentFilePageBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final WikiErrorView errorView;

  @NonNull
  public final AppBarLayout filePageToolbarContainer;

  @NonNull
  public final FilePageView filePageView;

  @NonNull
  public final LinearProgressIndicator progressBar;

  @NonNull
  public final WikiSwipeRefreshLayout swipeRefreshLayout;

  @NonNull
  public final MaterialToolbar toolbar;

  private FragmentFilePageBinding(@NonNull LinearLayout rootView, @NonNull WikiErrorView errorView,
      @NonNull AppBarLayout filePageToolbarContainer, @NonNull FilePageView filePageView,
      @NonNull LinearProgressIndicator progressBar,
      @NonNull WikiSwipeRefreshLayout swipeRefreshLayout, @NonNull MaterialToolbar toolbar) {
    this.rootView = rootView;
    this.errorView = errorView;
    this.filePageToolbarContainer = filePageToolbarContainer;
    this.filePageView = filePageView;
    this.progressBar = progressBar;
    this.swipeRefreshLayout = swipeRefreshLayout;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentFilePageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentFilePageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_file_page, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentFilePageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.errorView;
      WikiErrorView errorView = ViewBindings.findChildViewById(rootView, id);
      if (errorView == null) {
        break missingId;
      }

      id = R.id.filePageToolbarContainer;
      AppBarLayout filePageToolbarContainer = ViewBindings.findChildViewById(rootView, id);
      if (filePageToolbarContainer == null) {
        break missingId;
      }

      id = R.id.filePageView;
      FilePageView filePageView = ViewBindings.findChildViewById(rootView, id);
      if (filePageView == null) {
        break missingId;
      }

      id = R.id.progressBar;
      LinearProgressIndicator progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.swipeRefreshLayout;
      WikiSwipeRefreshLayout swipeRefreshLayout = ViewBindings.findChildViewById(rootView, id);
      if (swipeRefreshLayout == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new FragmentFilePageBinding((LinearLayout) rootView, errorView,
          filePageToolbarContainer, filePageView, progressBar, swipeRefreshLayout, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
