// Generated by view binder compiler. Do not edit!
package org.wikipedia.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.helper.widget.Flow;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wikipedia.R;

public final class ViewOnThisDayGameShareBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final View questionDotLine;

  @NonNull
  public final Flow questionDotsFlow;

  @NonNull
  public final ConstraintLayout scoreContainer;

  @NonNull
  public final RecyclerView shareArticlesList;

  @NonNull
  public final LinearLayout shareContainer;

  @NonNull
  public final TextView shareResultText;

  @NonNull
  public final TextView shareSubtitle;

  private ViewOnThisDayGameShareBinding(@NonNull NestedScrollView rootView,
      @NonNull View questionDotLine, @NonNull Flow questionDotsFlow,
      @NonNull ConstraintLayout scoreContainer, @NonNull RecyclerView shareArticlesList,
      @NonNull LinearLayout shareContainer, @NonNull TextView shareResultText,
      @NonNull TextView shareSubtitle) {
    this.rootView = rootView;
    this.questionDotLine = questionDotLine;
    this.questionDotsFlow = questionDotsFlow;
    this.scoreContainer = scoreContainer;
    this.shareArticlesList = shareArticlesList;
    this.shareContainer = shareContainer;
    this.shareResultText = shareResultText;
    this.shareSubtitle = shareSubtitle;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ViewOnThisDayGameShareBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ViewOnThisDayGameShareBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.view_on_this_day_game_share, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ViewOnThisDayGameShareBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.questionDotLine;
      View questionDotLine = ViewBindings.findChildViewById(rootView, id);
      if (questionDotLine == null) {
        break missingId;
      }

      id = R.id.questionDotsFlow;
      Flow questionDotsFlow = ViewBindings.findChildViewById(rootView, id);
      if (questionDotsFlow == null) {
        break missingId;
      }

      id = R.id.scoreContainer;
      ConstraintLayout scoreContainer = ViewBindings.findChildViewById(rootView, id);
      if (scoreContainer == null) {
        break missingId;
      }

      id = R.id.shareArticlesList;
      RecyclerView shareArticlesList = ViewBindings.findChildViewById(rootView, id);
      if (shareArticlesList == null) {
        break missingId;
      }

      id = R.id.shareContainer;
      LinearLayout shareContainer = ViewBindings.findChildViewById(rootView, id);
      if (shareContainer == null) {
        break missingId;
      }

      id = R.id.shareResultText;
      TextView shareResultText = ViewBindings.findChildViewById(rootView, id);
      if (shareResultText == null) {
        break missingId;
      }

      id = R.id.shareSubtitle;
      TextView shareSubtitle = ViewBindings.findChildViewById(rootView, id);
      if (shareSubtitle == null) {
        break missingId;
      }

      return new ViewOnThisDayGameShareBinding((NestedScrollView) rootView, questionDotLine,
          questionDotsFlow, scoreContainer, shareArticlesList, shareContainer, shareResultText,
          shareSubtitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
