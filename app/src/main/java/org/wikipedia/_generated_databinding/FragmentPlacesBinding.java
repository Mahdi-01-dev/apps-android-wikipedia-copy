// Generated by view binder compiler. Do not edit!
package org.wikipedia.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.button.MaterialButtonToggleGroup;
import com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.maplibre.android.maps.MapView;
import org.wikipedia.R;
import org.wikipedia.views.LangCodeView;
import org.wikipedia.views.TabCountsView;
import org.wikipedia.views.WikiCardView;

public final class FragmentPlacesBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final ImageView backButton;

  @NonNull
  public final LinearLayout controlsContainer;

  @NonNull
  public final LangCodeView langCodeButton;

  @NonNull
  public final ScrollView listEmptyContainer;

  @NonNull
  public final TextView listEmptyMessage;

  @NonNull
  public final RecyclerView listRecyclerView;

  @NonNull
  public final MaterialButton listViewButton;

  @NonNull
  public final MapView mapView;

  @NonNull
  public final MaterialButton mapViewButton;

  @NonNull
  public final ExtendedFloatingActionButton myLocationButton;

  @NonNull
  public final ImageView searchCloseBtn;

  @NonNull
  public final WikiCardView searchContainer;

  @NonNull
  public final TextView searchTextView;

  @NonNull
  public final TabCountsView tabsButton;

  @NonNull
  public final MaterialButtonToggleGroup viewButtonsGroup;

  private FragmentPlacesBinding(@NonNull FrameLayout rootView, @NonNull ImageView backButton,
      @NonNull LinearLayout controlsContainer, @NonNull LangCodeView langCodeButton,
      @NonNull ScrollView listEmptyContainer, @NonNull TextView listEmptyMessage,
      @NonNull RecyclerView listRecyclerView, @NonNull MaterialButton listViewButton,
      @NonNull MapView mapView, @NonNull MaterialButton mapViewButton,
      @NonNull ExtendedFloatingActionButton myLocationButton, @NonNull ImageView searchCloseBtn,
      @NonNull WikiCardView searchContainer, @NonNull TextView searchTextView,
      @NonNull TabCountsView tabsButton, @NonNull MaterialButtonToggleGroup viewButtonsGroup) {
    this.rootView = rootView;
    this.backButton = backButton;
    this.controlsContainer = controlsContainer;
    this.langCodeButton = langCodeButton;
    this.listEmptyContainer = listEmptyContainer;
    this.listEmptyMessage = listEmptyMessage;
    this.listRecyclerView = listRecyclerView;
    this.listViewButton = listViewButton;
    this.mapView = mapView;
    this.mapViewButton = mapViewButton;
    this.myLocationButton = myLocationButton;
    this.searchCloseBtn = searchCloseBtn;
    this.searchContainer = searchContainer;
    this.searchTextView = searchTextView;
    this.tabsButton = tabsButton;
    this.viewButtonsGroup = viewButtonsGroup;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPlacesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPlacesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_places, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPlacesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backButton;
      ImageView backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.controlsContainer;
      LinearLayout controlsContainer = ViewBindings.findChildViewById(rootView, id);
      if (controlsContainer == null) {
        break missingId;
      }

      id = R.id.langCodeButton;
      LangCodeView langCodeButton = ViewBindings.findChildViewById(rootView, id);
      if (langCodeButton == null) {
        break missingId;
      }

      id = R.id.listEmptyContainer;
      ScrollView listEmptyContainer = ViewBindings.findChildViewById(rootView, id);
      if (listEmptyContainer == null) {
        break missingId;
      }

      id = R.id.listEmptyMessage;
      TextView listEmptyMessage = ViewBindings.findChildViewById(rootView, id);
      if (listEmptyMessage == null) {
        break missingId;
      }

      id = R.id.listRecyclerView;
      RecyclerView listRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (listRecyclerView == null) {
        break missingId;
      }

      id = R.id.listViewButton;
      MaterialButton listViewButton = ViewBindings.findChildViewById(rootView, id);
      if (listViewButton == null) {
        break missingId;
      }

      id = R.id.mapView;
      MapView mapView = ViewBindings.findChildViewById(rootView, id);
      if (mapView == null) {
        break missingId;
      }

      id = R.id.mapViewButton;
      MaterialButton mapViewButton = ViewBindings.findChildViewById(rootView, id);
      if (mapViewButton == null) {
        break missingId;
      }

      id = R.id.myLocationButton;
      ExtendedFloatingActionButton myLocationButton = ViewBindings.findChildViewById(rootView, id);
      if (myLocationButton == null) {
        break missingId;
      }

      id = R.id.searchCloseBtn;
      ImageView searchCloseBtn = ViewBindings.findChildViewById(rootView, id);
      if (searchCloseBtn == null) {
        break missingId;
      }

      id = R.id.searchContainer;
      WikiCardView searchContainer = ViewBindings.findChildViewById(rootView, id);
      if (searchContainer == null) {
        break missingId;
      }

      id = R.id.searchTextView;
      TextView searchTextView = ViewBindings.findChildViewById(rootView, id);
      if (searchTextView == null) {
        break missingId;
      }

      id = R.id.tabsButton;
      TabCountsView tabsButton = ViewBindings.findChildViewById(rootView, id);
      if (tabsButton == null) {
        break missingId;
      }

      id = R.id.viewButtonsGroup;
      MaterialButtonToggleGroup viewButtonsGroup = ViewBindings.findChildViewById(rootView, id);
      if (viewButtonsGroup == null) {
        break missingId;
      }

      return new FragmentPlacesBinding((FrameLayout) rootView, backButton, controlsContainer,
          langCodeButton, listEmptyContainer, listEmptyMessage, listRecyclerView, listViewButton,
          mapView, mapViewButton, myLocationButton, searchCloseBtn, searchContainer, searchTextView,
          tabsButton, viewButtonsGroup);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
