// Generated by view binder compiler. Do not edit!
package org.wikipedia.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wikipedia.R;

public final class ViewMainDrawerBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final ImageView mainDrawerAccountAvatar;

  @NonNull
  public final LinearLayout mainDrawerAccountContainer;

  @NonNull
  public final TextView mainDrawerAccountName;

  @NonNull
  public final LinearLayout mainDrawerContribsContainer;

  @NonNull
  public final LinearLayout mainDrawerDonateContainer;

  @NonNull
  public final TextView mainDrawerLoginButton;

  @NonNull
  public final LinearLayout mainDrawerPlacesContainer;

  @NonNull
  public final LinearLayout mainDrawerSettingsContainer;

  @NonNull
  public final LinearLayout mainDrawerTalkContainer;

  @NonNull
  public final LinearLayout mainDrawerTempAccountContainer;

  @NonNull
  public final LinearLayout mainDrawerWatchlistContainer;

  @NonNull
  public final LinearLayout mainDrawerYearInReviewContainer;

  @NonNull
  public final TextView tempAccountName;

  private ViewMainDrawerBinding(@NonNull FrameLayout rootView,
      @NonNull ImageView mainDrawerAccountAvatar, @NonNull LinearLayout mainDrawerAccountContainer,
      @NonNull TextView mainDrawerAccountName, @NonNull LinearLayout mainDrawerContribsContainer,
      @NonNull LinearLayout mainDrawerDonateContainer, @NonNull TextView mainDrawerLoginButton,
      @NonNull LinearLayout mainDrawerPlacesContainer,
      @NonNull LinearLayout mainDrawerSettingsContainer,
      @NonNull LinearLayout mainDrawerTalkContainer,
      @NonNull LinearLayout mainDrawerTempAccountContainer,
      @NonNull LinearLayout mainDrawerWatchlistContainer,
      @NonNull LinearLayout mainDrawerYearInReviewContainer, @NonNull TextView tempAccountName) {
    this.rootView = rootView;
    this.mainDrawerAccountAvatar = mainDrawerAccountAvatar;
    this.mainDrawerAccountContainer = mainDrawerAccountContainer;
    this.mainDrawerAccountName = mainDrawerAccountName;
    this.mainDrawerContribsContainer = mainDrawerContribsContainer;
    this.mainDrawerDonateContainer = mainDrawerDonateContainer;
    this.mainDrawerLoginButton = mainDrawerLoginButton;
    this.mainDrawerPlacesContainer = mainDrawerPlacesContainer;
    this.mainDrawerSettingsContainer = mainDrawerSettingsContainer;
    this.mainDrawerTalkContainer = mainDrawerTalkContainer;
    this.mainDrawerTempAccountContainer = mainDrawerTempAccountContainer;
    this.mainDrawerWatchlistContainer = mainDrawerWatchlistContainer;
    this.mainDrawerYearInReviewContainer = mainDrawerYearInReviewContainer;
    this.tempAccountName = tempAccountName;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ViewMainDrawerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ViewMainDrawerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.view_main_drawer, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ViewMainDrawerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.main_drawer_account_avatar;
      ImageView mainDrawerAccountAvatar = ViewBindings.findChildViewById(rootView, id);
      if (mainDrawerAccountAvatar == null) {
        break missingId;
      }

      id = R.id.main_drawer_account_container;
      LinearLayout mainDrawerAccountContainer = ViewBindings.findChildViewById(rootView, id);
      if (mainDrawerAccountContainer == null) {
        break missingId;
      }

      id = R.id.main_drawer_account_name;
      TextView mainDrawerAccountName = ViewBindings.findChildViewById(rootView, id);
      if (mainDrawerAccountName == null) {
        break missingId;
      }

      id = R.id.main_drawer_contribs_container;
      LinearLayout mainDrawerContribsContainer = ViewBindings.findChildViewById(rootView, id);
      if (mainDrawerContribsContainer == null) {
        break missingId;
      }

      id = R.id.main_drawer_donate_container;
      LinearLayout mainDrawerDonateContainer = ViewBindings.findChildViewById(rootView, id);
      if (mainDrawerDonateContainer == null) {
        break missingId;
      }

      id = R.id.main_drawer_login_button;
      TextView mainDrawerLoginButton = ViewBindings.findChildViewById(rootView, id);
      if (mainDrawerLoginButton == null) {
        break missingId;
      }

      id = R.id.main_drawer_places_container;
      LinearLayout mainDrawerPlacesContainer = ViewBindings.findChildViewById(rootView, id);
      if (mainDrawerPlacesContainer == null) {
        break missingId;
      }

      id = R.id.main_drawer_settings_container;
      LinearLayout mainDrawerSettingsContainer = ViewBindings.findChildViewById(rootView, id);
      if (mainDrawerSettingsContainer == null) {
        break missingId;
      }

      id = R.id.main_drawer_talk_container;
      LinearLayout mainDrawerTalkContainer = ViewBindings.findChildViewById(rootView, id);
      if (mainDrawerTalkContainer == null) {
        break missingId;
      }

      id = R.id.main_drawer_temp_account_container;
      LinearLayout mainDrawerTempAccountContainer = ViewBindings.findChildViewById(rootView, id);
      if (mainDrawerTempAccountContainer == null) {
        break missingId;
      }

      id = R.id.main_drawer_watchlist_container;
      LinearLayout mainDrawerWatchlistContainer = ViewBindings.findChildViewById(rootView, id);
      if (mainDrawerWatchlistContainer == null) {
        break missingId;
      }

      id = R.id.main_drawer_year_in_review_container;
      LinearLayout mainDrawerYearInReviewContainer = ViewBindings.findChildViewById(rootView, id);
      if (mainDrawerYearInReviewContainer == null) {
        break missingId;
      }

      id = R.id.temp_account_name;
      TextView tempAccountName = ViewBindings.findChildViewById(rootView, id);
      if (tempAccountName == null) {
        break missingId;
      }

      return new ViewMainDrawerBinding((FrameLayout) rootView, mainDrawerAccountAvatar,
          mainDrawerAccountContainer, mainDrawerAccountName, mainDrawerContribsContainer,
          mainDrawerDonateContainer, mainDrawerLoginButton, mainDrawerPlacesContainer,
          mainDrawerSettingsContainer, mainDrawerTalkContainer, mainDrawerTempAccountContainer,
          mainDrawerWatchlistContainer, mainDrawerYearInReviewContainer, tempAccountName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
