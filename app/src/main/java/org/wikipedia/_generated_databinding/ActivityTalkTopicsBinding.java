// Generated by view binder compiler. Do not edit!
package org.wikipedia.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ProgressBar;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wikipedia.R;
import org.wikipedia.views.WikiErrorView;
import org.wikipedia.views.WikiSwipeRefreshLayout;

public final class ActivityTalkTopicsBinding implements ViewBinding {
  @NonNull
  private final WikiSwipeRefreshLayout rootView;

  @NonNull
  public final FrameLayout talkConditionContainer;

  @NonNull
  public final FrameLayout talkContentsView;

  @NonNull
  public final ScrollView talkEmptyContainer;

  @NonNull
  public final WikiErrorView talkErrorView;

  @NonNull
  public final ExtendedFloatingActionButton talkNewTopicButton;

  @NonNull
  public final ProgressBar talkProgressBar;

  @NonNull
  public final RecyclerView talkRecyclerView;

  @NonNull
  public final WikiSwipeRefreshLayout talkRefreshView;

  @NonNull
  public final TextView talkSearchNoResult;

  @NonNull
  public final CoordinatorLayout talkTopicsSnackbar;

  @NonNull
  public final MaterialToolbar toolbar;

  private ActivityTalkTopicsBinding(@NonNull WikiSwipeRefreshLayout rootView,
      @NonNull FrameLayout talkConditionContainer, @NonNull FrameLayout talkContentsView,
      @NonNull ScrollView talkEmptyContainer, @NonNull WikiErrorView talkErrorView,
      @NonNull ExtendedFloatingActionButton talkNewTopicButton,
      @NonNull ProgressBar talkProgressBar, @NonNull RecyclerView talkRecyclerView,
      @NonNull WikiSwipeRefreshLayout talkRefreshView, @NonNull TextView talkSearchNoResult,
      @NonNull CoordinatorLayout talkTopicsSnackbar, @NonNull MaterialToolbar toolbar) {
    this.rootView = rootView;
    this.talkConditionContainer = talkConditionContainer;
    this.talkContentsView = talkContentsView;
    this.talkEmptyContainer = talkEmptyContainer;
    this.talkErrorView = talkErrorView;
    this.talkNewTopicButton = talkNewTopicButton;
    this.talkProgressBar = talkProgressBar;
    this.talkRecyclerView = talkRecyclerView;
    this.talkRefreshView = talkRefreshView;
    this.talkSearchNoResult = talkSearchNoResult;
    this.talkTopicsSnackbar = talkTopicsSnackbar;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public WikiSwipeRefreshLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityTalkTopicsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityTalkTopicsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_talk_topics, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityTalkTopicsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.talkConditionContainer;
      FrameLayout talkConditionContainer = ViewBindings.findChildViewById(rootView, id);
      if (talkConditionContainer == null) {
        break missingId;
      }

      id = R.id.talkContentsView;
      FrameLayout talkContentsView = ViewBindings.findChildViewById(rootView, id);
      if (talkContentsView == null) {
        break missingId;
      }

      id = R.id.talkEmptyContainer;
      ScrollView talkEmptyContainer = ViewBindings.findChildViewById(rootView, id);
      if (talkEmptyContainer == null) {
        break missingId;
      }

      id = R.id.talkErrorView;
      WikiErrorView talkErrorView = ViewBindings.findChildViewById(rootView, id);
      if (talkErrorView == null) {
        break missingId;
      }

      id = R.id.talkNewTopicButton;
      ExtendedFloatingActionButton talkNewTopicButton = ViewBindings.findChildViewById(rootView, id);
      if (talkNewTopicButton == null) {
        break missingId;
      }

      id = R.id.talkProgressBar;
      ProgressBar talkProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (talkProgressBar == null) {
        break missingId;
      }

      id = R.id.talkRecyclerView;
      RecyclerView talkRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (talkRecyclerView == null) {
        break missingId;
      }

      WikiSwipeRefreshLayout talkRefreshView = (WikiSwipeRefreshLayout) rootView;

      id = R.id.talkSearchNoResult;
      TextView talkSearchNoResult = ViewBindings.findChildViewById(rootView, id);
      if (talkSearchNoResult == null) {
        break missingId;
      }

      id = R.id.talkTopicsSnackbar;
      CoordinatorLayout talkTopicsSnackbar = ViewBindings.findChildViewById(rootView, id);
      if (talkTopicsSnackbar == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityTalkTopicsBinding((WikiSwipeRefreshLayout) rootView,
          talkConditionContainer, talkContentsView, talkEmptyContainer, talkErrorView,
          talkNewTopicButton, talkProgressBar, talkRecyclerView, talkRefreshView,
          talkSearchNoResult, talkTopicsSnackbar, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
