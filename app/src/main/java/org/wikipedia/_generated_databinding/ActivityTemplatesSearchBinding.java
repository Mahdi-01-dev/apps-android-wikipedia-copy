// Generated by view binder compiler. Do not edit!
package org.wikipedia.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.fragment.app.FragmentContainerView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.progressindicator.LinearProgressIndicator;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wikipedia.R;
import org.wikipedia.views.CabSearchView;

public final class ActivityTemplatesSearchBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView emptyMessage;

  @NonNull
  public final TextView insertTemplateButton;

  @NonNull
  public final FragmentContainerView insertTemplateFragment;

  @NonNull
  public final CabSearchView searchCabView;

  @NonNull
  public final LinearProgressIndicator searchProgressBar;

  @NonNull
  public final RecyclerView templateRecyclerView;

  @NonNull
  public final MaterialToolbar toolbar;

  @NonNull
  public final FrameLayout toolbarContainer;

  private ActivityTemplatesSearchBinding(@NonNull LinearLayout rootView,
      @NonNull TextView emptyMessage, @NonNull TextView insertTemplateButton,
      @NonNull FragmentContainerView insertTemplateFragment, @NonNull CabSearchView searchCabView,
      @NonNull LinearProgressIndicator searchProgressBar,
      @NonNull RecyclerView templateRecyclerView, @NonNull MaterialToolbar toolbar,
      @NonNull FrameLayout toolbarContainer) {
    this.rootView = rootView;
    this.emptyMessage = emptyMessage;
    this.insertTemplateButton = insertTemplateButton;
    this.insertTemplateFragment = insertTemplateFragment;
    this.searchCabView = searchCabView;
    this.searchProgressBar = searchProgressBar;
    this.templateRecyclerView = templateRecyclerView;
    this.toolbar = toolbar;
    this.toolbarContainer = toolbarContainer;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityTemplatesSearchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityTemplatesSearchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_templates_search, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityTemplatesSearchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.emptyMessage;
      TextView emptyMessage = ViewBindings.findChildViewById(rootView, id);
      if (emptyMessage == null) {
        break missingId;
      }

      id = R.id.insertTemplateButton;
      TextView insertTemplateButton = ViewBindings.findChildViewById(rootView, id);
      if (insertTemplateButton == null) {
        break missingId;
      }

      id = R.id.insertTemplateFragment;
      FragmentContainerView insertTemplateFragment = ViewBindings.findChildViewById(rootView, id);
      if (insertTemplateFragment == null) {
        break missingId;
      }

      id = R.id.searchCabView;
      CabSearchView searchCabView = ViewBindings.findChildViewById(rootView, id);
      if (searchCabView == null) {
        break missingId;
      }

      id = R.id.searchProgressBar;
      LinearProgressIndicator searchProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (searchProgressBar == null) {
        break missingId;
      }

      id = R.id.templateRecyclerView;
      RecyclerView templateRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (templateRecyclerView == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.toolbarContainer;
      FrameLayout toolbarContainer = ViewBindings.findChildViewById(rootView, id);
      if (toolbarContainer == null) {
        break missingId;
      }

      return new ActivityTemplatesSearchBinding((LinearLayout) rootView, emptyMessage,
          insertTemplateButton, insertTemplateFragment, searchCabView, searchProgressBar,
          templateRecyclerView, toolbar, toolbarContainer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
