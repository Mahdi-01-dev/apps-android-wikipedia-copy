// Generated by view binder compiler. Do not edit!
package org.wikipedia.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.HorizontalScrollView;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.chip.ChipGroup;
import com.google.android.material.imageview.ShapeableImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wikipedia.R;
import org.wikipedia.views.CircularProgressBar;
import org.wikipedia.views.GoneIfEmptyTextView;

public final class ItemPageListEntryBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final HorizontalScrollView chipsScrollview;

  @NonNull
  public final ImageView pageListItemAction;

  @NonNull
  public final FrameLayout pageListItemActionContainer;

  @NonNull
  public final CircularProgressBar pageListItemCircularProgressBar;

  @NonNull
  public final ConstraintLayout pageListItemContainer;

  @NonNull
  public final GoneIfEmptyTextView pageListItemDescription;

  @NonNull
  public final ShapeableImageView pageListItemImage;

  @NonNull
  public final FrameLayout pageListItemImageContainer;

  @NonNull
  public final ImageView pageListItemSelectedImage;

  @NonNull
  public final TextView pageListItemTitle;

  @NonNull
  public final ChipGroup readingListsChipGroup;

  private ItemPageListEntryBinding(@NonNull ConstraintLayout rootView,
      @NonNull HorizontalScrollView chipsScrollview, @NonNull ImageView pageListItemAction,
      @NonNull FrameLayout pageListItemActionContainer,
      @NonNull CircularProgressBar pageListItemCircularProgressBar,
      @NonNull ConstraintLayout pageListItemContainer,
      @NonNull GoneIfEmptyTextView pageListItemDescription,
      @NonNull ShapeableImageView pageListItemImage,
      @NonNull FrameLayout pageListItemImageContainer, @NonNull ImageView pageListItemSelectedImage,
      @NonNull TextView pageListItemTitle, @NonNull ChipGroup readingListsChipGroup) {
    this.rootView = rootView;
    this.chipsScrollview = chipsScrollview;
    this.pageListItemAction = pageListItemAction;
    this.pageListItemActionContainer = pageListItemActionContainer;
    this.pageListItemCircularProgressBar = pageListItemCircularProgressBar;
    this.pageListItemContainer = pageListItemContainer;
    this.pageListItemDescription = pageListItemDescription;
    this.pageListItemImage = pageListItemImage;
    this.pageListItemImageContainer = pageListItemImageContainer;
    this.pageListItemSelectedImage = pageListItemSelectedImage;
    this.pageListItemTitle = pageListItemTitle;
    this.readingListsChipGroup = readingListsChipGroup;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemPageListEntryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemPageListEntryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_page_list_entry, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemPageListEntryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.chips_scrollview;
      HorizontalScrollView chipsScrollview = ViewBindings.findChildViewById(rootView, id);
      if (chipsScrollview == null) {
        break missingId;
      }

      id = R.id.page_list_item_action;
      ImageView pageListItemAction = ViewBindings.findChildViewById(rootView, id);
      if (pageListItemAction == null) {
        break missingId;
      }

      id = R.id.page_list_item_action_container;
      FrameLayout pageListItemActionContainer = ViewBindings.findChildViewById(rootView, id);
      if (pageListItemActionContainer == null) {
        break missingId;
      }

      id = R.id.page_list_item_circular_progress_bar;
      CircularProgressBar pageListItemCircularProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (pageListItemCircularProgressBar == null) {
        break missingId;
      }

      ConstraintLayout pageListItemContainer = (ConstraintLayout) rootView;

      id = R.id.page_list_item_description;
      GoneIfEmptyTextView pageListItemDescription = ViewBindings.findChildViewById(rootView, id);
      if (pageListItemDescription == null) {
        break missingId;
      }

      id = R.id.page_list_item_image;
      ShapeableImageView pageListItemImage = ViewBindings.findChildViewById(rootView, id);
      if (pageListItemImage == null) {
        break missingId;
      }

      id = R.id.page_list_item_image_container;
      FrameLayout pageListItemImageContainer = ViewBindings.findChildViewById(rootView, id);
      if (pageListItemImageContainer == null) {
        break missingId;
      }

      id = R.id.page_list_item_selected_image;
      ImageView pageListItemSelectedImage = ViewBindings.findChildViewById(rootView, id);
      if (pageListItemSelectedImage == null) {
        break missingId;
      }

      id = R.id.page_list_item_title;
      TextView pageListItemTitle = ViewBindings.findChildViewById(rootView, id);
      if (pageListItemTitle == null) {
        break missingId;
      }

      id = R.id.reading_lists_chip_group;
      ChipGroup readingListsChipGroup = ViewBindings.findChildViewById(rootView, id);
      if (readingListsChipGroup == null) {
        break missingId;
      }

      return new ItemPageListEntryBinding((ConstraintLayout) rootView, chipsScrollview,
          pageListItemAction, pageListItemActionContainer, pageListItemCircularProgressBar,
          pageListItemContainer, pageListItemDescription, pageListItemImage,
          pageListItemImageContainer, pageListItemSelectedImage, pageListItemTitle,
          readingListsChipGroup);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
