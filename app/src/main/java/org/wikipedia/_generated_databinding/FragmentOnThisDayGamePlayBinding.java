// Generated by view binder compiler. Do not edit!
package org.wikipedia.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wikipedia.R;
import org.wikipedia.games.onthisday.ScoreView;
import org.wikipedia.views.FaceAndColorDetectImageView;
import org.wikipedia.views.WikiCardView;
import org.wikipedia.views.WikiErrorView;

public final class FragmentOnThisDayGamePlayBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final FrameLayout bottomContent;

  @NonNull
  public final FrameLayout centerContent;

  @NonNull
  public final TextView correctIncorrectText;

  @NonNull
  public final ConstraintLayout currentQuestionContainer;

  @NonNull
  public final WikiErrorView errorView;

  @NonNull
  public final TextView nextQuestionText;

  @NonNull
  public final TextView pointsText;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final WikiCardView questionCard1;

  @NonNull
  public final WikiCardView questionCard2;

  @NonNull
  public final LinearLayout questionContainer1;

  @NonNull
  public final LinearLayout questionContainer2;

  @NonNull
  public final TextView questionDate1;

  @NonNull
  public final TextView questionDate2;

  @NonNull
  public final ScrollView questionScroll1;

  @NonNull
  public final ScrollView questionScroll2;

  @NonNull
  public final ImageView questionStatusIcon1;

  @NonNull
  public final ImageView questionStatusIcon2;

  @NonNull
  public final TextView questionText1;

  @NonNull
  public final TextView questionText2;

  @NonNull
  public final FaceAndColorDetectImageView questionThumbnail1;

  @NonNull
  public final FaceAndColorDetectImageView questionThumbnail2;

  @NonNull
  public final ScoreView scoreView;

  @NonNull
  public final TextView whichCameFirstText;

  private FragmentOnThisDayGamePlayBinding(@NonNull CoordinatorLayout rootView,
      @NonNull FrameLayout bottomContent, @NonNull FrameLayout centerContent,
      @NonNull TextView correctIncorrectText, @NonNull ConstraintLayout currentQuestionContainer,
      @NonNull WikiErrorView errorView, @NonNull TextView nextQuestionText,
      @NonNull TextView pointsText, @NonNull ProgressBar progressBar,
      @NonNull WikiCardView questionCard1, @NonNull WikiCardView questionCard2,
      @NonNull LinearLayout questionContainer1, @NonNull LinearLayout questionContainer2,
      @NonNull TextView questionDate1, @NonNull TextView questionDate2,
      @NonNull ScrollView questionScroll1, @NonNull ScrollView questionScroll2,
      @NonNull ImageView questionStatusIcon1, @NonNull ImageView questionStatusIcon2,
      @NonNull TextView questionText1, @NonNull TextView questionText2,
      @NonNull FaceAndColorDetectImageView questionThumbnail1,
      @NonNull FaceAndColorDetectImageView questionThumbnail2, @NonNull ScoreView scoreView,
      @NonNull TextView whichCameFirstText) {
    this.rootView = rootView;
    this.bottomContent = bottomContent;
    this.centerContent = centerContent;
    this.correctIncorrectText = correctIncorrectText;
    this.currentQuestionContainer = currentQuestionContainer;
    this.errorView = errorView;
    this.nextQuestionText = nextQuestionText;
    this.pointsText = pointsText;
    this.progressBar = progressBar;
    this.questionCard1 = questionCard1;
    this.questionCard2 = questionCard2;
    this.questionContainer1 = questionContainer1;
    this.questionContainer2 = questionContainer2;
    this.questionDate1 = questionDate1;
    this.questionDate2 = questionDate2;
    this.questionScroll1 = questionScroll1;
    this.questionScroll2 = questionScroll2;
    this.questionStatusIcon1 = questionStatusIcon1;
    this.questionStatusIcon2 = questionStatusIcon2;
    this.questionText1 = questionText1;
    this.questionText2 = questionText2;
    this.questionThumbnail1 = questionThumbnail1;
    this.questionThumbnail2 = questionThumbnail2;
    this.scoreView = scoreView;
    this.whichCameFirstText = whichCameFirstText;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentOnThisDayGamePlayBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentOnThisDayGamePlayBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_on_this_day_game_play, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentOnThisDayGamePlayBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottomContent;
      FrameLayout bottomContent = ViewBindings.findChildViewById(rootView, id);
      if (bottomContent == null) {
        break missingId;
      }

      id = R.id.centerContent;
      FrameLayout centerContent = ViewBindings.findChildViewById(rootView, id);
      if (centerContent == null) {
        break missingId;
      }

      id = R.id.correctIncorrectText;
      TextView correctIncorrectText = ViewBindings.findChildViewById(rootView, id);
      if (correctIncorrectText == null) {
        break missingId;
      }

      id = R.id.currentQuestionContainer;
      ConstraintLayout currentQuestionContainer = ViewBindings.findChildViewById(rootView, id);
      if (currentQuestionContainer == null) {
        break missingId;
      }

      id = R.id.errorView;
      WikiErrorView errorView = ViewBindings.findChildViewById(rootView, id);
      if (errorView == null) {
        break missingId;
      }

      id = R.id.nextQuestionText;
      TextView nextQuestionText = ViewBindings.findChildViewById(rootView, id);
      if (nextQuestionText == null) {
        break missingId;
      }

      id = R.id.pointsText;
      TextView pointsText = ViewBindings.findChildViewById(rootView, id);
      if (pointsText == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.questionCard1;
      WikiCardView questionCard1 = ViewBindings.findChildViewById(rootView, id);
      if (questionCard1 == null) {
        break missingId;
      }

      id = R.id.questionCard2;
      WikiCardView questionCard2 = ViewBindings.findChildViewById(rootView, id);
      if (questionCard2 == null) {
        break missingId;
      }

      id = R.id.questionContainer1;
      LinearLayout questionContainer1 = ViewBindings.findChildViewById(rootView, id);
      if (questionContainer1 == null) {
        break missingId;
      }

      id = R.id.questionContainer2;
      LinearLayout questionContainer2 = ViewBindings.findChildViewById(rootView, id);
      if (questionContainer2 == null) {
        break missingId;
      }

      id = R.id.questionDate1;
      TextView questionDate1 = ViewBindings.findChildViewById(rootView, id);
      if (questionDate1 == null) {
        break missingId;
      }

      id = R.id.questionDate2;
      TextView questionDate2 = ViewBindings.findChildViewById(rootView, id);
      if (questionDate2 == null) {
        break missingId;
      }

      id = R.id.questionScroll1;
      ScrollView questionScroll1 = ViewBindings.findChildViewById(rootView, id);
      if (questionScroll1 == null) {
        break missingId;
      }

      id = R.id.questionScroll2;
      ScrollView questionScroll2 = ViewBindings.findChildViewById(rootView, id);
      if (questionScroll2 == null) {
        break missingId;
      }

      id = R.id.questionStatusIcon1;
      ImageView questionStatusIcon1 = ViewBindings.findChildViewById(rootView, id);
      if (questionStatusIcon1 == null) {
        break missingId;
      }

      id = R.id.questionStatusIcon2;
      ImageView questionStatusIcon2 = ViewBindings.findChildViewById(rootView, id);
      if (questionStatusIcon2 == null) {
        break missingId;
      }

      id = R.id.questionText1;
      TextView questionText1 = ViewBindings.findChildViewById(rootView, id);
      if (questionText1 == null) {
        break missingId;
      }

      id = R.id.questionText2;
      TextView questionText2 = ViewBindings.findChildViewById(rootView, id);
      if (questionText2 == null) {
        break missingId;
      }

      id = R.id.questionThumbnail1;
      FaceAndColorDetectImageView questionThumbnail1 = ViewBindings.findChildViewById(rootView, id);
      if (questionThumbnail1 == null) {
        break missingId;
      }

      id = R.id.questionThumbnail2;
      FaceAndColorDetectImageView questionThumbnail2 = ViewBindings.findChildViewById(rootView, id);
      if (questionThumbnail2 == null) {
        break missingId;
      }

      id = R.id.scoreView;
      ScoreView scoreView = ViewBindings.findChildViewById(rootView, id);
      if (scoreView == null) {
        break missingId;
      }

      id = R.id.whichCameFirstText;
      TextView whichCameFirstText = ViewBindings.findChildViewById(rootView, id);
      if (whichCameFirstText == null) {
        break missingId;
      }

      return new FragmentOnThisDayGamePlayBinding((CoordinatorLayout) rootView, bottomContent,
          centerContent, correctIncorrectText, currentQuestionContainer, errorView,
          nextQuestionText, pointsText, progressBar, questionCard1, questionCard2,
          questionContainer1, questionContainer2, questionDate1, questionDate2, questionScroll1,
          questionScroll2, questionStatusIcon1, questionStatusIcon2, questionText1, questionText2,
          questionThumbnail1, questionThumbnail2, scoreView, whichCameFirstText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
