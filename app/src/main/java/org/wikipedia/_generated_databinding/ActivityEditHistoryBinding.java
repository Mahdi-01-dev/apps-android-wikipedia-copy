// Generated by view binder compiler. Do not edit!
package org.wikipedia.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wikipedia.R;
import org.wikipedia.views.WikiSwipeRefreshLayout;

public final class ActivityEditHistoryBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button compareButton;

  @NonNull
  public final Button compareConfirmButton;

  @NonNull
  public final ConstraintLayout compareContainer;

  @NonNull
  public final MaterialCardView compareFromCard;

  @NonNull
  public final TextView compareFromText;

  @NonNull
  public final MaterialCardView compareToCard;

  @NonNull
  public final TextView compareToText;

  @NonNull
  public final CoordinatorLayout editHistoryCoordinator;

  @NonNull
  public final TextView editHistoryEmptySearchMessage;

  @NonNull
  public final RecyclerView editHistoryRecycler;

  @NonNull
  public final WikiSwipeRefreshLayout editHistoryRefreshContainer;

  @NonNull
  public final LinearLayout editHistorySearchEmptyContainer;

  @NonNull
  public final TextView editHistorySearchEmptyText;

  @NonNull
  public final MaterialToolbar toolbar;

  private ActivityEditHistoryBinding(@NonNull LinearLayout rootView, @NonNull Button compareButton,
      @NonNull Button compareConfirmButton, @NonNull ConstraintLayout compareContainer,
      @NonNull MaterialCardView compareFromCard, @NonNull TextView compareFromText,
      @NonNull MaterialCardView compareToCard, @NonNull TextView compareToText,
      @NonNull CoordinatorLayout editHistoryCoordinator,
      @NonNull TextView editHistoryEmptySearchMessage, @NonNull RecyclerView editHistoryRecycler,
      @NonNull WikiSwipeRefreshLayout editHistoryRefreshContainer,
      @NonNull LinearLayout editHistorySearchEmptyContainer,
      @NonNull TextView editHistorySearchEmptyText, @NonNull MaterialToolbar toolbar) {
    this.rootView = rootView;
    this.compareButton = compareButton;
    this.compareConfirmButton = compareConfirmButton;
    this.compareContainer = compareContainer;
    this.compareFromCard = compareFromCard;
    this.compareFromText = compareFromText;
    this.compareToCard = compareToCard;
    this.compareToText = compareToText;
    this.editHistoryCoordinator = editHistoryCoordinator;
    this.editHistoryEmptySearchMessage = editHistoryEmptySearchMessage;
    this.editHistoryRecycler = editHistoryRecycler;
    this.editHistoryRefreshContainer = editHistoryRefreshContainer;
    this.editHistorySearchEmptyContainer = editHistorySearchEmptyContainer;
    this.editHistorySearchEmptyText = editHistorySearchEmptyText;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityEditHistoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityEditHistoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_edit_history, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityEditHistoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.compareButton;
      Button compareButton = ViewBindings.findChildViewById(rootView, id);
      if (compareButton == null) {
        break missingId;
      }

      id = R.id.compareConfirmButton;
      Button compareConfirmButton = ViewBindings.findChildViewById(rootView, id);
      if (compareConfirmButton == null) {
        break missingId;
      }

      id = R.id.compareContainer;
      ConstraintLayout compareContainer = ViewBindings.findChildViewById(rootView, id);
      if (compareContainer == null) {
        break missingId;
      }

      id = R.id.compareFromCard;
      MaterialCardView compareFromCard = ViewBindings.findChildViewById(rootView, id);
      if (compareFromCard == null) {
        break missingId;
      }

      id = R.id.compareFromText;
      TextView compareFromText = ViewBindings.findChildViewById(rootView, id);
      if (compareFromText == null) {
        break missingId;
      }

      id = R.id.compareToCard;
      MaterialCardView compareToCard = ViewBindings.findChildViewById(rootView, id);
      if (compareToCard == null) {
        break missingId;
      }

      id = R.id.compareToText;
      TextView compareToText = ViewBindings.findChildViewById(rootView, id);
      if (compareToText == null) {
        break missingId;
      }

      id = R.id.edit_history_coordinator;
      CoordinatorLayout editHistoryCoordinator = ViewBindings.findChildViewById(rootView, id);
      if (editHistoryCoordinator == null) {
        break missingId;
      }

      id = R.id.edit_history_empty_search_message;
      TextView editHistoryEmptySearchMessage = ViewBindings.findChildViewById(rootView, id);
      if (editHistoryEmptySearchMessage == null) {
        break missingId;
      }

      id = R.id.edit_history_recycler;
      RecyclerView editHistoryRecycler = ViewBindings.findChildViewById(rootView, id);
      if (editHistoryRecycler == null) {
        break missingId;
      }

      id = R.id.edit_history_refresh_container;
      WikiSwipeRefreshLayout editHistoryRefreshContainer = ViewBindings.findChildViewById(rootView, id);
      if (editHistoryRefreshContainer == null) {
        break missingId;
      }

      id = R.id.edit_history_search_empty_container;
      LinearLayout editHistorySearchEmptyContainer = ViewBindings.findChildViewById(rootView, id);
      if (editHistorySearchEmptyContainer == null) {
        break missingId;
      }

      id = R.id.edit_history_search_empty_text;
      TextView editHistorySearchEmptyText = ViewBindings.findChildViewById(rootView, id);
      if (editHistorySearchEmptyText == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityEditHistoryBinding((LinearLayout) rootView, compareButton,
          compareConfirmButton, compareContainer, compareFromCard, compareFromText, compareToCard,
          compareToText, editHistoryCoordinator, editHistoryEmptySearchMessage, editHistoryRecycler,
          editHistoryRefreshContainer, editHistorySearchEmptyContainer, editHistorySearchEmptyText,
          toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
