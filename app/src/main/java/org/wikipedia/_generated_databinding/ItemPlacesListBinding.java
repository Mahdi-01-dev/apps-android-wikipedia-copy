// Generated by view binder compiler. Do not edit!
package org.wikipedia.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.imageview.ShapeableImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wikipedia.R;
import org.wikipedia.views.GoneIfEmptyTextView;

public final class ItemPlacesListBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final GoneIfEmptyTextView listItemDescription;

  @NonNull
  public final TextView listItemDistance;

  @NonNull
  public final ShapeableImageView listItemThumbnail;

  @NonNull
  public final TextView listItemTitle;

  private ItemPlacesListBinding(@NonNull ConstraintLayout rootView,
      @NonNull GoneIfEmptyTextView listItemDescription, @NonNull TextView listItemDistance,
      @NonNull ShapeableImageView listItemThumbnail, @NonNull TextView listItemTitle) {
    this.rootView = rootView;
    this.listItemDescription = listItemDescription;
    this.listItemDistance = listItemDistance;
    this.listItemThumbnail = listItemThumbnail;
    this.listItemTitle = listItemTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemPlacesListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemPlacesListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_places_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemPlacesListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.listItemDescription;
      GoneIfEmptyTextView listItemDescription = ViewBindings.findChildViewById(rootView, id);
      if (listItemDescription == null) {
        break missingId;
      }

      id = R.id.listItemDistance;
      TextView listItemDistance = ViewBindings.findChildViewById(rootView, id);
      if (listItemDistance == null) {
        break missingId;
      }

      id = R.id.listItemThumbnail;
      ShapeableImageView listItemThumbnail = ViewBindings.findChildViewById(rootView, id);
      if (listItemThumbnail == null) {
        break missingId;
      }

      id = R.id.listItemTitle;
      TextView listItemTitle = ViewBindings.findChildViewById(rootView, id);
      if (listItemTitle == null) {
        break missingId;
      }

      return new ItemPlacesListBinding((ConstraintLayout) rootView, listItemDescription,
          listItemDistance, listItemThumbnail, listItemTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
