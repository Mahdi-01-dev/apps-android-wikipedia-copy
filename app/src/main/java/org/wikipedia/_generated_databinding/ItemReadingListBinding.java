// Generated by view binder compiler. Do not edit!
package org.wikipedia.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.flexbox.FlexboxLayout;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.imageview.ShapeableImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wikipedia.R;

public final class ItemReadingListBinding implements ViewBinding {
  @NonNull
  private final View rootView;

  @NonNull
  public final ShapeableImageView defaultListEmptyImage;

  @NonNull
  public final FrameLayout endContainer;

  @NonNull
  public final TextView itemDescription;

  @NonNull
  public final ShapeableImageView itemImage1;

  @NonNull
  public final ShapeableImageView itemImage2;

  @NonNull
  public final ShapeableImageView itemImage3;

  @NonNull
  public final ShapeableImageView itemImage4;

  @NonNull
  public final ImageView itemNotificationButton;

  @NonNull
  public final ImageView itemOverflowMenu;

  @NonNull
  public final MaterialButton itemPreviewSaveButton;

  @NonNull
  public final TextView itemReadingListStatisticalDescription;

  @NonNull
  public final FlexboxLayout itemRecommendedListInfoContainer;

  @NonNull
  public final TextView itemRecommendedListMadeFor;

  @NonNull
  public final TextView itemRecommendedListNumberOfArticles;

  @NonNull
  public final ImageView itemSaveToListButton;

  @NonNull
  public final CheckBox itemSelectCheckbox;

  @NonNull
  public final ImageView itemShareButton;

  @NonNull
  public final TextView itemTitle;

  @NonNull
  public final FlexboxLayout itemTitleContainer;

  @NonNull
  public final TextView itemTitleIndicator;

  private ItemReadingListBinding(@NonNull View rootView,
      @NonNull ShapeableImageView defaultListEmptyImage, @NonNull FrameLayout endContainer,
      @NonNull TextView itemDescription, @NonNull ShapeableImageView itemImage1,
      @NonNull ShapeableImageView itemImage2, @NonNull ShapeableImageView itemImage3,
      @NonNull ShapeableImageView itemImage4, @NonNull ImageView itemNotificationButton,
      @NonNull ImageView itemOverflowMenu, @NonNull MaterialButton itemPreviewSaveButton,
      @NonNull TextView itemReadingListStatisticalDescription,
      @NonNull FlexboxLayout itemRecommendedListInfoContainer,
      @NonNull TextView itemRecommendedListMadeFor,
      @NonNull TextView itemRecommendedListNumberOfArticles,
      @NonNull ImageView itemSaveToListButton, @NonNull CheckBox itemSelectCheckbox,
      @NonNull ImageView itemShareButton, @NonNull TextView itemTitle,
      @NonNull FlexboxLayout itemTitleContainer, @NonNull TextView itemTitleIndicator) {
    this.rootView = rootView;
    this.defaultListEmptyImage = defaultListEmptyImage;
    this.endContainer = endContainer;
    this.itemDescription = itemDescription;
    this.itemImage1 = itemImage1;
    this.itemImage2 = itemImage2;
    this.itemImage3 = itemImage3;
    this.itemImage4 = itemImage4;
    this.itemNotificationButton = itemNotificationButton;
    this.itemOverflowMenu = itemOverflowMenu;
    this.itemPreviewSaveButton = itemPreviewSaveButton;
    this.itemReadingListStatisticalDescription = itemReadingListStatisticalDescription;
    this.itemRecommendedListInfoContainer = itemRecommendedListInfoContainer;
    this.itemRecommendedListMadeFor = itemRecommendedListMadeFor;
    this.itemRecommendedListNumberOfArticles = itemRecommendedListNumberOfArticles;
    this.itemSaveToListButton = itemSaveToListButton;
    this.itemSelectCheckbox = itemSelectCheckbox;
    this.itemShareButton = itemShareButton;
    this.itemTitle = itemTitle;
    this.itemTitleContainer = itemTitleContainer;
    this.itemTitleIndicator = itemTitleIndicator;
  }

  @Override
  @NonNull
  public View getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemReadingListBinding inflate(@NonNull LayoutInflater inflater,
      @NonNull ViewGroup parent) {
    if (parent == null) {
      throw new NullPointerException("parent");
    }
    inflater.inflate(R.layout.item_reading_list, parent);
    return bind(parent);
  }

  @NonNull
  public static ItemReadingListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.default_list_empty_image;
      ShapeableImageView defaultListEmptyImage = ViewBindings.findChildViewById(rootView, id);
      if (defaultListEmptyImage == null) {
        break missingId;
      }

      id = R.id.endContainer;
      FrameLayout endContainer = ViewBindings.findChildViewById(rootView, id);
      if (endContainer == null) {
        break missingId;
      }

      id = R.id.item_description;
      TextView itemDescription = ViewBindings.findChildViewById(rootView, id);
      if (itemDescription == null) {
        break missingId;
      }

      id = R.id.item_image_1;
      ShapeableImageView itemImage1 = ViewBindings.findChildViewById(rootView, id);
      if (itemImage1 == null) {
        break missingId;
      }

      id = R.id.item_image_2;
      ShapeableImageView itemImage2 = ViewBindings.findChildViewById(rootView, id);
      if (itemImage2 == null) {
        break missingId;
      }

      id = R.id.item_image_3;
      ShapeableImageView itemImage3 = ViewBindings.findChildViewById(rootView, id);
      if (itemImage3 == null) {
        break missingId;
      }

      id = R.id.item_image_4;
      ShapeableImageView itemImage4 = ViewBindings.findChildViewById(rootView, id);
      if (itemImage4 == null) {
        break missingId;
      }

      id = R.id.item_notification_button;
      ImageView itemNotificationButton = ViewBindings.findChildViewById(rootView, id);
      if (itemNotificationButton == null) {
        break missingId;
      }

      id = R.id.item_overflow_menu;
      ImageView itemOverflowMenu = ViewBindings.findChildViewById(rootView, id);
      if (itemOverflowMenu == null) {
        break missingId;
      }

      id = R.id.item_preview_save_button;
      MaterialButton itemPreviewSaveButton = ViewBindings.findChildViewById(rootView, id);
      if (itemPreviewSaveButton == null) {
        break missingId;
      }

      id = R.id.item_reading_list_statistical_description;
      TextView itemReadingListStatisticalDescription = ViewBindings.findChildViewById(rootView, id);
      if (itemReadingListStatisticalDescription == null) {
        break missingId;
      }

      id = R.id.item_recommended_list_info_container;
      FlexboxLayout itemRecommendedListInfoContainer = ViewBindings.findChildViewById(rootView, id);
      if (itemRecommendedListInfoContainer == null) {
        break missingId;
      }

      id = R.id.item_recommended_list_made_for;
      TextView itemRecommendedListMadeFor = ViewBindings.findChildViewById(rootView, id);
      if (itemRecommendedListMadeFor == null) {
        break missingId;
      }

      id = R.id.item_recommended_list_number_of_articles;
      TextView itemRecommendedListNumberOfArticles = ViewBindings.findChildViewById(rootView, id);
      if (itemRecommendedListNumberOfArticles == null) {
        break missingId;
      }

      id = R.id.item_save_to_list_button;
      ImageView itemSaveToListButton = ViewBindings.findChildViewById(rootView, id);
      if (itemSaveToListButton == null) {
        break missingId;
      }

      id = R.id.item_select_checkbox;
      CheckBox itemSelectCheckbox = ViewBindings.findChildViewById(rootView, id);
      if (itemSelectCheckbox == null) {
        break missingId;
      }

      id = R.id.item_share_button;
      ImageView itemShareButton = ViewBindings.findChildViewById(rootView, id);
      if (itemShareButton == null) {
        break missingId;
      }

      id = R.id.item_title;
      TextView itemTitle = ViewBindings.findChildViewById(rootView, id);
      if (itemTitle == null) {
        break missingId;
      }

      id = R.id.item_title_container;
      FlexboxLayout itemTitleContainer = ViewBindings.findChildViewById(rootView, id);
      if (itemTitleContainer == null) {
        break missingId;
      }

      id = R.id.item_title_indicator;
      TextView itemTitleIndicator = ViewBindings.findChildViewById(rootView, id);
      if (itemTitleIndicator == null) {
        break missingId;
      }

      return new ItemReadingListBinding(rootView, defaultListEmptyImage, endContainer,
          itemDescription, itemImage1, itemImage2, itemImage3, itemImage4, itemNotificationButton,
          itemOverflowMenu, itemPreviewSaveButton, itemReadingListStatisticalDescription,
          itemRecommendedListInfoContainer, itemRecommendedListMadeFor,
          itemRecommendedListNumberOfArticles, itemSaveToListButton, itemSelectCheckbox,
          itemShareButton, itemTitle, itemTitleContainer, itemTitleIndicator);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
