// Generated by view binder compiler. Do not edit!
package org.wikipedia.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wikipedia.R;
import org.wikipedia.views.FaceAndColorDetectImageView;
import org.wikipedia.views.GoneIfEmptyTextView;
import org.wikipedia.views.ImageDetailHorizontalView;
import org.wikipedia.views.WikiErrorView;

public final class FragmentSuggestedEditsCardsItemBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final View accentSideBar;

  @NonNull
  public final LinearLayout cardClickArea;

  @NonNull
  public final ScrollView cardItemContainer;

  @NonNull
  public final WikiErrorView cardItemErrorView;

  @NonNull
  public final ProgressBar cardItemProgressBar;

  @NonNull
  public final FrameLayout suggestedEditsItemRootView;

  @NonNull
  public final LinearLayout viewArticleContainer;

  @NonNull
  public final TextView viewArticleExtract;

  @NonNull
  public final FaceAndColorDetectImageView viewArticleImage;

  @NonNull
  public final LinearLayout viewArticleImagePlaceholder;

  @NonNull
  public final GoneIfEmptyTextView viewArticleSubtitle;

  @NonNull
  public final LinearLayout viewArticleSubtitleContainer;

  @NonNull
  public final TextView viewArticleTitle;

  @NonNull
  public final ImageDetailHorizontalView viewImageArtist;

  @NonNull
  public final ImageDetailHorizontalView viewImageDate;

  @NonNull
  public final ImageDetailHorizontalView viewImageFileName;

  @NonNull
  public final ImageDetailHorizontalView viewImageLicense;

  @NonNull
  public final ImageDetailHorizontalView viewImageSource;

  @NonNull
  public final LinearLayout viewImageSummaryContainer;

  private FragmentSuggestedEditsCardsItemBinding(@NonNull FrameLayout rootView,
      @NonNull View accentSideBar, @NonNull LinearLayout cardClickArea,
      @NonNull ScrollView cardItemContainer, @NonNull WikiErrorView cardItemErrorView,
      @NonNull ProgressBar cardItemProgressBar, @NonNull FrameLayout suggestedEditsItemRootView,
      @NonNull LinearLayout viewArticleContainer, @NonNull TextView viewArticleExtract,
      @NonNull FaceAndColorDetectImageView viewArticleImage,
      @NonNull LinearLayout viewArticleImagePlaceholder,
      @NonNull GoneIfEmptyTextView viewArticleSubtitle,
      @NonNull LinearLayout viewArticleSubtitleContainer, @NonNull TextView viewArticleTitle,
      @NonNull ImageDetailHorizontalView viewImageArtist,
      @NonNull ImageDetailHorizontalView viewImageDate,
      @NonNull ImageDetailHorizontalView viewImageFileName,
      @NonNull ImageDetailHorizontalView viewImageLicense,
      @NonNull ImageDetailHorizontalView viewImageSource,
      @NonNull LinearLayout viewImageSummaryContainer) {
    this.rootView = rootView;
    this.accentSideBar = accentSideBar;
    this.cardClickArea = cardClickArea;
    this.cardItemContainer = cardItemContainer;
    this.cardItemErrorView = cardItemErrorView;
    this.cardItemProgressBar = cardItemProgressBar;
    this.suggestedEditsItemRootView = suggestedEditsItemRootView;
    this.viewArticleContainer = viewArticleContainer;
    this.viewArticleExtract = viewArticleExtract;
    this.viewArticleImage = viewArticleImage;
    this.viewArticleImagePlaceholder = viewArticleImagePlaceholder;
    this.viewArticleSubtitle = viewArticleSubtitle;
    this.viewArticleSubtitleContainer = viewArticleSubtitleContainer;
    this.viewArticleTitle = viewArticleTitle;
    this.viewImageArtist = viewImageArtist;
    this.viewImageDate = viewImageDate;
    this.viewImageFileName = viewImageFileName;
    this.viewImageLicense = viewImageLicense;
    this.viewImageSource = viewImageSource;
    this.viewImageSummaryContainer = viewImageSummaryContainer;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSuggestedEditsCardsItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSuggestedEditsCardsItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_suggested_edits_cards_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSuggestedEditsCardsItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.accentSideBar;
      View accentSideBar = ViewBindings.findChildViewById(rootView, id);
      if (accentSideBar == null) {
        break missingId;
      }

      id = R.id.cardClickArea;
      LinearLayout cardClickArea = ViewBindings.findChildViewById(rootView, id);
      if (cardClickArea == null) {
        break missingId;
      }

      id = R.id.cardItemContainer;
      ScrollView cardItemContainer = ViewBindings.findChildViewById(rootView, id);
      if (cardItemContainer == null) {
        break missingId;
      }

      id = R.id.cardItemErrorView;
      WikiErrorView cardItemErrorView = ViewBindings.findChildViewById(rootView, id);
      if (cardItemErrorView == null) {
        break missingId;
      }

      id = R.id.cardItemProgressBar;
      ProgressBar cardItemProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (cardItemProgressBar == null) {
        break missingId;
      }

      FrameLayout suggestedEditsItemRootView = (FrameLayout) rootView;

      id = R.id.viewArticleContainer;
      LinearLayout viewArticleContainer = ViewBindings.findChildViewById(rootView, id);
      if (viewArticleContainer == null) {
        break missingId;
      }

      id = R.id.viewArticleExtract;
      TextView viewArticleExtract = ViewBindings.findChildViewById(rootView, id);
      if (viewArticleExtract == null) {
        break missingId;
      }

      id = R.id.viewArticleImage;
      FaceAndColorDetectImageView viewArticleImage = ViewBindings.findChildViewById(rootView, id);
      if (viewArticleImage == null) {
        break missingId;
      }

      id = R.id.viewArticleImagePlaceholder;
      LinearLayout viewArticleImagePlaceholder = ViewBindings.findChildViewById(rootView, id);
      if (viewArticleImagePlaceholder == null) {
        break missingId;
      }

      id = R.id.viewArticleSubtitle;
      GoneIfEmptyTextView viewArticleSubtitle = ViewBindings.findChildViewById(rootView, id);
      if (viewArticleSubtitle == null) {
        break missingId;
      }

      id = R.id.viewArticleSubtitleContainer;
      LinearLayout viewArticleSubtitleContainer = ViewBindings.findChildViewById(rootView, id);
      if (viewArticleSubtitleContainer == null) {
        break missingId;
      }

      id = R.id.viewArticleTitle;
      TextView viewArticleTitle = ViewBindings.findChildViewById(rootView, id);
      if (viewArticleTitle == null) {
        break missingId;
      }

      id = R.id.viewImageArtist;
      ImageDetailHorizontalView viewImageArtist = ViewBindings.findChildViewById(rootView, id);
      if (viewImageArtist == null) {
        break missingId;
      }

      id = R.id.viewImageDate;
      ImageDetailHorizontalView viewImageDate = ViewBindings.findChildViewById(rootView, id);
      if (viewImageDate == null) {
        break missingId;
      }

      id = R.id.viewImageFileName;
      ImageDetailHorizontalView viewImageFileName = ViewBindings.findChildViewById(rootView, id);
      if (viewImageFileName == null) {
        break missingId;
      }

      id = R.id.viewImageLicense;
      ImageDetailHorizontalView viewImageLicense = ViewBindings.findChildViewById(rootView, id);
      if (viewImageLicense == null) {
        break missingId;
      }

      id = R.id.viewImageSource;
      ImageDetailHorizontalView viewImageSource = ViewBindings.findChildViewById(rootView, id);
      if (viewImageSource == null) {
        break missingId;
      }

      id = R.id.viewImageSummaryContainer;
      LinearLayout viewImageSummaryContainer = ViewBindings.findChildViewById(rootView, id);
      if (viewImageSummaryContainer == null) {
        break missingId;
      }

      return new FragmentSuggestedEditsCardsItemBinding((FrameLayout) rootView, accentSideBar,
          cardClickArea, cardItemContainer, cardItemErrorView, cardItemProgressBar,
          suggestedEditsItemRootView, viewArticleContainer, viewArticleExtract, viewArticleImage,
          viewArticleImagePlaceholder, viewArticleSubtitle, viewArticleSubtitleContainer,
          viewArticleTitle, viewImageArtist, viewImageDate, viewImageFileName, viewImageLicense,
          viewImageSource, viewImageSummaryContainer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
