// Generated by view binder compiler. Do not edit!
package org.wikipedia.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wikipedia.R;
import org.wikipedia.page.PageActionTabLayout;
import org.wikipedia.page.leadimages.PageHeaderView;
import org.wikipedia.views.ObservableWebView;
import org.wikipedia.views.WikiErrorView;
import org.wikipedia.views.WikiSwipeRefreshLayout;

public final class FragmentPageBinding implements ViewBinding {
  @NonNull
  private final WikiSwipeRefreshLayout rootView;

  @NonNull
  public final CoordinatorLayout fragmentPageCoordinator;

  @NonNull
  public final FrameLayout pageActionsTabContainer;

  @NonNull
  public final PageActionTabLayout pageActionsTabLayout;

  @NonNull
  public final CoordinatorLayout pageContentsContainer;

  @NonNull
  public final WikiErrorView pageError;

  @NonNull
  public final PageHeaderView pageHeaderView;

  @NonNull
  public final ImageView pageImageTransitionHolder;

  @NonNull
  public final WikiSwipeRefreshLayout pageRefreshContainer;

  @NonNull
  public final ObservableWebView pageWebView;

  private FragmentPageBinding(@NonNull WikiSwipeRefreshLayout rootView,
      @NonNull CoordinatorLayout fragmentPageCoordinator,
      @NonNull FrameLayout pageActionsTabContainer,
      @NonNull PageActionTabLayout pageActionsTabLayout,
      @NonNull CoordinatorLayout pageContentsContainer, @NonNull WikiErrorView pageError,
      @NonNull PageHeaderView pageHeaderView, @NonNull ImageView pageImageTransitionHolder,
      @NonNull WikiSwipeRefreshLayout pageRefreshContainer,
      @NonNull ObservableWebView pageWebView) {
    this.rootView = rootView;
    this.fragmentPageCoordinator = fragmentPageCoordinator;
    this.pageActionsTabContainer = pageActionsTabContainer;
    this.pageActionsTabLayout = pageActionsTabLayout;
    this.pageContentsContainer = pageContentsContainer;
    this.pageError = pageError;
    this.pageHeaderView = pageHeaderView;
    this.pageImageTransitionHolder = pageImageTransitionHolder;
    this.pageRefreshContainer = pageRefreshContainer;
    this.pageWebView = pageWebView;
  }

  @Override
  @NonNull
  public WikiSwipeRefreshLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_page, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.fragment_page_coordinator;
      CoordinatorLayout fragmentPageCoordinator = ViewBindings.findChildViewById(rootView, id);
      if (fragmentPageCoordinator == null) {
        break missingId;
      }

      id = R.id.page_actions_tab_container;
      FrameLayout pageActionsTabContainer = ViewBindings.findChildViewById(rootView, id);
      if (pageActionsTabContainer == null) {
        break missingId;
      }

      id = R.id.page_actions_tab_layout;
      PageActionTabLayout pageActionsTabLayout = ViewBindings.findChildViewById(rootView, id);
      if (pageActionsTabLayout == null) {
        break missingId;
      }

      id = R.id.page_contents_container;
      CoordinatorLayout pageContentsContainer = ViewBindings.findChildViewById(rootView, id);
      if (pageContentsContainer == null) {
        break missingId;
      }

      id = R.id.page_error;
      WikiErrorView pageError = ViewBindings.findChildViewById(rootView, id);
      if (pageError == null) {
        break missingId;
      }

      id = R.id.page_header_view;
      PageHeaderView pageHeaderView = ViewBindings.findChildViewById(rootView, id);
      if (pageHeaderView == null) {
        break missingId;
      }

      id = R.id.page_image_transition_holder;
      ImageView pageImageTransitionHolder = ViewBindings.findChildViewById(rootView, id);
      if (pageImageTransitionHolder == null) {
        break missingId;
      }

      WikiSwipeRefreshLayout pageRefreshContainer = (WikiSwipeRefreshLayout) rootView;

      id = R.id.page_web_view;
      ObservableWebView pageWebView = ViewBindings.findChildViewById(rootView, id);
      if (pageWebView == null) {
        break missingId;
      }

      return new FragmentPageBinding((WikiSwipeRefreshLayout) rootView, fragmentPageCoordinator,
          pageActionsTabContainer, pageActionsTabLayout, pageContentsContainer, pageError,
          pageHeaderView, pageImageTransitionHolder, pageRefreshContainer, pageWebView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
