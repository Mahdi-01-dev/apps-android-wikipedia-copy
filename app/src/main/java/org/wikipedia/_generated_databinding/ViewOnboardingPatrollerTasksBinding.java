// Generated by view binder compiler. Do not edit!
package org.wikipedia.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wikipedia.R;

public final class ViewOnboardingPatrollerTasksBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView talkContent;

  @NonNull
  public final ImageView talkImage;

  @NonNull
  public final TextView talkTitle;

  @NonNull
  public final TextView thankContent;

  @NonNull
  public final ImageView thankImage;

  @NonNull
  public final TextView thankTitle;

  @NonNull
  public final TextView undoContent;

  @NonNull
  public final ImageView undoImage;

  @NonNull
  public final TextView undoTitle;

  @NonNull
  public final TextView watchContent;

  @NonNull
  public final ImageView watchImage;

  @NonNull
  public final TextView watchTitle;

  private ViewOnboardingPatrollerTasksBinding(@NonNull LinearLayout rootView,
      @NonNull TextView talkContent, @NonNull ImageView talkImage, @NonNull TextView talkTitle,
      @NonNull TextView thankContent, @NonNull ImageView thankImage, @NonNull TextView thankTitle,
      @NonNull TextView undoContent, @NonNull ImageView undoImage, @NonNull TextView undoTitle,
      @NonNull TextView watchContent, @NonNull ImageView watchImage, @NonNull TextView watchTitle) {
    this.rootView = rootView;
    this.talkContent = talkContent;
    this.talkImage = talkImage;
    this.talkTitle = talkTitle;
    this.thankContent = thankContent;
    this.thankImage = thankImage;
    this.thankTitle = thankTitle;
    this.undoContent = undoContent;
    this.undoImage = undoImage;
    this.undoTitle = undoTitle;
    this.watchContent = watchContent;
    this.watchImage = watchImage;
    this.watchTitle = watchTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ViewOnboardingPatrollerTasksBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ViewOnboardingPatrollerTasksBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.view_onboarding_patroller_tasks, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ViewOnboardingPatrollerTasksBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.talkContent;
      TextView talkContent = ViewBindings.findChildViewById(rootView, id);
      if (talkContent == null) {
        break missingId;
      }

      id = R.id.talkImage;
      ImageView talkImage = ViewBindings.findChildViewById(rootView, id);
      if (talkImage == null) {
        break missingId;
      }

      id = R.id.talkTitle;
      TextView talkTitle = ViewBindings.findChildViewById(rootView, id);
      if (talkTitle == null) {
        break missingId;
      }

      id = R.id.thankContent;
      TextView thankContent = ViewBindings.findChildViewById(rootView, id);
      if (thankContent == null) {
        break missingId;
      }

      id = R.id.thankImage;
      ImageView thankImage = ViewBindings.findChildViewById(rootView, id);
      if (thankImage == null) {
        break missingId;
      }

      id = R.id.thankTitle;
      TextView thankTitle = ViewBindings.findChildViewById(rootView, id);
      if (thankTitle == null) {
        break missingId;
      }

      id = R.id.undoContent;
      TextView undoContent = ViewBindings.findChildViewById(rootView, id);
      if (undoContent == null) {
        break missingId;
      }

      id = R.id.undoImage;
      ImageView undoImage = ViewBindings.findChildViewById(rootView, id);
      if (undoImage == null) {
        break missingId;
      }

      id = R.id.undoTitle;
      TextView undoTitle = ViewBindings.findChildViewById(rootView, id);
      if (undoTitle == null) {
        break missingId;
      }

      id = R.id.watchContent;
      TextView watchContent = ViewBindings.findChildViewById(rootView, id);
      if (watchContent == null) {
        break missingId;
      }

      id = R.id.watchImage;
      ImageView watchImage = ViewBindings.findChildViewById(rootView, id);
      if (watchImage == null) {
        break missingId;
      }

      id = R.id.watchTitle;
      TextView watchTitle = ViewBindings.findChildViewById(rootView, id);
      if (watchTitle == null) {
        break missingId;
      }

      return new ViewOnboardingPatrollerTasksBinding((LinearLayout) rootView, talkContent,
          talkImage, talkTitle, thankContent, thankImage, thankTitle, undoContent, undoImage,
          undoTitle, watchContent, watchImage, watchTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
