// Generated by view binder compiler. Do not edit!
package org.wikipedia.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wikipedia.R;
import org.wikipedia.views.FaceAndColorDetectImageView;
import org.wikipedia.views.WikiCardView;

public final class DialogOnThisDayGameArticleBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final TextView answerStatus;

  @NonNull
  public final TextView articleDescription;

  @NonNull
  public final TextView articleSummary;

  @NonNull
  public final WikiCardView articleSummaryContainer;

  @NonNull
  public final FaceAndColorDetectImageView articleThumbnail;

  @NonNull
  public final TextView articleTitle;

  @NonNull
  public final ConstraintLayout dialogDetailContainer;

  @NonNull
  public final ScrollView dialogScrollContainer;

  @NonNull
  public final MaterialButton readArticleButton;

  @NonNull
  public final WikiCardView relatedEventContainer;

  @NonNull
  public final TextView relatedEventInfo;

  @NonNull
  public final TextView relatedEventTitle;

  @NonNull
  public final ImageView saveButton;

  @NonNull
  public final WikiCardView saveButtonContainer;

  @NonNull
  public final ImageView shareButton;

  @NonNull
  public final WikiCardView shareButtonContainer;

  private DialogOnThisDayGameArticleBinding(@NonNull ScrollView rootView,
      @NonNull TextView answerStatus, @NonNull TextView articleDescription,
      @NonNull TextView articleSummary, @NonNull WikiCardView articleSummaryContainer,
      @NonNull FaceAndColorDetectImageView articleThumbnail, @NonNull TextView articleTitle,
      @NonNull ConstraintLayout dialogDetailContainer, @NonNull ScrollView dialogScrollContainer,
      @NonNull MaterialButton readArticleButton, @NonNull WikiCardView relatedEventContainer,
      @NonNull TextView relatedEventInfo, @NonNull TextView relatedEventTitle,
      @NonNull ImageView saveButton, @NonNull WikiCardView saveButtonContainer,
      @NonNull ImageView shareButton, @NonNull WikiCardView shareButtonContainer) {
    this.rootView = rootView;
    this.answerStatus = answerStatus;
    this.articleDescription = articleDescription;
    this.articleSummary = articleSummary;
    this.articleSummaryContainer = articleSummaryContainer;
    this.articleThumbnail = articleThumbnail;
    this.articleTitle = articleTitle;
    this.dialogDetailContainer = dialogDetailContainer;
    this.dialogScrollContainer = dialogScrollContainer;
    this.readArticleButton = readArticleButton;
    this.relatedEventContainer = relatedEventContainer;
    this.relatedEventInfo = relatedEventInfo;
    this.relatedEventTitle = relatedEventTitle;
    this.saveButton = saveButton;
    this.saveButtonContainer = saveButtonContainer;
    this.shareButton = shareButton;
    this.shareButtonContainer = shareButtonContainer;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogOnThisDayGameArticleBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogOnThisDayGameArticleBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_on_this_day_game_article, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogOnThisDayGameArticleBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.answerStatus;
      TextView answerStatus = ViewBindings.findChildViewById(rootView, id);
      if (answerStatus == null) {
        break missingId;
      }

      id = R.id.articleDescription;
      TextView articleDescription = ViewBindings.findChildViewById(rootView, id);
      if (articleDescription == null) {
        break missingId;
      }

      id = R.id.articleSummary;
      TextView articleSummary = ViewBindings.findChildViewById(rootView, id);
      if (articleSummary == null) {
        break missingId;
      }

      id = R.id.articleSummaryContainer;
      WikiCardView articleSummaryContainer = ViewBindings.findChildViewById(rootView, id);
      if (articleSummaryContainer == null) {
        break missingId;
      }

      id = R.id.articleThumbnail;
      FaceAndColorDetectImageView articleThumbnail = ViewBindings.findChildViewById(rootView, id);
      if (articleThumbnail == null) {
        break missingId;
      }

      id = R.id.articleTitle;
      TextView articleTitle = ViewBindings.findChildViewById(rootView, id);
      if (articleTitle == null) {
        break missingId;
      }

      id = R.id.dialogDetailContainer;
      ConstraintLayout dialogDetailContainer = ViewBindings.findChildViewById(rootView, id);
      if (dialogDetailContainer == null) {
        break missingId;
      }

      ScrollView dialogScrollContainer = (ScrollView) rootView;

      id = R.id.readArticleButton;
      MaterialButton readArticleButton = ViewBindings.findChildViewById(rootView, id);
      if (readArticleButton == null) {
        break missingId;
      }

      id = R.id.relatedEventContainer;
      WikiCardView relatedEventContainer = ViewBindings.findChildViewById(rootView, id);
      if (relatedEventContainer == null) {
        break missingId;
      }

      id = R.id.relatedEventInfo;
      TextView relatedEventInfo = ViewBindings.findChildViewById(rootView, id);
      if (relatedEventInfo == null) {
        break missingId;
      }

      id = R.id.relatedEventTitle;
      TextView relatedEventTitle = ViewBindings.findChildViewById(rootView, id);
      if (relatedEventTitle == null) {
        break missingId;
      }

      id = R.id.saveButton;
      ImageView saveButton = ViewBindings.findChildViewById(rootView, id);
      if (saveButton == null) {
        break missingId;
      }

      id = R.id.saveButtonContainer;
      WikiCardView saveButtonContainer = ViewBindings.findChildViewById(rootView, id);
      if (saveButtonContainer == null) {
        break missingId;
      }

      id = R.id.shareButton;
      ImageView shareButton = ViewBindings.findChildViewById(rootView, id);
      if (shareButton == null) {
        break missingId;
      }

      id = R.id.shareButtonContainer;
      WikiCardView shareButtonContainer = ViewBindings.findChildViewById(rootView, id);
      if (shareButtonContainer == null) {
        break missingId;
      }

      return new DialogOnThisDayGameArticleBinding((ScrollView) rootView, answerStatus,
          articleDescription, articleSummary, articleSummaryContainer, articleThumbnail,
          articleTitle, dialogDetailContainer, dialogScrollContainer, readArticleButton,
          relatedEventContainer, relatedEventInfo, relatedEventTitle, saveButton,
          saveButtonContainer, shareButton, shareButtonContainer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
