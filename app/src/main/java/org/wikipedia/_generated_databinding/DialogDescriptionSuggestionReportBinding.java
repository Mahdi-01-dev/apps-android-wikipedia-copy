// Generated by view binder compiler. Do not edit!
package org.wikipedia.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wikipedia.R;
import org.wikipedia.views.PlainPasteEditText;

public final class DialogDescriptionSuggestionReportBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final CheckBox cannotSeeDescription;

  @NonNull
  public final CheckBox doNotUnderstand;

  @NonNull
  public final CheckBox inappropriateSuggestion;

  @NonNull
  public final CheckBox notEnoughInfo;

  @NonNull
  public final TextInputLayout suggestionReportOther;

  @NonNull
  public final PlainPasteEditText suggestionReportOtherEditText;

  private DialogDescriptionSuggestionReportBinding(@NonNull ScrollView rootView,
      @NonNull CheckBox cannotSeeDescription, @NonNull CheckBox doNotUnderstand,
      @NonNull CheckBox inappropriateSuggestion, @NonNull CheckBox notEnoughInfo,
      @NonNull TextInputLayout suggestionReportOther,
      @NonNull PlainPasteEditText suggestionReportOtherEditText) {
    this.rootView = rootView;
    this.cannotSeeDescription = cannotSeeDescription;
    this.doNotUnderstand = doNotUnderstand;
    this.inappropriateSuggestion = inappropriateSuggestion;
    this.notEnoughInfo = notEnoughInfo;
    this.suggestionReportOther = suggestionReportOther;
    this.suggestionReportOtherEditText = suggestionReportOtherEditText;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogDescriptionSuggestionReportBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogDescriptionSuggestionReportBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_description_suggestion_report, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogDescriptionSuggestionReportBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cannotSeeDescription;
      CheckBox cannotSeeDescription = ViewBindings.findChildViewById(rootView, id);
      if (cannotSeeDescription == null) {
        break missingId;
      }

      id = R.id.doNotUnderstand;
      CheckBox doNotUnderstand = ViewBindings.findChildViewById(rootView, id);
      if (doNotUnderstand == null) {
        break missingId;
      }

      id = R.id.inappropriateSuggestion;
      CheckBox inappropriateSuggestion = ViewBindings.findChildViewById(rootView, id);
      if (inappropriateSuggestion == null) {
        break missingId;
      }

      id = R.id.notEnoughInfo;
      CheckBox notEnoughInfo = ViewBindings.findChildViewById(rootView, id);
      if (notEnoughInfo == null) {
        break missingId;
      }

      id = R.id.suggestionReportOther;
      TextInputLayout suggestionReportOther = ViewBindings.findChildViewById(rootView, id);
      if (suggestionReportOther == null) {
        break missingId;
      }

      id = R.id.suggestionReportOtherEditText;
      PlainPasteEditText suggestionReportOtherEditText = ViewBindings.findChildViewById(rootView, id);
      if (suggestionReportOtherEditText == null) {
        break missingId;
      }

      return new DialogDescriptionSuggestionReportBinding((ScrollView) rootView,
          cannotSeeDescription, doNotUnderstand, inappropriateSuggestion, notEnoughInfo,
          suggestionReportOther, suggestionReportOtherEditText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
