// Generated by view binder compiler. Do not edit!
package org.wikipedia.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.CollapsingToolbarLayout;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.progressindicator.LinearProgressIndicator;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wikipedia.R;
import org.wikipedia.readinglist.ReadingListHeaderView;
import org.wikipedia.views.SearchEmptyView;
import org.wikipedia.views.WikiErrorView;
import org.wikipedia.views.WikiSwipeRefreshLayout;

public final class FragmentReadingListBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final WikiErrorView errorView;

  @NonNull
  public final CoordinatorLayout fragmentReadingListCoordinator;

  @NonNull
  public final LinearProgressIndicator progressBar;

  @NonNull
  public final AppBarLayout readingListAppBar;

  @NonNull
  public final TextView readingListEmptyText;

  @NonNull
  public final ReadingListHeaderView readingListHeader;

  @NonNull
  public final RecyclerView readingListRecyclerView;

  @NonNull
  public final WikiSwipeRefreshLayout readingListSwipeRefresh;

  @NonNull
  public final MaterialToolbar readingListToolbar;

  @NonNull
  public final CollapsingToolbarLayout readingListToolbarContainer;

  @NonNull
  public final SearchEmptyView searchEmptyView;

  private FragmentReadingListBinding(@NonNull CoordinatorLayout rootView,
      @NonNull WikiErrorView errorView, @NonNull CoordinatorLayout fragmentReadingListCoordinator,
      @NonNull LinearProgressIndicator progressBar, @NonNull AppBarLayout readingListAppBar,
      @NonNull TextView readingListEmptyText, @NonNull ReadingListHeaderView readingListHeader,
      @NonNull RecyclerView readingListRecyclerView,
      @NonNull WikiSwipeRefreshLayout readingListSwipeRefresh,
      @NonNull MaterialToolbar readingListToolbar,
      @NonNull CollapsingToolbarLayout readingListToolbarContainer,
      @NonNull SearchEmptyView searchEmptyView) {
    this.rootView = rootView;
    this.errorView = errorView;
    this.fragmentReadingListCoordinator = fragmentReadingListCoordinator;
    this.progressBar = progressBar;
    this.readingListAppBar = readingListAppBar;
    this.readingListEmptyText = readingListEmptyText;
    this.readingListHeader = readingListHeader;
    this.readingListRecyclerView = readingListRecyclerView;
    this.readingListSwipeRefresh = readingListSwipeRefresh;
    this.readingListToolbar = readingListToolbar;
    this.readingListToolbarContainer = readingListToolbarContainer;
    this.searchEmptyView = searchEmptyView;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentReadingListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentReadingListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_reading_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentReadingListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.errorView;
      WikiErrorView errorView = ViewBindings.findChildViewById(rootView, id);
      if (errorView == null) {
        break missingId;
      }

      CoordinatorLayout fragmentReadingListCoordinator = (CoordinatorLayout) rootView;

      id = R.id.progressBar;
      LinearProgressIndicator progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.reading_list_app_bar;
      AppBarLayout readingListAppBar = ViewBindings.findChildViewById(rootView, id);
      if (readingListAppBar == null) {
        break missingId;
      }

      id = R.id.reading_list_empty_text;
      TextView readingListEmptyText = ViewBindings.findChildViewById(rootView, id);
      if (readingListEmptyText == null) {
        break missingId;
      }

      id = R.id.reading_list_header;
      ReadingListHeaderView readingListHeader = ViewBindings.findChildViewById(rootView, id);
      if (readingListHeader == null) {
        break missingId;
      }

      id = R.id.reading_list_recycler_view;
      RecyclerView readingListRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (readingListRecyclerView == null) {
        break missingId;
      }

      id = R.id.reading_list_swipe_refresh;
      WikiSwipeRefreshLayout readingListSwipeRefresh = ViewBindings.findChildViewById(rootView, id);
      if (readingListSwipeRefresh == null) {
        break missingId;
      }

      id = R.id.reading_list_toolbar;
      MaterialToolbar readingListToolbar = ViewBindings.findChildViewById(rootView, id);
      if (readingListToolbar == null) {
        break missingId;
      }

      id = R.id.reading_list_toolbar_container;
      CollapsingToolbarLayout readingListToolbarContainer = ViewBindings.findChildViewById(rootView, id);
      if (readingListToolbarContainer == null) {
        break missingId;
      }

      id = R.id.search_empty_view;
      SearchEmptyView searchEmptyView = ViewBindings.findChildViewById(rootView, id);
      if (searchEmptyView == null) {
        break missingId;
      }

      return new FragmentReadingListBinding((CoordinatorLayout) rootView, errorView,
          fragmentReadingListCoordinator, progressBar, readingListAppBar, readingListEmptyText,
          readingListHeader, readingListRecyclerView, readingListSwipeRefresh, readingListToolbar,
          readingListToolbarContainer, searchEmptyView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
