// Generated by view binder compiler. Do not edit!
package org.wikipedia.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wikipedia.R;
import org.wikipedia.views.AppTextView;

public final class ViewImageDetailHorizontalBinding implements ViewBinding {
  @NonNull
  private final View rootView;

  @NonNull
  public final AppTextView detailText;

  @NonNull
  public final TextView titleText;

  private ViewImageDetailHorizontalBinding(@NonNull View rootView, @NonNull AppTextView detailText,
      @NonNull TextView titleText) {
    this.rootView = rootView;
    this.detailText = detailText;
    this.titleText = titleText;
  }

  @Override
  @NonNull
  public View getRoot() {
    return rootView;
  }

  @NonNull
  public static ViewImageDetailHorizontalBinding inflate(@NonNull LayoutInflater inflater,
      @NonNull ViewGroup parent) {
    if (parent == null) {
      throw new NullPointerException("parent");
    }
    inflater.inflate(R.layout.view_image_detail_horizontal, parent);
    return bind(parent);
  }

  @NonNull
  public static ViewImageDetailHorizontalBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.detailText;
      AppTextView detailText = ViewBindings.findChildViewById(rootView, id);
      if (detailText == null) {
        break missingId;
      }

      id = R.id.titleText;
      TextView titleText = ViewBindings.findChildViewById(rootView, id);
      if (titleText == null) {
        break missingId;
      }

      return new ViewImageDetailHorizontalBinding(rootView, detailText, titleText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
