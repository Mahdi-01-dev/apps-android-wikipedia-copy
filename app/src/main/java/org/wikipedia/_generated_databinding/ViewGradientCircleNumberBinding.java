// Generated by view binder compiler. Do not edit!
package org.wikipedia.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wikipedia.R;

public final class ViewGradientCircleNumberBinding implements ViewBinding {
  @NonNull
  private final View rootView;

  @NonNull
  public final TextView baseNumberView;

  @NonNull
  public final TextView numberView;

  private ViewGradientCircleNumberBinding(@NonNull View rootView, @NonNull TextView baseNumberView,
      @NonNull TextView numberView) {
    this.rootView = rootView;
    this.baseNumberView = baseNumberView;
    this.numberView = numberView;
  }

  @Override
  @NonNull
  public View getRoot() {
    return rootView;
  }

  @NonNull
  public static ViewGradientCircleNumberBinding inflate(@NonNull LayoutInflater inflater,
      @NonNull ViewGroup parent) {
    if (parent == null) {
      throw new NullPointerException("parent");
    }
    inflater.inflate(R.layout.view_gradient_circle_number, parent);
    return bind(parent);
  }

  @NonNull
  public static ViewGradientCircleNumberBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.baseNumberView;
      TextView baseNumberView = ViewBindings.findChildViewById(rootView, id);
      if (baseNumberView == null) {
        break missingId;
      }

      id = R.id.numberView;
      TextView numberView = ViewBindings.findChildViewById(rootView, id);
      if (numberView == null) {
        break missingId;
      }

      return new ViewGradientCircleNumberBinding(rootView, baseNumberView, numberView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
