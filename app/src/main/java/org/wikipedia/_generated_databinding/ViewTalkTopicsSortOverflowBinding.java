// Generated by view binder compiler. Do not edit!
package org.wikipedia.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wikipedia.R;
import org.wikipedia.views.WikiCardView;

public final class ViewTalkTopicsSortOverflowBinding implements ViewBinding {
  @NonNull
  private final WikiCardView rootView;

  @NonNull
  public final WikiCardView overflowContainer;

  @NonNull
  public final TextView sortByDatePublished;

  @NonNull
  public final LinearLayout sortByDatePublishedButton;

  @NonNull
  public final ImageView sortByDatePublishedOrder;

  @NonNull
  public final ImageView sortByDatePublishedSelected;

  @NonNull
  public final TextView sortByDateUpdated;

  @NonNull
  public final LinearLayout sortByDateUpdatedButton;

  @NonNull
  public final ImageView sortByDateUpdatedOrder;

  @NonNull
  public final ImageView sortByDateUpdatedSelected;

  @NonNull
  public final TextView sortByTopicName;

  @NonNull
  public final LinearLayout sortByTopicNameButton;

  @NonNull
  public final ImageView sortByTopicNameOrder;

  @NonNull
  public final ImageView sortByTopicNameSelected;

  private ViewTalkTopicsSortOverflowBinding(@NonNull WikiCardView rootView,
      @NonNull WikiCardView overflowContainer, @NonNull TextView sortByDatePublished,
      @NonNull LinearLayout sortByDatePublishedButton, @NonNull ImageView sortByDatePublishedOrder,
      @NonNull ImageView sortByDatePublishedSelected, @NonNull TextView sortByDateUpdated,
      @NonNull LinearLayout sortByDateUpdatedButton, @NonNull ImageView sortByDateUpdatedOrder,
      @NonNull ImageView sortByDateUpdatedSelected, @NonNull TextView sortByTopicName,
      @NonNull LinearLayout sortByTopicNameButton, @NonNull ImageView sortByTopicNameOrder,
      @NonNull ImageView sortByTopicNameSelected) {
    this.rootView = rootView;
    this.overflowContainer = overflowContainer;
    this.sortByDatePublished = sortByDatePublished;
    this.sortByDatePublishedButton = sortByDatePublishedButton;
    this.sortByDatePublishedOrder = sortByDatePublishedOrder;
    this.sortByDatePublishedSelected = sortByDatePublishedSelected;
    this.sortByDateUpdated = sortByDateUpdated;
    this.sortByDateUpdatedButton = sortByDateUpdatedButton;
    this.sortByDateUpdatedOrder = sortByDateUpdatedOrder;
    this.sortByDateUpdatedSelected = sortByDateUpdatedSelected;
    this.sortByTopicName = sortByTopicName;
    this.sortByTopicNameButton = sortByTopicNameButton;
    this.sortByTopicNameOrder = sortByTopicNameOrder;
    this.sortByTopicNameSelected = sortByTopicNameSelected;
  }

  @Override
  @NonNull
  public WikiCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ViewTalkTopicsSortOverflowBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ViewTalkTopicsSortOverflowBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.view_talk_topics_sort_overflow, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ViewTalkTopicsSortOverflowBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      WikiCardView overflowContainer = (WikiCardView) rootView;

      id = R.id.sortByDatePublished;
      TextView sortByDatePublished = ViewBindings.findChildViewById(rootView, id);
      if (sortByDatePublished == null) {
        break missingId;
      }

      id = R.id.sortByDatePublishedButton;
      LinearLayout sortByDatePublishedButton = ViewBindings.findChildViewById(rootView, id);
      if (sortByDatePublishedButton == null) {
        break missingId;
      }

      id = R.id.sortByDatePublishedOrder;
      ImageView sortByDatePublishedOrder = ViewBindings.findChildViewById(rootView, id);
      if (sortByDatePublishedOrder == null) {
        break missingId;
      }

      id = R.id.sortByDatePublishedSelected;
      ImageView sortByDatePublishedSelected = ViewBindings.findChildViewById(rootView, id);
      if (sortByDatePublishedSelected == null) {
        break missingId;
      }

      id = R.id.sortByDateUpdated;
      TextView sortByDateUpdated = ViewBindings.findChildViewById(rootView, id);
      if (sortByDateUpdated == null) {
        break missingId;
      }

      id = R.id.sortByDateUpdatedButton;
      LinearLayout sortByDateUpdatedButton = ViewBindings.findChildViewById(rootView, id);
      if (sortByDateUpdatedButton == null) {
        break missingId;
      }

      id = R.id.sortByDateUpdatedOrder;
      ImageView sortByDateUpdatedOrder = ViewBindings.findChildViewById(rootView, id);
      if (sortByDateUpdatedOrder == null) {
        break missingId;
      }

      id = R.id.sortByDateUpdatedSelected;
      ImageView sortByDateUpdatedSelected = ViewBindings.findChildViewById(rootView, id);
      if (sortByDateUpdatedSelected == null) {
        break missingId;
      }

      id = R.id.sortByTopicName;
      TextView sortByTopicName = ViewBindings.findChildViewById(rootView, id);
      if (sortByTopicName == null) {
        break missingId;
      }

      id = R.id.sortByTopicNameButton;
      LinearLayout sortByTopicNameButton = ViewBindings.findChildViewById(rootView, id);
      if (sortByTopicNameButton == null) {
        break missingId;
      }

      id = R.id.sortByTopicNameOrder;
      ImageView sortByTopicNameOrder = ViewBindings.findChildViewById(rootView, id);
      if (sortByTopicNameOrder == null) {
        break missingId;
      }

      id = R.id.sortByTopicNameSelected;
      ImageView sortByTopicNameSelected = ViewBindings.findChildViewById(rootView, id);
      if (sortByTopicNameSelected == null) {
        break missingId;
      }

      return new ViewTalkTopicsSortOverflowBinding((WikiCardView) rootView, overflowContainer,
          sortByDatePublished, sortByDatePublishedButton, sortByDatePublishedOrder,
          sortByDatePublishedSelected, sortByDateUpdated, sortByDateUpdatedButton,
          sortByDateUpdatedOrder, sortByDateUpdatedSelected, sortByTopicName, sortByTopicNameButton,
          sortByTopicNameOrder, sortByTopicNameSelected);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
