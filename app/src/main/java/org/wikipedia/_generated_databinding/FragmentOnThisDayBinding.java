// Generated by view binder compiler. Do not edit!
package org.wikipedia.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.CollapsingToolbarLayout;
import com.google.android.material.appbar.MaterialToolbar;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wikipedia.R;
import org.wikipedia.views.WikiErrorView;

public final class FragmentOnThisDayBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final AppBarLayout appBar;

  @NonNull
  public final CollapsingToolbarLayout collapsingToolbarLayout;

  @NonNull
  public final TextView day;

  @NonNull
  public final LinearLayout dayContainer;

  @NonNull
  public final TextView dayInfo;

  @NonNull
  public final ImageView dropDown;

  @NonNull
  public final ImageView dropDownToolbar;

  @NonNull
  public final WikiErrorView errorView;

  @NonNull
  public final RecyclerView eventsRecycler;

  @NonNull
  public final LinearLayout headerFrameLayout;

  @NonNull
  public final TextView indicatorDate;

  @NonNull
  public final FrameLayout indicatorLayout;

  @NonNull
  public final TextView onThisDayTitleView;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final MaterialToolbar toolbar;

  @NonNull
  public final TextView toolbarDay;

  @NonNull
  public final LinearLayout toolbarDayContainer;

  private FragmentOnThisDayBinding(@NonNull CoordinatorLayout rootView,
      @NonNull AppBarLayout appBar, @NonNull CollapsingToolbarLayout collapsingToolbarLayout,
      @NonNull TextView day, @NonNull LinearLayout dayContainer, @NonNull TextView dayInfo,
      @NonNull ImageView dropDown, @NonNull ImageView dropDownToolbar,
      @NonNull WikiErrorView errorView, @NonNull RecyclerView eventsRecycler,
      @NonNull LinearLayout headerFrameLayout, @NonNull TextView indicatorDate,
      @NonNull FrameLayout indicatorLayout, @NonNull TextView onThisDayTitleView,
      @NonNull ProgressBar progressBar, @NonNull MaterialToolbar toolbar,
      @NonNull TextView toolbarDay, @NonNull LinearLayout toolbarDayContainer) {
    this.rootView = rootView;
    this.appBar = appBar;
    this.collapsingToolbarLayout = collapsingToolbarLayout;
    this.day = day;
    this.dayContainer = dayContainer;
    this.dayInfo = dayInfo;
    this.dropDown = dropDown;
    this.dropDownToolbar = dropDownToolbar;
    this.errorView = errorView;
    this.eventsRecycler = eventsRecycler;
    this.headerFrameLayout = headerFrameLayout;
    this.indicatorDate = indicatorDate;
    this.indicatorLayout = indicatorLayout;
    this.onThisDayTitleView = onThisDayTitleView;
    this.progressBar = progressBar;
    this.toolbar = toolbar;
    this.toolbarDay = toolbarDay;
    this.toolbarDayContainer = toolbarDayContainer;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentOnThisDayBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentOnThisDayBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_on_this_day, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentOnThisDayBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.app_bar;
      AppBarLayout appBar = ViewBindings.findChildViewById(rootView, id);
      if (appBar == null) {
        break missingId;
      }

      id = R.id.collapsing_toolbar_layout;
      CollapsingToolbarLayout collapsingToolbarLayout = ViewBindings.findChildViewById(rootView, id);
      if (collapsingToolbarLayout == null) {
        break missingId;
      }

      id = R.id.day;
      TextView day = ViewBindings.findChildViewById(rootView, id);
      if (day == null) {
        break missingId;
      }

      id = R.id.day_container;
      LinearLayout dayContainer = ViewBindings.findChildViewById(rootView, id);
      if (dayContainer == null) {
        break missingId;
      }

      id = R.id.day_info;
      TextView dayInfo = ViewBindings.findChildViewById(rootView, id);
      if (dayInfo == null) {
        break missingId;
      }

      id = R.id.drop_down;
      ImageView dropDown = ViewBindings.findChildViewById(rootView, id);
      if (dropDown == null) {
        break missingId;
      }

      id = R.id.drop_down_toolbar;
      ImageView dropDownToolbar = ViewBindings.findChildViewById(rootView, id);
      if (dropDownToolbar == null) {
        break missingId;
      }

      id = R.id.error_view;
      WikiErrorView errorView = ViewBindings.findChildViewById(rootView, id);
      if (errorView == null) {
        break missingId;
      }

      id = R.id.events_recycler;
      RecyclerView eventsRecycler = ViewBindings.findChildViewById(rootView, id);
      if (eventsRecycler == null) {
        break missingId;
      }

      id = R.id.header_frame_layout;
      LinearLayout headerFrameLayout = ViewBindings.findChildViewById(rootView, id);
      if (headerFrameLayout == null) {
        break missingId;
      }

      id = R.id.indicator_date;
      TextView indicatorDate = ViewBindings.findChildViewById(rootView, id);
      if (indicatorDate == null) {
        break missingId;
      }

      id = R.id.indicator_layout;
      FrameLayout indicatorLayout = ViewBindings.findChildViewById(rootView, id);
      if (indicatorLayout == null) {
        break missingId;
      }

      id = R.id.on_this_day_title_view;
      TextView onThisDayTitleView = ViewBindings.findChildViewById(rootView, id);
      if (onThisDayTitleView == null) {
        break missingId;
      }

      id = R.id.progress_bar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.toolbar_day;
      TextView toolbarDay = ViewBindings.findChildViewById(rootView, id);
      if (toolbarDay == null) {
        break missingId;
      }

      id = R.id.toolbar_day_container;
      LinearLayout toolbarDayContainer = ViewBindings.findChildViewById(rootView, id);
      if (toolbarDayContainer == null) {
        break missingId;
      }

      return new FragmentOnThisDayBinding((CoordinatorLayout) rootView, appBar,
          collapsingToolbarLayout, day, dayContainer, dayInfo, dropDown, dropDownToolbar, errorView,
          eventsRecycler, headerFrameLayout, indicatorDate, indicatorLayout, onThisDayTitleView,
          progressBar, toolbar, toolbarDay, toolbarDayContainer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
