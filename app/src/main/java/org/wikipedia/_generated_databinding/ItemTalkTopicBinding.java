// Generated by view binder compiler. Do not edit!
package org.wikipedia.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wikipedia.R;

public final class ItemTalkTopicBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final LinearLayout otherContentContainer;

  @NonNull
  public final TextView otherContentText;

  @NonNull
  public final ConstraintLayout topicContentContainer;

  @NonNull
  public final TextView topicContentText;

  @NonNull
  public final TextView topicLastCommentDate;

  @NonNull
  public final ImageView topicOverflowMenu;

  @NonNull
  public final ImageView topicReplyIcon;

  @NonNull
  public final TextView topicReplyNumber;

  @NonNull
  public final TextView topicTitleText;

  @NonNull
  public final ImageView topicUserIcon;

  @NonNull
  public final TextView topicUsername;

  private ItemTalkTopicBinding(@NonNull FrameLayout rootView,
      @NonNull LinearLayout otherContentContainer, @NonNull TextView otherContentText,
      @NonNull ConstraintLayout topicContentContainer, @NonNull TextView topicContentText,
      @NonNull TextView topicLastCommentDate, @NonNull ImageView topicOverflowMenu,
      @NonNull ImageView topicReplyIcon, @NonNull TextView topicReplyNumber,
      @NonNull TextView topicTitleText, @NonNull ImageView topicUserIcon,
      @NonNull TextView topicUsername) {
    this.rootView = rootView;
    this.otherContentContainer = otherContentContainer;
    this.otherContentText = otherContentText;
    this.topicContentContainer = topicContentContainer;
    this.topicContentText = topicContentText;
    this.topicLastCommentDate = topicLastCommentDate;
    this.topicOverflowMenu = topicOverflowMenu;
    this.topicReplyIcon = topicReplyIcon;
    this.topicReplyNumber = topicReplyNumber;
    this.topicTitleText = topicTitleText;
    this.topicUserIcon = topicUserIcon;
    this.topicUsername = topicUsername;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemTalkTopicBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemTalkTopicBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_talk_topic, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemTalkTopicBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.otherContentContainer;
      LinearLayout otherContentContainer = ViewBindings.findChildViewById(rootView, id);
      if (otherContentContainer == null) {
        break missingId;
      }

      id = R.id.otherContentText;
      TextView otherContentText = ViewBindings.findChildViewById(rootView, id);
      if (otherContentText == null) {
        break missingId;
      }

      id = R.id.topicContentContainer;
      ConstraintLayout topicContentContainer = ViewBindings.findChildViewById(rootView, id);
      if (topicContentContainer == null) {
        break missingId;
      }

      id = R.id.topicContentText;
      TextView topicContentText = ViewBindings.findChildViewById(rootView, id);
      if (topicContentText == null) {
        break missingId;
      }

      id = R.id.topicLastCommentDate;
      TextView topicLastCommentDate = ViewBindings.findChildViewById(rootView, id);
      if (topicLastCommentDate == null) {
        break missingId;
      }

      id = R.id.topicOverflowMenu;
      ImageView topicOverflowMenu = ViewBindings.findChildViewById(rootView, id);
      if (topicOverflowMenu == null) {
        break missingId;
      }

      id = R.id.topicReplyIcon;
      ImageView topicReplyIcon = ViewBindings.findChildViewById(rootView, id);
      if (topicReplyIcon == null) {
        break missingId;
      }

      id = R.id.topicReplyNumber;
      TextView topicReplyNumber = ViewBindings.findChildViewById(rootView, id);
      if (topicReplyNumber == null) {
        break missingId;
      }

      id = R.id.topicTitleText;
      TextView topicTitleText = ViewBindings.findChildViewById(rootView, id);
      if (topicTitleText == null) {
        break missingId;
      }

      id = R.id.topicUserIcon;
      ImageView topicUserIcon = ViewBindings.findChildViewById(rootView, id);
      if (topicUserIcon == null) {
        break missingId;
      }

      id = R.id.topicUsername;
      TextView topicUsername = ViewBindings.findChildViewById(rootView, id);
      if (topicUsername == null) {
        break missingId;
      }

      return new ItemTalkTopicBinding((FrameLayout) rootView, otherContentContainer,
          otherContentText, topicContentContainer, topicContentText, topicLastCommentDate,
          topicOverflowMenu, topicReplyIcon, topicReplyNumber, topicTitleText, topicUserIcon,
          topicUsername);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
