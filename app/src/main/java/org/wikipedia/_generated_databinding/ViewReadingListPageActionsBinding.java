// Generated by view binder compiler. Do not edit!
package org.wikipedia.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.materialswitch.MaterialSwitch;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wikipedia.R;

public final class ViewReadingListPageActionsBinding implements ViewBinding {
  @NonNull
  private final View rootView;

  @NonNull
  public final LinearLayout readingListItemAddToOther;

  @NonNull
  public final LinearLayout readingListItemMoveToOther;

  @NonNull
  public final LinearLayout readingListItemOffline;

  @NonNull
  public final MaterialSwitch readingListItemOfflineSwitch;

  @NonNull
  public final LinearLayout readingListItemRemove;

  @NonNull
  public final TextView readingListItemRemoveText;

  @NonNull
  public final LinearLayout readingListItemSelect;

  @NonNull
  public final LinearLayout readingListItemShare;

  @NonNull
  public final TextView readingListItemTitle;

  private ViewReadingListPageActionsBinding(@NonNull View rootView,
      @NonNull LinearLayout readingListItemAddToOther,
      @NonNull LinearLayout readingListItemMoveToOther,
      @NonNull LinearLayout readingListItemOffline,
      @NonNull MaterialSwitch readingListItemOfflineSwitch,
      @NonNull LinearLayout readingListItemRemove, @NonNull TextView readingListItemRemoveText,
      @NonNull LinearLayout readingListItemSelect, @NonNull LinearLayout readingListItemShare,
      @NonNull TextView readingListItemTitle) {
    this.rootView = rootView;
    this.readingListItemAddToOther = readingListItemAddToOther;
    this.readingListItemMoveToOther = readingListItemMoveToOther;
    this.readingListItemOffline = readingListItemOffline;
    this.readingListItemOfflineSwitch = readingListItemOfflineSwitch;
    this.readingListItemRemove = readingListItemRemove;
    this.readingListItemRemoveText = readingListItemRemoveText;
    this.readingListItemSelect = readingListItemSelect;
    this.readingListItemShare = readingListItemShare;
    this.readingListItemTitle = readingListItemTitle;
  }

  @Override
  @NonNull
  public View getRoot() {
    return rootView;
  }

  @NonNull
  public static ViewReadingListPageActionsBinding inflate(@NonNull LayoutInflater inflater,
      @NonNull ViewGroup parent) {
    if (parent == null) {
      throw new NullPointerException("parent");
    }
    inflater.inflate(R.layout.view_reading_list_page_actions, parent);
    return bind(parent);
  }

  @NonNull
  public static ViewReadingListPageActionsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.reading_list_item_add_to_other;
      LinearLayout readingListItemAddToOther = ViewBindings.findChildViewById(rootView, id);
      if (readingListItemAddToOther == null) {
        break missingId;
      }

      id = R.id.reading_list_item_move_to_other;
      LinearLayout readingListItemMoveToOther = ViewBindings.findChildViewById(rootView, id);
      if (readingListItemMoveToOther == null) {
        break missingId;
      }

      id = R.id.reading_list_item_offline;
      LinearLayout readingListItemOffline = ViewBindings.findChildViewById(rootView, id);
      if (readingListItemOffline == null) {
        break missingId;
      }

      id = R.id.reading_list_item_offline_switch;
      MaterialSwitch readingListItemOfflineSwitch = ViewBindings.findChildViewById(rootView, id);
      if (readingListItemOfflineSwitch == null) {
        break missingId;
      }

      id = R.id.reading_list_item_remove;
      LinearLayout readingListItemRemove = ViewBindings.findChildViewById(rootView, id);
      if (readingListItemRemove == null) {
        break missingId;
      }

      id = R.id.reading_list_item_remove_text;
      TextView readingListItemRemoveText = ViewBindings.findChildViewById(rootView, id);
      if (readingListItemRemoveText == null) {
        break missingId;
      }

      id = R.id.reading_list_item_select;
      LinearLayout readingListItemSelect = ViewBindings.findChildViewById(rootView, id);
      if (readingListItemSelect == null) {
        break missingId;
      }

      id = R.id.reading_list_item_share;
      LinearLayout readingListItemShare = ViewBindings.findChildViewById(rootView, id);
      if (readingListItemShare == null) {
        break missingId;
      }

      id = R.id.reading_list_item_title;
      TextView readingListItemTitle = ViewBindings.findChildViewById(rootView, id);
      if (readingListItemTitle == null) {
        break missingId;
      }

      return new ViewReadingListPageActionsBinding(rootView, readingListItemAddToOther,
          readingListItemMoveToOther, readingListItemOffline, readingListItemOfflineSwitch,
          readingListItemRemove, readingListItemRemoveText, readingListItemSelect,
          readingListItemShare, readingListItemTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
