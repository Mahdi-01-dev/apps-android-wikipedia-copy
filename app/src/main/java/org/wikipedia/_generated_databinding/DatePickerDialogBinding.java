// Generated by view binder compiler. Do not edit!
package org.wikipedia.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wikipedia.R;

public final class DatePickerDialogBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView calendarDay;

  @NonNull
  public final RecyclerView calendarGrid;

  @NonNull
  public final TextView currentMonth;

  @NonNull
  public final ImageView nextMonth;

  @NonNull
  public final ImageView previousMonth;

  private DatePickerDialogBinding(@NonNull LinearLayout rootView, @NonNull TextView calendarDay,
      @NonNull RecyclerView calendarGrid, @NonNull TextView currentMonth,
      @NonNull ImageView nextMonth, @NonNull ImageView previousMonth) {
    this.rootView = rootView;
    this.calendarDay = calendarDay;
    this.calendarGrid = calendarGrid;
    this.currentMonth = currentMonth;
    this.nextMonth = nextMonth;
    this.previousMonth = previousMonth;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DatePickerDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DatePickerDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.date_picker_dialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DatePickerDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.calendar_day;
      TextView calendarDay = ViewBindings.findChildViewById(rootView, id);
      if (calendarDay == null) {
        break missingId;
      }

      id = R.id.calendar_grid;
      RecyclerView calendarGrid = ViewBindings.findChildViewById(rootView, id);
      if (calendarGrid == null) {
        break missingId;
      }

      id = R.id.current_month;
      TextView currentMonth = ViewBindings.findChildViewById(rootView, id);
      if (currentMonth == null) {
        break missingId;
      }

      id = R.id.next_month;
      ImageView nextMonth = ViewBindings.findChildViewById(rootView, id);
      if (nextMonth == null) {
        break missingId;
      }

      id = R.id.previous_month;
      ImageView previousMonth = ViewBindings.findChildViewById(rootView, id);
      if (previousMonth == null) {
        break missingId;
      }

      return new DatePickerDialogBinding((LinearLayout) rootView, calendarDay, calendarGrid,
          currentMonth, nextMonth, previousMonth);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
