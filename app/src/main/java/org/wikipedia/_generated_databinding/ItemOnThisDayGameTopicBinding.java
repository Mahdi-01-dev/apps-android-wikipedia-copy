// Generated by view binder compiler. Do not edit!
package org.wikipedia.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wikipedia.R;
import org.wikipedia.views.FaceAndColorDetectImageView;
import org.wikipedia.views.GoneIfEmptyTextView;
import org.wikipedia.views.WikiCardView;

public final class ItemOnThisDayGameTopicBinding implements ViewBinding {
  @NonNull
  private final WikiCardView rootView;

  @NonNull
  public final ImageView listItemBookmark;

  @NonNull
  public final GoneIfEmptyTextView listItemDescription;

  @NonNull
  public final LinearLayout listItemInfoContainer;

  @NonNull
  public final ImageView listItemShare;

  @NonNull
  public final FaceAndColorDetectImageView listItemThumbnail;

  @NonNull
  public final TextView listItemTitle;

  private ItemOnThisDayGameTopicBinding(@NonNull WikiCardView rootView,
      @NonNull ImageView listItemBookmark, @NonNull GoneIfEmptyTextView listItemDescription,
      @NonNull LinearLayout listItemInfoContainer, @NonNull ImageView listItemShare,
      @NonNull FaceAndColorDetectImageView listItemThumbnail, @NonNull TextView listItemTitle) {
    this.rootView = rootView;
    this.listItemBookmark = listItemBookmark;
    this.listItemDescription = listItemDescription;
    this.listItemInfoContainer = listItemInfoContainer;
    this.listItemShare = listItemShare;
    this.listItemThumbnail = listItemThumbnail;
    this.listItemTitle = listItemTitle;
  }

  @Override
  @NonNull
  public WikiCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemOnThisDayGameTopicBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemOnThisDayGameTopicBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_on_this_day_game_topic, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemOnThisDayGameTopicBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.listItemBookmark;
      ImageView listItemBookmark = ViewBindings.findChildViewById(rootView, id);
      if (listItemBookmark == null) {
        break missingId;
      }

      id = R.id.listItemDescription;
      GoneIfEmptyTextView listItemDescription = ViewBindings.findChildViewById(rootView, id);
      if (listItemDescription == null) {
        break missingId;
      }

      id = R.id.listItemInfoContainer;
      LinearLayout listItemInfoContainer = ViewBindings.findChildViewById(rootView, id);
      if (listItemInfoContainer == null) {
        break missingId;
      }

      id = R.id.listItemShare;
      ImageView listItemShare = ViewBindings.findChildViewById(rootView, id);
      if (listItemShare == null) {
        break missingId;
      }

      id = R.id.listItemThumbnail;
      FaceAndColorDetectImageView listItemThumbnail = ViewBindings.findChildViewById(rootView, id);
      if (listItemThumbnail == null) {
        break missingId;
      }

      id = R.id.listItemTitle;
      TextView listItemTitle = ViewBindings.findChildViewById(rootView, id);
      if (listItemTitle == null) {
        break missingId;
      }

      return new ItemOnThisDayGameTopicBinding((WikiCardView) rootView, listItemBookmark,
          listItemDescription, listItemInfoContainer, listItemShare, listItemThumbnail,
          listItemTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
