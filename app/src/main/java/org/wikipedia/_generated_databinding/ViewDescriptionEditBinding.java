// Generated by view binder compiler. Do not edit!
package org.wikipedia.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.chip.Chip;
import com.google.android.material.progressindicator.LinearProgressIndicator;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wikipedia.R;
import org.wikipedia.descriptions.DescriptionEditBottomBarView;
import org.wikipedia.descriptions.DescriptionEditReviewView;
import org.wikipedia.views.PlainPasteEditText;

public final class ViewDescriptionEditBinding implements ViewBinding {
  @NonNull
  private final View rootView;

  @NonNull
  public final GroupCaptchaBinding captchaContainer;

  @NonNull
  public final MaterialButton learnMoreButton;

  @NonNull
  public final Chip suggestedDescButton;

  @NonNull
  public final ImageView viewDescriptionEditCancelButton;

  @NonNull
  public final LinearLayout viewDescriptionEditContainer;

  @NonNull
  public final TextView viewDescriptionEditHeader;

  @NonNull
  public final TextView viewDescriptionEditPageSummary;

  @NonNull
  public final LinearLayout viewDescriptionEditPageSummaryContainer;

  @NonNull
  public final TextView viewDescriptionEditPageSummaryLabel;

  @NonNull
  public final LinearProgressIndicator viewDescriptionEditProgressBar;

  @NonNull
  public final DescriptionEditBottomBarView viewDescriptionEditReadArticleBarContainer;

  @NonNull
  public final DescriptionEditReviewView viewDescriptionEditReviewContainer;

  @NonNull
  public final TextView viewDescriptionEditSaveButton;

  @NonNull
  public final ScrollView viewDescriptionEditScrollview;

  @NonNull
  public final PlainPasteEditText viewDescriptionEditText;

  @NonNull
  public final TextInputLayout viewDescriptionEditTextLayout;

  @NonNull
  public final FrameLayout viewDescriptionEditToolbarContainer;

  @NonNull
  public final LinearLayout viewDescriptionEditing;

  private ViewDescriptionEditBinding(@NonNull View rootView,
      @NonNull GroupCaptchaBinding captchaContainer, @NonNull MaterialButton learnMoreButton,
      @NonNull Chip suggestedDescButton, @NonNull ImageView viewDescriptionEditCancelButton,
      @NonNull LinearLayout viewDescriptionEditContainer,
      @NonNull TextView viewDescriptionEditHeader, @NonNull TextView viewDescriptionEditPageSummary,
      @NonNull LinearLayout viewDescriptionEditPageSummaryContainer,
      @NonNull TextView viewDescriptionEditPageSummaryLabel,
      @NonNull LinearProgressIndicator viewDescriptionEditProgressBar,
      @NonNull DescriptionEditBottomBarView viewDescriptionEditReadArticleBarContainer,
      @NonNull DescriptionEditReviewView viewDescriptionEditReviewContainer,
      @NonNull TextView viewDescriptionEditSaveButton,
      @NonNull ScrollView viewDescriptionEditScrollview,
      @NonNull PlainPasteEditText viewDescriptionEditText,
      @NonNull TextInputLayout viewDescriptionEditTextLayout,
      @NonNull FrameLayout viewDescriptionEditToolbarContainer,
      @NonNull LinearLayout viewDescriptionEditing) {
    this.rootView = rootView;
    this.captchaContainer = captchaContainer;
    this.learnMoreButton = learnMoreButton;
    this.suggestedDescButton = suggestedDescButton;
    this.viewDescriptionEditCancelButton = viewDescriptionEditCancelButton;
    this.viewDescriptionEditContainer = viewDescriptionEditContainer;
    this.viewDescriptionEditHeader = viewDescriptionEditHeader;
    this.viewDescriptionEditPageSummary = viewDescriptionEditPageSummary;
    this.viewDescriptionEditPageSummaryContainer = viewDescriptionEditPageSummaryContainer;
    this.viewDescriptionEditPageSummaryLabel = viewDescriptionEditPageSummaryLabel;
    this.viewDescriptionEditProgressBar = viewDescriptionEditProgressBar;
    this.viewDescriptionEditReadArticleBarContainer = viewDescriptionEditReadArticleBarContainer;
    this.viewDescriptionEditReviewContainer = viewDescriptionEditReviewContainer;
    this.viewDescriptionEditSaveButton = viewDescriptionEditSaveButton;
    this.viewDescriptionEditScrollview = viewDescriptionEditScrollview;
    this.viewDescriptionEditText = viewDescriptionEditText;
    this.viewDescriptionEditTextLayout = viewDescriptionEditTextLayout;
    this.viewDescriptionEditToolbarContainer = viewDescriptionEditToolbarContainer;
    this.viewDescriptionEditing = viewDescriptionEditing;
  }

  @Override
  @NonNull
  public View getRoot() {
    return rootView;
  }

  @NonNull
  public static ViewDescriptionEditBinding inflate(@NonNull LayoutInflater inflater,
      @NonNull ViewGroup parent) {
    if (parent == null) {
      throw new NullPointerException("parent");
    }
    inflater.inflate(R.layout.view_description_edit, parent);
    return bind(parent);
  }

  @NonNull
  public static ViewDescriptionEditBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.captcha_container;
      View captchaContainer = ViewBindings.findChildViewById(rootView, id);
      if (captchaContainer == null) {
        break missingId;
      }
      GroupCaptchaBinding binding_captchaContainer = GroupCaptchaBinding.bind(captchaContainer);

      id = R.id.learnMoreButton;
      MaterialButton learnMoreButton = ViewBindings.findChildViewById(rootView, id);
      if (learnMoreButton == null) {
        break missingId;
      }

      id = R.id.suggestedDescButton;
      Chip suggestedDescButton = ViewBindings.findChildViewById(rootView, id);
      if (suggestedDescButton == null) {
        break missingId;
      }

      id = R.id.view_description_edit_cancel_button;
      ImageView viewDescriptionEditCancelButton = ViewBindings.findChildViewById(rootView, id);
      if (viewDescriptionEditCancelButton == null) {
        break missingId;
      }

      id = R.id.view_description_edit_container;
      LinearLayout viewDescriptionEditContainer = ViewBindings.findChildViewById(rootView, id);
      if (viewDescriptionEditContainer == null) {
        break missingId;
      }

      id = R.id.view_description_edit_header;
      TextView viewDescriptionEditHeader = ViewBindings.findChildViewById(rootView, id);
      if (viewDescriptionEditHeader == null) {
        break missingId;
      }

      id = R.id.view_description_edit_page_summary;
      TextView viewDescriptionEditPageSummary = ViewBindings.findChildViewById(rootView, id);
      if (viewDescriptionEditPageSummary == null) {
        break missingId;
      }

      id = R.id.view_description_edit_page_summary_container;
      LinearLayout viewDescriptionEditPageSummaryContainer = ViewBindings.findChildViewById(rootView, id);
      if (viewDescriptionEditPageSummaryContainer == null) {
        break missingId;
      }

      id = R.id.view_description_edit_page_summary_label;
      TextView viewDescriptionEditPageSummaryLabel = ViewBindings.findChildViewById(rootView, id);
      if (viewDescriptionEditPageSummaryLabel == null) {
        break missingId;
      }

      id = R.id.view_description_edit_progress_bar;
      LinearProgressIndicator viewDescriptionEditProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (viewDescriptionEditProgressBar == null) {
        break missingId;
      }

      id = R.id.view_description_edit_read_article_bar_container;
      DescriptionEditBottomBarView viewDescriptionEditReadArticleBarContainer = ViewBindings.findChildViewById(rootView, id);
      if (viewDescriptionEditReadArticleBarContainer == null) {
        break missingId;
      }

      id = R.id.view_description_edit_review_container;
      DescriptionEditReviewView viewDescriptionEditReviewContainer = ViewBindings.findChildViewById(rootView, id);
      if (viewDescriptionEditReviewContainer == null) {
        break missingId;
      }

      id = R.id.view_description_edit_save_button;
      TextView viewDescriptionEditSaveButton = ViewBindings.findChildViewById(rootView, id);
      if (viewDescriptionEditSaveButton == null) {
        break missingId;
      }

      id = R.id.view_description_edit_scrollview;
      ScrollView viewDescriptionEditScrollview = ViewBindings.findChildViewById(rootView, id);
      if (viewDescriptionEditScrollview == null) {
        break missingId;
      }

      id = R.id.view_description_edit_text;
      PlainPasteEditText viewDescriptionEditText = ViewBindings.findChildViewById(rootView, id);
      if (viewDescriptionEditText == null) {
        break missingId;
      }

      id = R.id.view_description_edit_text_layout;
      TextInputLayout viewDescriptionEditTextLayout = ViewBindings.findChildViewById(rootView, id);
      if (viewDescriptionEditTextLayout == null) {
        break missingId;
      }

      id = R.id.view_description_edit_toolbar_container;
      FrameLayout viewDescriptionEditToolbarContainer = ViewBindings.findChildViewById(rootView, id);
      if (viewDescriptionEditToolbarContainer == null) {
        break missingId;
      }

      id = R.id.view_description_editing;
      LinearLayout viewDescriptionEditing = ViewBindings.findChildViewById(rootView, id);
      if (viewDescriptionEditing == null) {
        break missingId;
      }

      return new ViewDescriptionEditBinding(rootView, binding_captchaContainer, learnMoreButton,
          suggestedDescButton, viewDescriptionEditCancelButton, viewDescriptionEditContainer,
          viewDescriptionEditHeader, viewDescriptionEditPageSummary,
          viewDescriptionEditPageSummaryContainer, viewDescriptionEditPageSummaryLabel,
          viewDescriptionEditProgressBar, viewDescriptionEditReadArticleBarContainer,
          viewDescriptionEditReviewContainer, viewDescriptionEditSaveButton,
          viewDescriptionEditScrollview, viewDescriptionEditText, viewDescriptionEditTextLayout,
          viewDescriptionEditToolbarContainer, viewDescriptionEditing);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
