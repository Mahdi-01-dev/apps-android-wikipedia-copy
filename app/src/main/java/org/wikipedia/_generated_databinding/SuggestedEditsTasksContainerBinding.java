// Generated by view binder compiler. Do not edit!
package org.wikipedia.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wikipedia.R;

public final class SuggestedEditsTasksContainerBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView contributeSubtitleView;

  @NonNull
  public final MaterialButton learnMoreButton;

  @NonNull
  public final LinearLayout learnMoreCard;

  @NonNull
  public final TextView showIPBlockedMessage;

  @NonNull
  public final TextView showOnboardingMessage;

  @NonNull
  public final LinearLayout tasksContainer;

  @NonNull
  public final RecyclerView tasksRecyclerView;

  private SuggestedEditsTasksContainerBinding(@NonNull LinearLayout rootView,
      @NonNull TextView contributeSubtitleView, @NonNull MaterialButton learnMoreButton,
      @NonNull LinearLayout learnMoreCard, @NonNull TextView showIPBlockedMessage,
      @NonNull TextView showOnboardingMessage, @NonNull LinearLayout tasksContainer,
      @NonNull RecyclerView tasksRecyclerView) {
    this.rootView = rootView;
    this.contributeSubtitleView = contributeSubtitleView;
    this.learnMoreButton = learnMoreButton;
    this.learnMoreCard = learnMoreCard;
    this.showIPBlockedMessage = showIPBlockedMessage;
    this.showOnboardingMessage = showOnboardingMessage;
    this.tasksContainer = tasksContainer;
    this.tasksRecyclerView = tasksRecyclerView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SuggestedEditsTasksContainerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SuggestedEditsTasksContainerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.suggested_edits_tasks_container, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SuggestedEditsTasksContainerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.contributeSubtitleView;
      TextView contributeSubtitleView = ViewBindings.findChildViewById(rootView, id);
      if (contributeSubtitleView == null) {
        break missingId;
      }

      id = R.id.learnMoreButton;
      MaterialButton learnMoreButton = ViewBindings.findChildViewById(rootView, id);
      if (learnMoreButton == null) {
        break missingId;
      }

      id = R.id.learnMoreCard;
      LinearLayout learnMoreCard = ViewBindings.findChildViewById(rootView, id);
      if (learnMoreCard == null) {
        break missingId;
      }

      id = R.id.showIPBlockedMessage;
      TextView showIPBlockedMessage = ViewBindings.findChildViewById(rootView, id);
      if (showIPBlockedMessage == null) {
        break missingId;
      }

      id = R.id.showOnboardingMessage;
      TextView showOnboardingMessage = ViewBindings.findChildViewById(rootView, id);
      if (showOnboardingMessage == null) {
        break missingId;
      }

      LinearLayout tasksContainer = (LinearLayout) rootView;

      id = R.id.tasksRecyclerView;
      RecyclerView tasksRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (tasksRecyclerView == null) {
        break missingId;
      }

      return new SuggestedEditsTasksContainerBinding((LinearLayout) rootView,
          contributeSubtitleView, learnMoreButton, learnMoreCard, showIPBlockedMessage,
          showOnboardingMessage, tasksContainer, tasksRecyclerView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
