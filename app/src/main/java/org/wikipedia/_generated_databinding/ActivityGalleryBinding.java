// Generated by view binder compiler. Do not edit!
package org.wikipedia.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager2.widget.ViewPager2;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.progressindicator.LinearProgressIndicator;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wikipedia.R;
import org.wikipedia.views.AppTextView;
import org.wikipedia.views.WikiErrorView;

public final class ActivityGalleryBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final ImageView captionEditButton;

  @NonNull
  public final AppTextView creditText;

  @NonNull
  public final LinearLayout ctaButton;

  @NonNull
  public final TextView ctaButtonText;

  @NonNull
  public final FrameLayout ctaContainer;

  @NonNull
  public final LinearLayout descriptionContainer;

  @NonNull
  public final AppTextView descriptionText;

  @NonNull
  public final WikiErrorView errorView;

  @NonNull
  public final FrameLayout galleryContainer;

  @NonNull
  public final LinearLayout infoContainer;

  @NonNull
  public final View infoGradient;

  @NonNull
  public final LinearLayout licenseContainer;

  @NonNull
  public final ImageView licenseIcon;

  @NonNull
  public final ImageView licenseIconBy;

  @NonNull
  public final ImageView licenseIconSa;

  @NonNull
  public final ViewPager2 pager;

  @NonNull
  public final LinearProgressIndicator progressBar;

  @NonNull
  public final MaterialToolbar toolbar;

  @NonNull
  public final FrameLayout toolbarContainer;

  @NonNull
  public final View toolbarGradient;

  @NonNull
  public final ImageView transitionReceiver;

  private ActivityGalleryBinding(@NonNull FrameLayout rootView,
      @NonNull ImageView captionEditButton, @NonNull AppTextView creditText,
      @NonNull LinearLayout ctaButton, @NonNull TextView ctaButtonText,
      @NonNull FrameLayout ctaContainer, @NonNull LinearLayout descriptionContainer,
      @NonNull AppTextView descriptionText, @NonNull WikiErrorView errorView,
      @NonNull FrameLayout galleryContainer, @NonNull LinearLayout infoContainer,
      @NonNull View infoGradient, @NonNull LinearLayout licenseContainer,
      @NonNull ImageView licenseIcon, @NonNull ImageView licenseIconBy,
      @NonNull ImageView licenseIconSa, @NonNull ViewPager2 pager,
      @NonNull LinearProgressIndicator progressBar, @NonNull MaterialToolbar toolbar,
      @NonNull FrameLayout toolbarContainer, @NonNull View toolbarGradient,
      @NonNull ImageView transitionReceiver) {
    this.rootView = rootView;
    this.captionEditButton = captionEditButton;
    this.creditText = creditText;
    this.ctaButton = ctaButton;
    this.ctaButtonText = ctaButtonText;
    this.ctaContainer = ctaContainer;
    this.descriptionContainer = descriptionContainer;
    this.descriptionText = descriptionText;
    this.errorView = errorView;
    this.galleryContainer = galleryContainer;
    this.infoContainer = infoContainer;
    this.infoGradient = infoGradient;
    this.licenseContainer = licenseContainer;
    this.licenseIcon = licenseIcon;
    this.licenseIconBy = licenseIconBy;
    this.licenseIconSa = licenseIconSa;
    this.pager = pager;
    this.progressBar = progressBar;
    this.toolbar = toolbar;
    this.toolbarContainer = toolbarContainer;
    this.toolbarGradient = toolbarGradient;
    this.transitionReceiver = transitionReceiver;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityGalleryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityGalleryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_gallery, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityGalleryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.caption_edit_button;
      ImageView captionEditButton = ViewBindings.findChildViewById(rootView, id);
      if (captionEditButton == null) {
        break missingId;
      }

      id = R.id.credit_text;
      AppTextView creditText = ViewBindings.findChildViewById(rootView, id);
      if (creditText == null) {
        break missingId;
      }

      id = R.id.cta_button;
      LinearLayout ctaButton = ViewBindings.findChildViewById(rootView, id);
      if (ctaButton == null) {
        break missingId;
      }

      id = R.id.cta_button_text;
      TextView ctaButtonText = ViewBindings.findChildViewById(rootView, id);
      if (ctaButtonText == null) {
        break missingId;
      }

      id = R.id.cta_container;
      FrameLayout ctaContainer = ViewBindings.findChildViewById(rootView, id);
      if (ctaContainer == null) {
        break missingId;
      }

      id = R.id.description_container;
      LinearLayout descriptionContainer = ViewBindings.findChildViewById(rootView, id);
      if (descriptionContainer == null) {
        break missingId;
      }

      id = R.id.description_text;
      AppTextView descriptionText = ViewBindings.findChildViewById(rootView, id);
      if (descriptionText == null) {
        break missingId;
      }

      id = R.id.error_view;
      WikiErrorView errorView = ViewBindings.findChildViewById(rootView, id);
      if (errorView == null) {
        break missingId;
      }

      FrameLayout galleryContainer = (FrameLayout) rootView;

      id = R.id.info_container;
      LinearLayout infoContainer = ViewBindings.findChildViewById(rootView, id);
      if (infoContainer == null) {
        break missingId;
      }

      id = R.id.info_gradient;
      View infoGradient = ViewBindings.findChildViewById(rootView, id);
      if (infoGradient == null) {
        break missingId;
      }

      id = R.id.license_container;
      LinearLayout licenseContainer = ViewBindings.findChildViewById(rootView, id);
      if (licenseContainer == null) {
        break missingId;
      }

      id = R.id.license_icon;
      ImageView licenseIcon = ViewBindings.findChildViewById(rootView, id);
      if (licenseIcon == null) {
        break missingId;
      }

      id = R.id.license_icon_by;
      ImageView licenseIconBy = ViewBindings.findChildViewById(rootView, id);
      if (licenseIconBy == null) {
        break missingId;
      }

      id = R.id.license_icon_sa;
      ImageView licenseIconSa = ViewBindings.findChildViewById(rootView, id);
      if (licenseIconSa == null) {
        break missingId;
      }

      id = R.id.pager;
      ViewPager2 pager = ViewBindings.findChildViewById(rootView, id);
      if (pager == null) {
        break missingId;
      }

      id = R.id.progress_bar;
      LinearProgressIndicator progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.toolbar_container;
      FrameLayout toolbarContainer = ViewBindings.findChildViewById(rootView, id);
      if (toolbarContainer == null) {
        break missingId;
      }

      id = R.id.toolbar_gradient;
      View toolbarGradient = ViewBindings.findChildViewById(rootView, id);
      if (toolbarGradient == null) {
        break missingId;
      }

      id = R.id.transition_receiver;
      ImageView transitionReceiver = ViewBindings.findChildViewById(rootView, id);
      if (transitionReceiver == null) {
        break missingId;
      }

      return new ActivityGalleryBinding((FrameLayout) rootView, captionEditButton, creditText,
          ctaButton, ctaButtonText, ctaContainer, descriptionContainer, descriptionText, errorView,
          galleryContainer, infoContainer, infoGradient, licenseContainer, licenseIcon,
          licenseIconBy, licenseIconSa, pager, progressBar, toolbar, toolbarContainer,
          toolbarGradient, transitionReceiver);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
