// Generated by view binder compiler. Do not edit!
package org.wikipedia.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.progressindicator.LinearProgressIndicator;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wikipedia.R;
import org.wikipedia.views.WikiCardView;
import org.wikipedia.views.WikiErrorView;

public final class FragmentOnThisDayGameResultBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final WikiCardView archiveGameContainer;

  @NonNull
  public final WikiErrorView errorView;

  @NonNull
  public final ImageView historyImageView;

  @NonNull
  public final TextView nextGameText;

  @NonNull
  public final TextView playArchiveText;

  @NonNull
  public final LinearProgressIndicator progressBar;

  @NonNull
  public final RecyclerView resultArticlesList;

  @NonNull
  public final LinearLayout resultCardContainer;

  @NonNull
  public final TextView resultSubtitle;

  @NonNull
  public final TextView resultText;

  @NonNull
  public final CardView resultTextContainer;

  @NonNull
  public final ImageView rightArrowImageView;

  @NonNull
  public final NestedScrollView scrollContainer;

  @NonNull
  public final Button shareButton;

  @NonNull
  public final ViewOnThisDayGameShareBinding shareLayout;

  @NonNull
  public final TextView statsAverageScore;

  @NonNull
  public final WikiCardView statsAverageScoreCard;

  @NonNull
  public final TextView statsCurrentStreak;

  @NonNull
  public final WikiCardView statsCurrentStreakCard;

  @NonNull
  public final TextView statsGamePlayed;

  @NonNull
  public final TextView statsGamePlayedText;

  @NonNull
  public final WikiCardView statsGamesPlayedCard;

  @NonNull
  public final TextView yourStatsText;

  private FragmentOnThisDayGameResultBinding(@NonNull CoordinatorLayout rootView,
      @NonNull WikiCardView archiveGameContainer, @NonNull WikiErrorView errorView,
      @NonNull ImageView historyImageView, @NonNull TextView nextGameText,
      @NonNull TextView playArchiveText, @NonNull LinearProgressIndicator progressBar,
      @NonNull RecyclerView resultArticlesList, @NonNull LinearLayout resultCardContainer,
      @NonNull TextView resultSubtitle, @NonNull TextView resultText,
      @NonNull CardView resultTextContainer, @NonNull ImageView rightArrowImageView,
      @NonNull NestedScrollView scrollContainer, @NonNull Button shareButton,
      @NonNull ViewOnThisDayGameShareBinding shareLayout, @NonNull TextView statsAverageScore,
      @NonNull WikiCardView statsAverageScoreCard, @NonNull TextView statsCurrentStreak,
      @NonNull WikiCardView statsCurrentStreakCard, @NonNull TextView statsGamePlayed,
      @NonNull TextView statsGamePlayedText, @NonNull WikiCardView statsGamesPlayedCard,
      @NonNull TextView yourStatsText) {
    this.rootView = rootView;
    this.archiveGameContainer = archiveGameContainer;
    this.errorView = errorView;
    this.historyImageView = historyImageView;
    this.nextGameText = nextGameText;
    this.playArchiveText = playArchiveText;
    this.progressBar = progressBar;
    this.resultArticlesList = resultArticlesList;
    this.resultCardContainer = resultCardContainer;
    this.resultSubtitle = resultSubtitle;
    this.resultText = resultText;
    this.resultTextContainer = resultTextContainer;
    this.rightArrowImageView = rightArrowImageView;
    this.scrollContainer = scrollContainer;
    this.shareButton = shareButton;
    this.shareLayout = shareLayout;
    this.statsAverageScore = statsAverageScore;
    this.statsAverageScoreCard = statsAverageScoreCard;
    this.statsCurrentStreak = statsCurrentStreak;
    this.statsCurrentStreakCard = statsCurrentStreakCard;
    this.statsGamePlayed = statsGamePlayed;
    this.statsGamePlayedText = statsGamePlayedText;
    this.statsGamesPlayedCard = statsGamesPlayedCard;
    this.yourStatsText = yourStatsText;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentOnThisDayGameResultBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentOnThisDayGameResultBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_on_this_day_game_result, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentOnThisDayGameResultBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.archiveGameContainer;
      WikiCardView archiveGameContainer = ViewBindings.findChildViewById(rootView, id);
      if (archiveGameContainer == null) {
        break missingId;
      }

      id = R.id.errorView;
      WikiErrorView errorView = ViewBindings.findChildViewById(rootView, id);
      if (errorView == null) {
        break missingId;
      }

      id = R.id.historyImageView;
      ImageView historyImageView = ViewBindings.findChildViewById(rootView, id);
      if (historyImageView == null) {
        break missingId;
      }

      id = R.id.nextGameText;
      TextView nextGameText = ViewBindings.findChildViewById(rootView, id);
      if (nextGameText == null) {
        break missingId;
      }

      id = R.id.playArchiveText;
      TextView playArchiveText = ViewBindings.findChildViewById(rootView, id);
      if (playArchiveText == null) {
        break missingId;
      }

      id = R.id.progressBar;
      LinearProgressIndicator progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.resultArticlesList;
      RecyclerView resultArticlesList = ViewBindings.findChildViewById(rootView, id);
      if (resultArticlesList == null) {
        break missingId;
      }

      id = R.id.resultCardContainer;
      LinearLayout resultCardContainer = ViewBindings.findChildViewById(rootView, id);
      if (resultCardContainer == null) {
        break missingId;
      }

      id = R.id.resultSubtitle;
      TextView resultSubtitle = ViewBindings.findChildViewById(rootView, id);
      if (resultSubtitle == null) {
        break missingId;
      }

      id = R.id.resultText;
      TextView resultText = ViewBindings.findChildViewById(rootView, id);
      if (resultText == null) {
        break missingId;
      }

      id = R.id.resultTextContainer;
      CardView resultTextContainer = ViewBindings.findChildViewById(rootView, id);
      if (resultTextContainer == null) {
        break missingId;
      }

      id = R.id.rightArrowImageView;
      ImageView rightArrowImageView = ViewBindings.findChildViewById(rootView, id);
      if (rightArrowImageView == null) {
        break missingId;
      }

      id = R.id.scrollContainer;
      NestedScrollView scrollContainer = ViewBindings.findChildViewById(rootView, id);
      if (scrollContainer == null) {
        break missingId;
      }

      id = R.id.shareButton;
      Button shareButton = ViewBindings.findChildViewById(rootView, id);
      if (shareButton == null) {
        break missingId;
      }

      id = R.id.shareLayout;
      View shareLayout = ViewBindings.findChildViewById(rootView, id);
      if (shareLayout == null) {
        break missingId;
      }
      ViewOnThisDayGameShareBinding binding_shareLayout = ViewOnThisDayGameShareBinding.bind(shareLayout);

      id = R.id.statsAverageScore;
      TextView statsAverageScore = ViewBindings.findChildViewById(rootView, id);
      if (statsAverageScore == null) {
        break missingId;
      }

      id = R.id.statsAverageScoreCard;
      WikiCardView statsAverageScoreCard = ViewBindings.findChildViewById(rootView, id);
      if (statsAverageScoreCard == null) {
        break missingId;
      }

      id = R.id.statsCurrentStreak;
      TextView statsCurrentStreak = ViewBindings.findChildViewById(rootView, id);
      if (statsCurrentStreak == null) {
        break missingId;
      }

      id = R.id.statsCurrentStreakCard;
      WikiCardView statsCurrentStreakCard = ViewBindings.findChildViewById(rootView, id);
      if (statsCurrentStreakCard == null) {
        break missingId;
      }

      id = R.id.statsGamePlayed;
      TextView statsGamePlayed = ViewBindings.findChildViewById(rootView, id);
      if (statsGamePlayed == null) {
        break missingId;
      }

      id = R.id.statsGamePlayedText;
      TextView statsGamePlayedText = ViewBindings.findChildViewById(rootView, id);
      if (statsGamePlayedText == null) {
        break missingId;
      }

      id = R.id.statsGamesPlayedCard;
      WikiCardView statsGamesPlayedCard = ViewBindings.findChildViewById(rootView, id);
      if (statsGamesPlayedCard == null) {
        break missingId;
      }

      id = R.id.yourStatsText;
      TextView yourStatsText = ViewBindings.findChildViewById(rootView, id);
      if (yourStatsText == null) {
        break missingId;
      }

      return new FragmentOnThisDayGameResultBinding((CoordinatorLayout) rootView,
          archiveGameContainer, errorView, historyImageView, nextGameText, playArchiveText,
          progressBar, resultArticlesList, resultCardContainer, resultSubtitle, resultText,
          resultTextContainer, rightArrowImageView, scrollContainer, shareButton,
          binding_shareLayout, statsAverageScore, statsAverageScoreCard, statsCurrentStreak,
          statsCurrentStreakCard, statsGamePlayed, statsGamePlayedText, statsGamesPlayedCard,
          yourStatsText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
