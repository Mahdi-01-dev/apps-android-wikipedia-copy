// Generated by view binder compiler. Do not edit!
package org.wikipedia.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wikipedia.R;
import org.wikipedia.views.PlainPasteEditText;

public final class DialogFeedbackOptionsBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button cancelButton;

  @NonNull
  public final ScrollView dialogContainer;

  @NonNull
  public final PlainPasteEditText feedbackInput;

  @NonNull
  public final TextInputLayout feedbackInputContainer;

  @NonNull
  public final TextView messageText;

  @NonNull
  public final RadioButton optionNeutral;

  @NonNull
  public final RadioButton optionSatisfied;

  @NonNull
  public final RadioButton optionUnsatisfied;

  @NonNull
  public final RadioButton optionVerySatisfied;

  @NonNull
  public final RadioButton optionVeryUnsatisfied;

  @NonNull
  public final LinearLayout optionsContainer;

  @NonNull
  public final Button submitButton;

  @NonNull
  public final TextView titleText;

  private DialogFeedbackOptionsBinding(@NonNull ScrollView rootView, @NonNull Button cancelButton,
      @NonNull ScrollView dialogContainer, @NonNull PlainPasteEditText feedbackInput,
      @NonNull TextInputLayout feedbackInputContainer, @NonNull TextView messageText,
      @NonNull RadioButton optionNeutral, @NonNull RadioButton optionSatisfied,
      @NonNull RadioButton optionUnsatisfied, @NonNull RadioButton optionVerySatisfied,
      @NonNull RadioButton optionVeryUnsatisfied, @NonNull LinearLayout optionsContainer,
      @NonNull Button submitButton, @NonNull TextView titleText) {
    this.rootView = rootView;
    this.cancelButton = cancelButton;
    this.dialogContainer = dialogContainer;
    this.feedbackInput = feedbackInput;
    this.feedbackInputContainer = feedbackInputContainer;
    this.messageText = messageText;
    this.optionNeutral = optionNeutral;
    this.optionSatisfied = optionSatisfied;
    this.optionUnsatisfied = optionUnsatisfied;
    this.optionVerySatisfied = optionVerySatisfied;
    this.optionVeryUnsatisfied = optionVeryUnsatisfied;
    this.optionsContainer = optionsContainer;
    this.submitButton = submitButton;
    this.titleText = titleText;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogFeedbackOptionsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogFeedbackOptionsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_feedback_options, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogFeedbackOptionsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cancelButton;
      Button cancelButton = ViewBindings.findChildViewById(rootView, id);
      if (cancelButton == null) {
        break missingId;
      }

      ScrollView dialogContainer = (ScrollView) rootView;

      id = R.id.feedbackInput;
      PlainPasteEditText feedbackInput = ViewBindings.findChildViewById(rootView, id);
      if (feedbackInput == null) {
        break missingId;
      }

      id = R.id.feedbackInputContainer;
      TextInputLayout feedbackInputContainer = ViewBindings.findChildViewById(rootView, id);
      if (feedbackInputContainer == null) {
        break missingId;
      }

      id = R.id.messageText;
      TextView messageText = ViewBindings.findChildViewById(rootView, id);
      if (messageText == null) {
        break missingId;
      }

      id = R.id.optionNeutral;
      RadioButton optionNeutral = ViewBindings.findChildViewById(rootView, id);
      if (optionNeutral == null) {
        break missingId;
      }

      id = R.id.optionSatisfied;
      RadioButton optionSatisfied = ViewBindings.findChildViewById(rootView, id);
      if (optionSatisfied == null) {
        break missingId;
      }

      id = R.id.optionUnsatisfied;
      RadioButton optionUnsatisfied = ViewBindings.findChildViewById(rootView, id);
      if (optionUnsatisfied == null) {
        break missingId;
      }

      id = R.id.optionVerySatisfied;
      RadioButton optionVerySatisfied = ViewBindings.findChildViewById(rootView, id);
      if (optionVerySatisfied == null) {
        break missingId;
      }

      id = R.id.optionVeryUnsatisfied;
      RadioButton optionVeryUnsatisfied = ViewBindings.findChildViewById(rootView, id);
      if (optionVeryUnsatisfied == null) {
        break missingId;
      }

      id = R.id.optionsContainer;
      LinearLayout optionsContainer = ViewBindings.findChildViewById(rootView, id);
      if (optionsContainer == null) {
        break missingId;
      }

      id = R.id.submitButton;
      Button submitButton = ViewBindings.findChildViewById(rootView, id);
      if (submitButton == null) {
        break missingId;
      }

      id = R.id.titleText;
      TextView titleText = ViewBindings.findChildViewById(rootView, id);
      if (titleText == null) {
        break missingId;
      }

      return new DialogFeedbackOptionsBinding((ScrollView) rootView, cancelButton, dialogContainer,
          feedbackInput, feedbackInputContainer, messageText, optionNeutral, optionSatisfied,
          optionUnsatisfied, optionVerySatisfied, optionVeryUnsatisfied, optionsContainer,
          submitButton, titleText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
