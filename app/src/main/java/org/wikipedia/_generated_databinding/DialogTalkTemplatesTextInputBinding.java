// Generated by view binder compiler. Do not edit!
package org.wikipedia.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RadioButton;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wikipedia.R;
import org.wikipedia.views.PlainPasteEditText;

public final class DialogTalkTemplatesTextInputBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final RadioButton dialogSaveAsNewRadio;

  @NonNull
  public final RadioButton dialogSaveExistingRadio;

  @NonNull
  public final PlainPasteEditText subjectInput;

  @NonNull
  public final TextInputLayout subjectInputContainer;

  private DialogTalkTemplatesTextInputBinding(@NonNull ScrollView rootView,
      @NonNull RadioButton dialogSaveAsNewRadio, @NonNull RadioButton dialogSaveExistingRadio,
      @NonNull PlainPasteEditText subjectInput, @NonNull TextInputLayout subjectInputContainer) {
    this.rootView = rootView;
    this.dialogSaveAsNewRadio = dialogSaveAsNewRadio;
    this.dialogSaveExistingRadio = dialogSaveExistingRadio;
    this.subjectInput = subjectInput;
    this.subjectInputContainer = subjectInputContainer;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogTalkTemplatesTextInputBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogTalkTemplatesTextInputBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_talk_templates_text_input, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogTalkTemplatesTextInputBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.dialogSaveAsNewRadio;
      RadioButton dialogSaveAsNewRadio = ViewBindings.findChildViewById(rootView, id);
      if (dialogSaveAsNewRadio == null) {
        break missingId;
      }

      id = R.id.dialogSaveExistingRadio;
      RadioButton dialogSaveExistingRadio = ViewBindings.findChildViewById(rootView, id);
      if (dialogSaveExistingRadio == null) {
        break missingId;
      }

      id = R.id.subjectInput;
      PlainPasteEditText subjectInput = ViewBindings.findChildViewById(rootView, id);
      if (subjectInput == null) {
        break missingId;
      }

      id = R.id.subjectInputContainer;
      TextInputLayout subjectInputContainer = ViewBindings.findChildViewById(rootView, id);
      if (subjectInputContainer == null) {
        break missingId;
      }

      return new DialogTalkTemplatesTextInputBinding((ScrollView) rootView, dialogSaveAsNewRadio,
          dialogSaveExistingRadio, subjectInput, subjectInputContainer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
