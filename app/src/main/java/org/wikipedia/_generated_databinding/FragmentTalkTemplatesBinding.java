// Generated by view binder compiler. Do not edit!
package org.wikipedia.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.tabs.TabLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wikipedia.R;
import org.wikipedia.views.WikiErrorView;

public final class FragmentTalkTemplatesBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final FloatingActionButton addSavedMessageFab;

  @NonNull
  public final CoordinatorLayout coordinatorView;

  @NonNull
  public final LinearLayout talkTemplatesEmptyContainer;

  @NonNull
  public final TextView talkTemplatesEmptyStateTextView;

  @NonNull
  public final WikiErrorView talkTemplatesErrorView;

  @NonNull
  public final ProgressBar talkTemplatesProgressBar;

  @NonNull
  public final RecyclerView talkTemplatesRecyclerView;

  @NonNull
  public final TabLayout talkTemplatesTabLayout;

  @NonNull
  public final AppBarLayout talkTemplatesToolbarContainer;

  @NonNull
  public final TextView toolBarEditButton;

  @NonNull
  public final MaterialToolbar toolbar;

  private FragmentTalkTemplatesBinding(@NonNull LinearLayout rootView,
      @NonNull FloatingActionButton addSavedMessageFab, @NonNull CoordinatorLayout coordinatorView,
      @NonNull LinearLayout talkTemplatesEmptyContainer,
      @NonNull TextView talkTemplatesEmptyStateTextView,
      @NonNull WikiErrorView talkTemplatesErrorView, @NonNull ProgressBar talkTemplatesProgressBar,
      @NonNull RecyclerView talkTemplatesRecyclerView, @NonNull TabLayout talkTemplatesTabLayout,
      @NonNull AppBarLayout talkTemplatesToolbarContainer, @NonNull TextView toolBarEditButton,
      @NonNull MaterialToolbar toolbar) {
    this.rootView = rootView;
    this.addSavedMessageFab = addSavedMessageFab;
    this.coordinatorView = coordinatorView;
    this.talkTemplatesEmptyContainer = talkTemplatesEmptyContainer;
    this.talkTemplatesEmptyStateTextView = talkTemplatesEmptyStateTextView;
    this.talkTemplatesErrorView = talkTemplatesErrorView;
    this.talkTemplatesProgressBar = talkTemplatesProgressBar;
    this.talkTemplatesRecyclerView = talkTemplatesRecyclerView;
    this.talkTemplatesTabLayout = talkTemplatesTabLayout;
    this.talkTemplatesToolbarContainer = talkTemplatesToolbarContainer;
    this.toolBarEditButton = toolBarEditButton;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentTalkTemplatesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentTalkTemplatesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_talk_templates, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentTalkTemplatesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addSavedMessageFab;
      FloatingActionButton addSavedMessageFab = ViewBindings.findChildViewById(rootView, id);
      if (addSavedMessageFab == null) {
        break missingId;
      }

      id = R.id.coordinatorView;
      CoordinatorLayout coordinatorView = ViewBindings.findChildViewById(rootView, id);
      if (coordinatorView == null) {
        break missingId;
      }

      id = R.id.talkTemplatesEmptyContainer;
      LinearLayout talkTemplatesEmptyContainer = ViewBindings.findChildViewById(rootView, id);
      if (talkTemplatesEmptyContainer == null) {
        break missingId;
      }

      id = R.id.talkTemplatesEmptyStateTextView;
      TextView talkTemplatesEmptyStateTextView = ViewBindings.findChildViewById(rootView, id);
      if (talkTemplatesEmptyStateTextView == null) {
        break missingId;
      }

      id = R.id.talkTemplatesErrorView;
      WikiErrorView talkTemplatesErrorView = ViewBindings.findChildViewById(rootView, id);
      if (talkTemplatesErrorView == null) {
        break missingId;
      }

      id = R.id.talkTemplatesProgressBar;
      ProgressBar talkTemplatesProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (talkTemplatesProgressBar == null) {
        break missingId;
      }

      id = R.id.talkTemplatesRecyclerView;
      RecyclerView talkTemplatesRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (talkTemplatesRecyclerView == null) {
        break missingId;
      }

      id = R.id.talkTemplatesTabLayout;
      TabLayout talkTemplatesTabLayout = ViewBindings.findChildViewById(rootView, id);
      if (talkTemplatesTabLayout == null) {
        break missingId;
      }

      id = R.id.talkTemplatesToolbarContainer;
      AppBarLayout talkTemplatesToolbarContainer = ViewBindings.findChildViewById(rootView, id);
      if (talkTemplatesToolbarContainer == null) {
        break missingId;
      }

      id = R.id.toolBarEditButton;
      TextView toolBarEditButton = ViewBindings.findChildViewById(rootView, id);
      if (toolBarEditButton == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new FragmentTalkTemplatesBinding((LinearLayout) rootView, addSavedMessageFab,
          coordinatorView, talkTemplatesEmptyContainer, talkTemplatesEmptyStateTextView,
          talkTemplatesErrorView, talkTemplatesProgressBar, talkTemplatesRecyclerView,
          talkTemplatesTabLayout, talkTemplatesToolbarContainer, toolBarEditButton, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
