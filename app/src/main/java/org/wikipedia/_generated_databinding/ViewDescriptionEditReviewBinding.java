// Generated by view binder compiler. Do not edit!
package org.wikipedia.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wikipedia.R;
import org.wikipedia.descriptions.DescriptionEditLicenseView;
import org.wikipedia.views.AppTextView;
import org.wikipedia.views.FaceAndColorDetectImageView;
import org.wikipedia.views.GoneIfEmptyTextView;

public final class ViewDescriptionEditReviewBinding implements ViewBinding {
  @NonNull
  private final View rootView;

  @NonNull
  public final ScrollView articleContainer;

  @NonNull
  public final TextView articleExtract;

  @NonNull
  public final FaceAndColorDetectImageView articleImage;

  @NonNull
  public final GoneIfEmptyTextView articleSubtitle;

  @NonNull
  public final TextView articleTitle;

  @NonNull
  public final FrameLayout galleryContainer;

  @NonNull
  public final AppTextView galleryDescriptionText;

  @NonNull
  public final ImageView galleryImage;

  @NonNull
  public final View indicatorDivider;

  @NonNull
  public final LinearLayout licenseContainer;

  @NonNull
  public final DescriptionEditLicenseView licenseView;

  private ViewDescriptionEditReviewBinding(@NonNull View rootView,
      @NonNull ScrollView articleContainer, @NonNull TextView articleExtract,
      @NonNull FaceAndColorDetectImageView articleImage,
      @NonNull GoneIfEmptyTextView articleSubtitle, @NonNull TextView articleTitle,
      @NonNull FrameLayout galleryContainer, @NonNull AppTextView galleryDescriptionText,
      @NonNull ImageView galleryImage, @NonNull View indicatorDivider,
      @NonNull LinearLayout licenseContainer, @NonNull DescriptionEditLicenseView licenseView) {
    this.rootView = rootView;
    this.articleContainer = articleContainer;
    this.articleExtract = articleExtract;
    this.articleImage = articleImage;
    this.articleSubtitle = articleSubtitle;
    this.articleTitle = articleTitle;
    this.galleryContainer = galleryContainer;
    this.galleryDescriptionText = galleryDescriptionText;
    this.galleryImage = galleryImage;
    this.indicatorDivider = indicatorDivider;
    this.licenseContainer = licenseContainer;
    this.licenseView = licenseView;
  }

  @Override
  @NonNull
  public View getRoot() {
    return rootView;
  }

  @NonNull
  public static ViewDescriptionEditReviewBinding inflate(@NonNull LayoutInflater inflater,
      @NonNull ViewGroup parent) {
    if (parent == null) {
      throw new NullPointerException("parent");
    }
    inflater.inflate(R.layout.view_description_edit_review, parent);
    return bind(parent);
  }

  @NonNull
  public static ViewDescriptionEditReviewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.articleContainer;
      ScrollView articleContainer = ViewBindings.findChildViewById(rootView, id);
      if (articleContainer == null) {
        break missingId;
      }

      id = R.id.articleExtract;
      TextView articleExtract = ViewBindings.findChildViewById(rootView, id);
      if (articleExtract == null) {
        break missingId;
      }

      id = R.id.articleImage;
      FaceAndColorDetectImageView articleImage = ViewBindings.findChildViewById(rootView, id);
      if (articleImage == null) {
        break missingId;
      }

      id = R.id.articleSubtitle;
      GoneIfEmptyTextView articleSubtitle = ViewBindings.findChildViewById(rootView, id);
      if (articleSubtitle == null) {
        break missingId;
      }

      id = R.id.articleTitle;
      TextView articleTitle = ViewBindings.findChildViewById(rootView, id);
      if (articleTitle == null) {
        break missingId;
      }

      id = R.id.galleryContainer;
      FrameLayout galleryContainer = ViewBindings.findChildViewById(rootView, id);
      if (galleryContainer == null) {
        break missingId;
      }

      id = R.id.galleryDescriptionText;
      AppTextView galleryDescriptionText = ViewBindings.findChildViewById(rootView, id);
      if (galleryDescriptionText == null) {
        break missingId;
      }

      id = R.id.galleryImage;
      ImageView galleryImage = ViewBindings.findChildViewById(rootView, id);
      if (galleryImage == null) {
        break missingId;
      }

      id = R.id.indicatorDivider;
      View indicatorDivider = ViewBindings.findChildViewById(rootView, id);
      if (indicatorDivider == null) {
        break missingId;
      }

      id = R.id.licenseContainer;
      LinearLayout licenseContainer = ViewBindings.findChildViewById(rootView, id);
      if (licenseContainer == null) {
        break missingId;
      }

      id = R.id.licenseView;
      DescriptionEditLicenseView licenseView = ViewBindings.findChildViewById(rootView, id);
      if (licenseView == null) {
        break missingId;
      }

      return new ViewDescriptionEditReviewBinding(rootView, articleContainer, articleExtract,
          articleImage, articleSubtitle, articleTitle, galleryContainer, galleryDescriptionText,
          galleryImage, indicatorDivider, licenseContainer, licenseView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
