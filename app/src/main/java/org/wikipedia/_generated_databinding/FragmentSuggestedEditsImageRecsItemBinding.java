// Generated by view binder compiler. Do not edit!
package org.wikipedia.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.Space;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wikipedia.R;
import org.wikipedia.views.FaceAndColorDetectImageView;
import org.wikipedia.views.GoneIfEmptyTextView;
import org.wikipedia.views.WikiCardView;
import org.wikipedia.views.WikiErrorView;

public final class FragmentSuggestedEditsImageRecsItemBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final MaterialButton acceptButton;

  @NonNull
  public final NestedScrollView articleContentContainer;

  @NonNull
  public final GoneIfEmptyTextView articleDescription;

  @NonNull
  public final View articleDivider;

  @NonNull
  public final TextView articleExtract;

  @NonNull
  public final Space articleScrollSpacer;

  @NonNull
  public final TextView articleTitle;

  @NonNull
  public final CoordinatorLayout bottomSheetCoordinatorLayout;

  @NonNull
  public final WikiErrorView cardItemErrorView;

  @NonNull
  public final ProgressBar cardItemProgressBar;

  @NonNull
  public final TextView imageCaptionText;

  @NonNull
  public final WikiCardView imageCard;

  @NonNull
  public final LinearLayout imageClickTarget;

  @NonNull
  public final TextView imageFileNameText;

  @NonNull
  public final ImageView imageInfoButton;

  @NonNull
  public final LinearLayout imageRecommendationsDepletedContainer;

  @NonNull
  public final TextView imageRecommendationsDepletedText;

  @NonNull
  public final ConstraintLayout imageSuggestionContainer;

  @NonNull
  public final TextView imageSuggestionReason;

  @NonNull
  public final FaceAndColorDetectImageView imageView;

  @NonNull
  public final FrameLayout imageViewContainer;

  @NonNull
  public final TextView instructionText;

  @NonNull
  public final MaterialButton notSureButton;

  @NonNull
  public final MaterialButton readMoreButton;

  @NonNull
  public final MaterialButton rejectButton;

  @NonNull
  public final ImageView robotIcon;

  @NonNull
  public final CoordinatorLayout suggestedEditsItemRootView;

  @NonNull
  public final View topHandle;

  private FragmentSuggestedEditsImageRecsItemBinding(@NonNull CoordinatorLayout rootView,
      @NonNull MaterialButton acceptButton, @NonNull NestedScrollView articleContentContainer,
      @NonNull GoneIfEmptyTextView articleDescription, @NonNull View articleDivider,
      @NonNull TextView articleExtract, @NonNull Space articleScrollSpacer,
      @NonNull TextView articleTitle, @NonNull CoordinatorLayout bottomSheetCoordinatorLayout,
      @NonNull WikiErrorView cardItemErrorView, @NonNull ProgressBar cardItemProgressBar,
      @NonNull TextView imageCaptionText, @NonNull WikiCardView imageCard,
      @NonNull LinearLayout imageClickTarget, @NonNull TextView imageFileNameText,
      @NonNull ImageView imageInfoButton,
      @NonNull LinearLayout imageRecommendationsDepletedContainer,
      @NonNull TextView imageRecommendationsDepletedText,
      @NonNull ConstraintLayout imageSuggestionContainer, @NonNull TextView imageSuggestionReason,
      @NonNull FaceAndColorDetectImageView imageView, @NonNull FrameLayout imageViewContainer,
      @NonNull TextView instructionText, @NonNull MaterialButton notSureButton,
      @NonNull MaterialButton readMoreButton, @NonNull MaterialButton rejectButton,
      @NonNull ImageView robotIcon, @NonNull CoordinatorLayout suggestedEditsItemRootView,
      @NonNull View topHandle) {
    this.rootView = rootView;
    this.acceptButton = acceptButton;
    this.articleContentContainer = articleContentContainer;
    this.articleDescription = articleDescription;
    this.articleDivider = articleDivider;
    this.articleExtract = articleExtract;
    this.articleScrollSpacer = articleScrollSpacer;
    this.articleTitle = articleTitle;
    this.bottomSheetCoordinatorLayout = bottomSheetCoordinatorLayout;
    this.cardItemErrorView = cardItemErrorView;
    this.cardItemProgressBar = cardItemProgressBar;
    this.imageCaptionText = imageCaptionText;
    this.imageCard = imageCard;
    this.imageClickTarget = imageClickTarget;
    this.imageFileNameText = imageFileNameText;
    this.imageInfoButton = imageInfoButton;
    this.imageRecommendationsDepletedContainer = imageRecommendationsDepletedContainer;
    this.imageRecommendationsDepletedText = imageRecommendationsDepletedText;
    this.imageSuggestionContainer = imageSuggestionContainer;
    this.imageSuggestionReason = imageSuggestionReason;
    this.imageView = imageView;
    this.imageViewContainer = imageViewContainer;
    this.instructionText = instructionText;
    this.notSureButton = notSureButton;
    this.readMoreButton = readMoreButton;
    this.rejectButton = rejectButton;
    this.robotIcon = robotIcon;
    this.suggestedEditsItemRootView = suggestedEditsItemRootView;
    this.topHandle = topHandle;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSuggestedEditsImageRecsItemBinding inflate(
      @NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSuggestedEditsImageRecsItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_suggested_edits_image_recs_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSuggestedEditsImageRecsItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.acceptButton;
      MaterialButton acceptButton = ViewBindings.findChildViewById(rootView, id);
      if (acceptButton == null) {
        break missingId;
      }

      id = R.id.articleContentContainer;
      NestedScrollView articleContentContainer = ViewBindings.findChildViewById(rootView, id);
      if (articleContentContainer == null) {
        break missingId;
      }

      id = R.id.articleDescription;
      GoneIfEmptyTextView articleDescription = ViewBindings.findChildViewById(rootView, id);
      if (articleDescription == null) {
        break missingId;
      }

      id = R.id.articleDivider;
      View articleDivider = ViewBindings.findChildViewById(rootView, id);
      if (articleDivider == null) {
        break missingId;
      }

      id = R.id.articleExtract;
      TextView articleExtract = ViewBindings.findChildViewById(rootView, id);
      if (articleExtract == null) {
        break missingId;
      }

      id = R.id.articleScrollSpacer;
      Space articleScrollSpacer = ViewBindings.findChildViewById(rootView, id);
      if (articleScrollSpacer == null) {
        break missingId;
      }

      id = R.id.articleTitle;
      TextView articleTitle = ViewBindings.findChildViewById(rootView, id);
      if (articleTitle == null) {
        break missingId;
      }

      id = R.id.bottomSheetCoordinatorLayout;
      CoordinatorLayout bottomSheetCoordinatorLayout = ViewBindings.findChildViewById(rootView, id);
      if (bottomSheetCoordinatorLayout == null) {
        break missingId;
      }

      id = R.id.cardItemErrorView;
      WikiErrorView cardItemErrorView = ViewBindings.findChildViewById(rootView, id);
      if (cardItemErrorView == null) {
        break missingId;
      }

      id = R.id.cardItemProgressBar;
      ProgressBar cardItemProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (cardItemProgressBar == null) {
        break missingId;
      }

      id = R.id.imageCaptionText;
      TextView imageCaptionText = ViewBindings.findChildViewById(rootView, id);
      if (imageCaptionText == null) {
        break missingId;
      }

      id = R.id.imageCard;
      WikiCardView imageCard = ViewBindings.findChildViewById(rootView, id);
      if (imageCard == null) {
        break missingId;
      }

      id = R.id.imageClickTarget;
      LinearLayout imageClickTarget = ViewBindings.findChildViewById(rootView, id);
      if (imageClickTarget == null) {
        break missingId;
      }

      id = R.id.imageFileNameText;
      TextView imageFileNameText = ViewBindings.findChildViewById(rootView, id);
      if (imageFileNameText == null) {
        break missingId;
      }

      id = R.id.imageInfoButton;
      ImageView imageInfoButton = ViewBindings.findChildViewById(rootView, id);
      if (imageInfoButton == null) {
        break missingId;
      }

      id = R.id.imageRecommendationsDepletedContainer;
      LinearLayout imageRecommendationsDepletedContainer = ViewBindings.findChildViewById(rootView, id);
      if (imageRecommendationsDepletedContainer == null) {
        break missingId;
      }

      id = R.id.imageRecommendationsDepletedText;
      TextView imageRecommendationsDepletedText = ViewBindings.findChildViewById(rootView, id);
      if (imageRecommendationsDepletedText == null) {
        break missingId;
      }

      id = R.id.imageSuggestionContainer;
      ConstraintLayout imageSuggestionContainer = ViewBindings.findChildViewById(rootView, id);
      if (imageSuggestionContainer == null) {
        break missingId;
      }

      id = R.id.imageSuggestionReason;
      TextView imageSuggestionReason = ViewBindings.findChildViewById(rootView, id);
      if (imageSuggestionReason == null) {
        break missingId;
      }

      id = R.id.imageView;
      FaceAndColorDetectImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.imageViewContainer;
      FrameLayout imageViewContainer = ViewBindings.findChildViewById(rootView, id);
      if (imageViewContainer == null) {
        break missingId;
      }

      id = R.id.instructionText;
      TextView instructionText = ViewBindings.findChildViewById(rootView, id);
      if (instructionText == null) {
        break missingId;
      }

      id = R.id.notSureButton;
      MaterialButton notSureButton = ViewBindings.findChildViewById(rootView, id);
      if (notSureButton == null) {
        break missingId;
      }

      id = R.id.readMoreButton;
      MaterialButton readMoreButton = ViewBindings.findChildViewById(rootView, id);
      if (readMoreButton == null) {
        break missingId;
      }

      id = R.id.rejectButton;
      MaterialButton rejectButton = ViewBindings.findChildViewById(rootView, id);
      if (rejectButton == null) {
        break missingId;
      }

      id = R.id.robotIcon;
      ImageView robotIcon = ViewBindings.findChildViewById(rootView, id);
      if (robotIcon == null) {
        break missingId;
      }

      CoordinatorLayout suggestedEditsItemRootView = (CoordinatorLayout) rootView;

      id = R.id.topHandle;
      View topHandle = ViewBindings.findChildViewById(rootView, id);
      if (topHandle == null) {
        break missingId;
      }

      return new FragmentSuggestedEditsImageRecsItemBinding((CoordinatorLayout) rootView,
          acceptButton, articleContentContainer, articleDescription, articleDivider, articleExtract,
          articleScrollSpacer, articleTitle, bottomSheetCoordinatorLayout, cardItemErrorView,
          cardItemProgressBar, imageCaptionText, imageCard, imageClickTarget, imageFileNameText,
          imageInfoButton, imageRecommendationsDepletedContainer, imageRecommendationsDepletedText,
          imageSuggestionContainer, imageSuggestionReason, imageView, imageViewContainer,
          instructionText, notSureButton, readMoreButton, rejectButton, robotIcon,
          suggestedEditsItemRootView, topHandle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
