// Generated by view binder compiler. Do not edit!
package org.wikipedia.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.helper.widget.Flow;
import androidx.constraintlayout.widget.Barrier;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.CollapsingToolbarLayout;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.progressindicator.LinearProgressIndicator;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wikipedia.R;
import org.wikipedia.views.GoneIfEmptyTextView;
import org.wikipedia.views.WikiErrorView;

public final class FragmentArticleEditDetailsBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final ConstraintLayout articleTitleContainer;

  @NonNull
  public final View articleTitleDivider;

  @NonNull
  public final TextView articleTitleView;

  @NonNull
  public final CollapsingToolbarLayout collapsingToolbarLayout;

  @NonNull
  public final LinearLayout contentContainer;

  @NonNull
  public final CoordinatorLayout coordinator;

  @NonNull
  public final Barrier diffBarrier;

  @NonNull
  public final TextView diffCharacterCountView;

  @NonNull
  public final View diffDivider;

  @NonNull
  public final RecyclerView diffRecyclerView;

  @NonNull
  public final LinearLayout diffUnavailableContainer;

  @NonNull
  public final TextView diffUnavailableText;

  @NonNull
  public final WikiErrorView errorView;

  @NonNull
  public final View fromToDivider;

  @NonNull
  public final Guideline guideLineMiddle;

  @NonNull
  public final LinearLayout navTabContainer;

  @NonNull
  public final ImageView newerIdButton;

  @NonNull
  public final ImageView olderIdButton;

  @NonNull
  public final MaterialButton oresDamagingButton;

  @NonNull
  public final MaterialButton oresGoodFaithButton;

  @NonNull
  public final View overlayArticleTitleDivider;

  @NonNull
  public final View overlayDiffDivider;

  @NonNull
  public final View overlayFromToDivider;

  @NonNull
  public final Guideline overlayGuideLineMiddle;

  @NonNull
  public final ConstraintLayout overlayRevisionDetailsView;

  @NonNull
  public final TextView overlayRevisionFromTimestamp;

  @NonNull
  public final TextView overlayRevisionFromTitleText;

  @NonNull
  public final TextView overlayRevisionToTimestamp;

  @NonNull
  public final TextView overlayRevisionToTitleText;

  @NonNull
  public final LinearProgressIndicator progressBar;

  @NonNull
  public final ConstraintLayout revisionDetailsView;

  @NonNull
  public final GoneIfEmptyTextView revisionFromEditComment;

  @NonNull
  public final TextView revisionFromTimestamp;

  @NonNull
  public final TextView revisionFromTitleText;

  @NonNull
  public final GoneIfEmptyTextView revisionToEditComment;

  @NonNull
  public final TextView revisionToTimestamp;

  @NonNull
  public final TextView revisionToTitleText;

  @NonNull
  public final FrameLayout talkButton;

  @NonNull
  public final ImageView talkIcon;

  @NonNull
  public final FrameLayout thankButton;

  @NonNull
  public final ImageView thankIcon;

  @NonNull
  public final View thanksDivider;

  @NonNull
  public final FrameLayout undoButton;

  @NonNull
  public final ImageView undoIcon;

  @NonNull
  public final TextView undoLabel;

  @NonNull
  public final Flow undoRollbackButtonContainer;

  @NonNull
  public final MaterialButton usernameFromButton;

  @NonNull
  public final MaterialButton usernameToButton;

  @NonNull
  public final FrameLayout watchButton;

  @NonNull
  public final ImageView watchIcon;

  @NonNull
  public final TextView watchLabel;

  private FragmentArticleEditDetailsBinding(@NonNull CoordinatorLayout rootView,
      @NonNull AppBarLayout appBarLayout, @NonNull ConstraintLayout articleTitleContainer,
      @NonNull View articleTitleDivider, @NonNull TextView articleTitleView,
      @NonNull CollapsingToolbarLayout collapsingToolbarLayout,
      @NonNull LinearLayout contentContainer, @NonNull CoordinatorLayout coordinator,
      @NonNull Barrier diffBarrier, @NonNull TextView diffCharacterCountView,
      @NonNull View diffDivider, @NonNull RecyclerView diffRecyclerView,
      @NonNull LinearLayout diffUnavailableContainer, @NonNull TextView diffUnavailableText,
      @NonNull WikiErrorView errorView, @NonNull View fromToDivider,
      @NonNull Guideline guideLineMiddle, @NonNull LinearLayout navTabContainer,
      @NonNull ImageView newerIdButton, @NonNull ImageView olderIdButton,
      @NonNull MaterialButton oresDamagingButton, @NonNull MaterialButton oresGoodFaithButton,
      @NonNull View overlayArticleTitleDivider, @NonNull View overlayDiffDivider,
      @NonNull View overlayFromToDivider, @NonNull Guideline overlayGuideLineMiddle,
      @NonNull ConstraintLayout overlayRevisionDetailsView,
      @NonNull TextView overlayRevisionFromTimestamp,
      @NonNull TextView overlayRevisionFromTitleText, @NonNull TextView overlayRevisionToTimestamp,
      @NonNull TextView overlayRevisionToTitleText, @NonNull LinearProgressIndicator progressBar,
      @NonNull ConstraintLayout revisionDetailsView,
      @NonNull GoneIfEmptyTextView revisionFromEditComment, @NonNull TextView revisionFromTimestamp,
      @NonNull TextView revisionFromTitleText, @NonNull GoneIfEmptyTextView revisionToEditComment,
      @NonNull TextView revisionToTimestamp, @NonNull TextView revisionToTitleText,
      @NonNull FrameLayout talkButton, @NonNull ImageView talkIcon,
      @NonNull FrameLayout thankButton, @NonNull ImageView thankIcon, @NonNull View thanksDivider,
      @NonNull FrameLayout undoButton, @NonNull ImageView undoIcon, @NonNull TextView undoLabel,
      @NonNull Flow undoRollbackButtonContainer, @NonNull MaterialButton usernameFromButton,
      @NonNull MaterialButton usernameToButton, @NonNull FrameLayout watchButton,
      @NonNull ImageView watchIcon, @NonNull TextView watchLabel) {
    this.rootView = rootView;
    this.appBarLayout = appBarLayout;
    this.articleTitleContainer = articleTitleContainer;
    this.articleTitleDivider = articleTitleDivider;
    this.articleTitleView = articleTitleView;
    this.collapsingToolbarLayout = collapsingToolbarLayout;
    this.contentContainer = contentContainer;
    this.coordinator = coordinator;
    this.diffBarrier = diffBarrier;
    this.diffCharacterCountView = diffCharacterCountView;
    this.diffDivider = diffDivider;
    this.diffRecyclerView = diffRecyclerView;
    this.diffUnavailableContainer = diffUnavailableContainer;
    this.diffUnavailableText = diffUnavailableText;
    this.errorView = errorView;
    this.fromToDivider = fromToDivider;
    this.guideLineMiddle = guideLineMiddle;
    this.navTabContainer = navTabContainer;
    this.newerIdButton = newerIdButton;
    this.olderIdButton = olderIdButton;
    this.oresDamagingButton = oresDamagingButton;
    this.oresGoodFaithButton = oresGoodFaithButton;
    this.overlayArticleTitleDivider = overlayArticleTitleDivider;
    this.overlayDiffDivider = overlayDiffDivider;
    this.overlayFromToDivider = overlayFromToDivider;
    this.overlayGuideLineMiddle = overlayGuideLineMiddle;
    this.overlayRevisionDetailsView = overlayRevisionDetailsView;
    this.overlayRevisionFromTimestamp = overlayRevisionFromTimestamp;
    this.overlayRevisionFromTitleText = overlayRevisionFromTitleText;
    this.overlayRevisionToTimestamp = overlayRevisionToTimestamp;
    this.overlayRevisionToTitleText = overlayRevisionToTitleText;
    this.progressBar = progressBar;
    this.revisionDetailsView = revisionDetailsView;
    this.revisionFromEditComment = revisionFromEditComment;
    this.revisionFromTimestamp = revisionFromTimestamp;
    this.revisionFromTitleText = revisionFromTitleText;
    this.revisionToEditComment = revisionToEditComment;
    this.revisionToTimestamp = revisionToTimestamp;
    this.revisionToTitleText = revisionToTitleText;
    this.talkButton = talkButton;
    this.talkIcon = talkIcon;
    this.thankButton = thankButton;
    this.thankIcon = thankIcon;
    this.thanksDivider = thanksDivider;
    this.undoButton = undoButton;
    this.undoIcon = undoIcon;
    this.undoLabel = undoLabel;
    this.undoRollbackButtonContainer = undoRollbackButtonContainer;
    this.usernameFromButton = usernameFromButton;
    this.usernameToButton = usernameToButton;
    this.watchButton = watchButton;
    this.watchIcon = watchIcon;
    this.watchLabel = watchLabel;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentArticleEditDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentArticleEditDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_article_edit_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentArticleEditDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.app_bar_layout;
      AppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.articleTitleContainer;
      ConstraintLayout articleTitleContainer = ViewBindings.findChildViewById(rootView, id);
      if (articleTitleContainer == null) {
        break missingId;
      }

      id = R.id.articleTitleDivider;
      View articleTitleDivider = ViewBindings.findChildViewById(rootView, id);
      if (articleTitleDivider == null) {
        break missingId;
      }

      id = R.id.articleTitleView;
      TextView articleTitleView = ViewBindings.findChildViewById(rootView, id);
      if (articleTitleView == null) {
        break missingId;
      }

      id = R.id.collapsing_toolbar_layout;
      CollapsingToolbarLayout collapsingToolbarLayout = ViewBindings.findChildViewById(rootView, id);
      if (collapsingToolbarLayout == null) {
        break missingId;
      }

      id = R.id.contentContainer;
      LinearLayout contentContainer = ViewBindings.findChildViewById(rootView, id);
      if (contentContainer == null) {
        break missingId;
      }

      CoordinatorLayout coordinator = (CoordinatorLayout) rootView;

      id = R.id.diffBarrier;
      Barrier diffBarrier = ViewBindings.findChildViewById(rootView, id);
      if (diffBarrier == null) {
        break missingId;
      }

      id = R.id.diffCharacterCountView;
      TextView diffCharacterCountView = ViewBindings.findChildViewById(rootView, id);
      if (diffCharacterCountView == null) {
        break missingId;
      }

      id = R.id.diffDivider;
      View diffDivider = ViewBindings.findChildViewById(rootView, id);
      if (diffDivider == null) {
        break missingId;
      }

      id = R.id.diffRecyclerView;
      RecyclerView diffRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (diffRecyclerView == null) {
        break missingId;
      }

      id = R.id.diffUnavailableContainer;
      LinearLayout diffUnavailableContainer = ViewBindings.findChildViewById(rootView, id);
      if (diffUnavailableContainer == null) {
        break missingId;
      }

      id = R.id.diffUnavailableText;
      TextView diffUnavailableText = ViewBindings.findChildViewById(rootView, id);
      if (diffUnavailableText == null) {
        break missingId;
      }

      id = R.id.errorView;
      WikiErrorView errorView = ViewBindings.findChildViewById(rootView, id);
      if (errorView == null) {
        break missingId;
      }

      id = R.id.fromToDivider;
      View fromToDivider = ViewBindings.findChildViewById(rootView, id);
      if (fromToDivider == null) {
        break missingId;
      }

      id = R.id.guideLineMiddle;
      Guideline guideLineMiddle = ViewBindings.findChildViewById(rootView, id);
      if (guideLineMiddle == null) {
        break missingId;
      }

      id = R.id.navTabContainer;
      LinearLayout navTabContainer = ViewBindings.findChildViewById(rootView, id);
      if (navTabContainer == null) {
        break missingId;
      }

      id = R.id.newerIdButton;
      ImageView newerIdButton = ViewBindings.findChildViewById(rootView, id);
      if (newerIdButton == null) {
        break missingId;
      }

      id = R.id.olderIdButton;
      ImageView olderIdButton = ViewBindings.findChildViewById(rootView, id);
      if (olderIdButton == null) {
        break missingId;
      }

      id = R.id.oresDamagingButton;
      MaterialButton oresDamagingButton = ViewBindings.findChildViewById(rootView, id);
      if (oresDamagingButton == null) {
        break missingId;
      }

      id = R.id.oresGoodFaithButton;
      MaterialButton oresGoodFaithButton = ViewBindings.findChildViewById(rootView, id);
      if (oresGoodFaithButton == null) {
        break missingId;
      }

      id = R.id.overlayArticleTitleDivider;
      View overlayArticleTitleDivider = ViewBindings.findChildViewById(rootView, id);
      if (overlayArticleTitleDivider == null) {
        break missingId;
      }

      id = R.id.overlayDiffDivider;
      View overlayDiffDivider = ViewBindings.findChildViewById(rootView, id);
      if (overlayDiffDivider == null) {
        break missingId;
      }

      id = R.id.overlayFromToDivider;
      View overlayFromToDivider = ViewBindings.findChildViewById(rootView, id);
      if (overlayFromToDivider == null) {
        break missingId;
      }

      id = R.id.overlayGuideLineMiddle;
      Guideline overlayGuideLineMiddle = ViewBindings.findChildViewById(rootView, id);
      if (overlayGuideLineMiddle == null) {
        break missingId;
      }

      id = R.id.overlayRevisionDetailsView;
      ConstraintLayout overlayRevisionDetailsView = ViewBindings.findChildViewById(rootView, id);
      if (overlayRevisionDetailsView == null) {
        break missingId;
      }

      id = R.id.overlayRevisionFromTimestamp;
      TextView overlayRevisionFromTimestamp = ViewBindings.findChildViewById(rootView, id);
      if (overlayRevisionFromTimestamp == null) {
        break missingId;
      }

      id = R.id.overlayRevisionFromTitleText;
      TextView overlayRevisionFromTitleText = ViewBindings.findChildViewById(rootView, id);
      if (overlayRevisionFromTitleText == null) {
        break missingId;
      }

      id = R.id.overlayRevisionToTimestamp;
      TextView overlayRevisionToTimestamp = ViewBindings.findChildViewById(rootView, id);
      if (overlayRevisionToTimestamp == null) {
        break missingId;
      }

      id = R.id.overlayRevisionToTitleText;
      TextView overlayRevisionToTitleText = ViewBindings.findChildViewById(rootView, id);
      if (overlayRevisionToTitleText == null) {
        break missingId;
      }

      id = R.id.progressBar;
      LinearProgressIndicator progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.revisionDetailsView;
      ConstraintLayout revisionDetailsView = ViewBindings.findChildViewById(rootView, id);
      if (revisionDetailsView == null) {
        break missingId;
      }

      id = R.id.revisionFromEditComment;
      GoneIfEmptyTextView revisionFromEditComment = ViewBindings.findChildViewById(rootView, id);
      if (revisionFromEditComment == null) {
        break missingId;
      }

      id = R.id.revisionFromTimestamp;
      TextView revisionFromTimestamp = ViewBindings.findChildViewById(rootView, id);
      if (revisionFromTimestamp == null) {
        break missingId;
      }

      id = R.id.revisionFromTitleText;
      TextView revisionFromTitleText = ViewBindings.findChildViewById(rootView, id);
      if (revisionFromTitleText == null) {
        break missingId;
      }

      id = R.id.revisionToEditComment;
      GoneIfEmptyTextView revisionToEditComment = ViewBindings.findChildViewById(rootView, id);
      if (revisionToEditComment == null) {
        break missingId;
      }

      id = R.id.revisionToTimestamp;
      TextView revisionToTimestamp = ViewBindings.findChildViewById(rootView, id);
      if (revisionToTimestamp == null) {
        break missingId;
      }

      id = R.id.revisionToTitleText;
      TextView revisionToTitleText = ViewBindings.findChildViewById(rootView, id);
      if (revisionToTitleText == null) {
        break missingId;
      }

      id = R.id.talkButton;
      FrameLayout talkButton = ViewBindings.findChildViewById(rootView, id);
      if (talkButton == null) {
        break missingId;
      }

      id = R.id.talkIcon;
      ImageView talkIcon = ViewBindings.findChildViewById(rootView, id);
      if (talkIcon == null) {
        break missingId;
      }

      id = R.id.thankButton;
      FrameLayout thankButton = ViewBindings.findChildViewById(rootView, id);
      if (thankButton == null) {
        break missingId;
      }

      id = R.id.thankIcon;
      ImageView thankIcon = ViewBindings.findChildViewById(rootView, id);
      if (thankIcon == null) {
        break missingId;
      }

      id = R.id.thanksDivider;
      View thanksDivider = ViewBindings.findChildViewById(rootView, id);
      if (thanksDivider == null) {
        break missingId;
      }

      id = R.id.undoButton;
      FrameLayout undoButton = ViewBindings.findChildViewById(rootView, id);
      if (undoButton == null) {
        break missingId;
      }

      id = R.id.undoIcon;
      ImageView undoIcon = ViewBindings.findChildViewById(rootView, id);
      if (undoIcon == null) {
        break missingId;
      }

      id = R.id.undoLabel;
      TextView undoLabel = ViewBindings.findChildViewById(rootView, id);
      if (undoLabel == null) {
        break missingId;
      }

      id = R.id.undoRollbackButtonContainer;
      Flow undoRollbackButtonContainer = ViewBindings.findChildViewById(rootView, id);
      if (undoRollbackButtonContainer == null) {
        break missingId;
      }

      id = R.id.usernameFromButton;
      MaterialButton usernameFromButton = ViewBindings.findChildViewById(rootView, id);
      if (usernameFromButton == null) {
        break missingId;
      }

      id = R.id.usernameToButton;
      MaterialButton usernameToButton = ViewBindings.findChildViewById(rootView, id);
      if (usernameToButton == null) {
        break missingId;
      }

      id = R.id.watchButton;
      FrameLayout watchButton = ViewBindings.findChildViewById(rootView, id);
      if (watchButton == null) {
        break missingId;
      }

      id = R.id.watchIcon;
      ImageView watchIcon = ViewBindings.findChildViewById(rootView, id);
      if (watchIcon == null) {
        break missingId;
      }

      id = R.id.watchLabel;
      TextView watchLabel = ViewBindings.findChildViewById(rootView, id);
      if (watchLabel == null) {
        break missingId;
      }

      return new FragmentArticleEditDetailsBinding((CoordinatorLayout) rootView, appBarLayout,
          articleTitleContainer, articleTitleDivider, articleTitleView, collapsingToolbarLayout,
          contentContainer, coordinator, diffBarrier, diffCharacterCountView, diffDivider,
          diffRecyclerView, diffUnavailableContainer, diffUnavailableText, errorView, fromToDivider,
          guideLineMiddle, navTabContainer, newerIdButton, olderIdButton, oresDamagingButton,
          oresGoodFaithButton, overlayArticleTitleDivider, overlayDiffDivider, overlayFromToDivider,
          overlayGuideLineMiddle, overlayRevisionDetailsView, overlayRevisionFromTimestamp,
          overlayRevisionFromTitleText, overlayRevisionToTimestamp, overlayRevisionToTitleText,
          progressBar, revisionDetailsView, revisionFromEditComment, revisionFromTimestamp,
          revisionFromTitleText, revisionToEditComment, revisionToTimestamp, revisionToTitleText,
          talkButton, talkIcon, thankButton, thankIcon, thanksDivider, undoButton, undoIcon,
          undoLabel, undoRollbackButtonContainer, usernameFromButton, usernameToButton, watchButton,
          watchIcon, watchLabel);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
