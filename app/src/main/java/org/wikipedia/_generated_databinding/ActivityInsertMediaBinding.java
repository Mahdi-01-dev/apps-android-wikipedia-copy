// Generated by view binder compiler. Do not edit!
package org.wikipedia.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.fragment.app.FragmentContainerView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.progressindicator.LinearProgressIndicator;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.wikipedia.R;
import org.wikipedia.views.FaceAndColorDetectImageView;
import org.wikipedia.views.WikiCardView;
import org.wikipedia.views.WikiSwipeRefreshLayout;

public final class ActivityInsertMediaBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final LinearLayout emptyImageContainer;

  @NonNull
  public final TextView emptyMessage;

  @NonNull
  public final ImageView imageInfoButton;

  @NonNull
  public final FrameLayout imageInfoContainer;

  @NonNull
  public final FrameLayout imageViewContainer;

  @NonNull
  public final FragmentContainerView insertMediaAdvancedSettingsFragment;

  @NonNull
  public final FragmentContainerView insertMediaSettingsFragment;

  @NonNull
  public final CoordinatorLayout notificationsCoordinatorLayout;

  @NonNull
  public final LinearProgressIndicator progressBar;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final WikiSwipeRefreshLayout refreshView;

  @NonNull
  public final FrameLayout scrollableContainer;

  @NonNull
  public final WikiCardView searchContainer;

  @NonNull
  public final TextView searchInputField;

  @NonNull
  public final FaceAndColorDetectImageView selectedImage;

  @NonNull
  public final FrameLayout selectedImageContainer;

  @NonNull
  public final MaterialToolbar toolbar;

  @NonNull
  public final AppBarLayout toolbarContainer;

  private ActivityInsertMediaBinding(@NonNull CoordinatorLayout rootView,
      @NonNull LinearLayout emptyImageContainer, @NonNull TextView emptyMessage,
      @NonNull ImageView imageInfoButton, @NonNull FrameLayout imageInfoContainer,
      @NonNull FrameLayout imageViewContainer,
      @NonNull FragmentContainerView insertMediaAdvancedSettingsFragment,
      @NonNull FragmentContainerView insertMediaSettingsFragment,
      @NonNull CoordinatorLayout notificationsCoordinatorLayout,
      @NonNull LinearProgressIndicator progressBar, @NonNull RecyclerView recyclerView,
      @NonNull WikiSwipeRefreshLayout refreshView, @NonNull FrameLayout scrollableContainer,
      @NonNull WikiCardView searchContainer, @NonNull TextView searchInputField,
      @NonNull FaceAndColorDetectImageView selectedImage,
      @NonNull FrameLayout selectedImageContainer, @NonNull MaterialToolbar toolbar,
      @NonNull AppBarLayout toolbarContainer) {
    this.rootView = rootView;
    this.emptyImageContainer = emptyImageContainer;
    this.emptyMessage = emptyMessage;
    this.imageInfoButton = imageInfoButton;
    this.imageInfoContainer = imageInfoContainer;
    this.imageViewContainer = imageViewContainer;
    this.insertMediaAdvancedSettingsFragment = insertMediaAdvancedSettingsFragment;
    this.insertMediaSettingsFragment = insertMediaSettingsFragment;
    this.notificationsCoordinatorLayout = notificationsCoordinatorLayout;
    this.progressBar = progressBar;
    this.recyclerView = recyclerView;
    this.refreshView = refreshView;
    this.scrollableContainer = scrollableContainer;
    this.searchContainer = searchContainer;
    this.searchInputField = searchInputField;
    this.selectedImage = selectedImage;
    this.selectedImageContainer = selectedImageContainer;
    this.toolbar = toolbar;
    this.toolbarContainer = toolbarContainer;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityInsertMediaBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityInsertMediaBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_insert_media, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityInsertMediaBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.emptyImageContainer;
      LinearLayout emptyImageContainer = ViewBindings.findChildViewById(rootView, id);
      if (emptyImageContainer == null) {
        break missingId;
      }

      id = R.id.emptyMessage;
      TextView emptyMessage = ViewBindings.findChildViewById(rootView, id);
      if (emptyMessage == null) {
        break missingId;
      }

      id = R.id.imageInfoButton;
      ImageView imageInfoButton = ViewBindings.findChildViewById(rootView, id);
      if (imageInfoButton == null) {
        break missingId;
      }

      id = R.id.imageInfoContainer;
      FrameLayout imageInfoContainer = ViewBindings.findChildViewById(rootView, id);
      if (imageInfoContainer == null) {
        break missingId;
      }

      id = R.id.imageViewContainer;
      FrameLayout imageViewContainer = ViewBindings.findChildViewById(rootView, id);
      if (imageViewContainer == null) {
        break missingId;
      }

      id = R.id.insertMediaAdvancedSettingsFragment;
      FragmentContainerView insertMediaAdvancedSettingsFragment = ViewBindings.findChildViewById(rootView, id);
      if (insertMediaAdvancedSettingsFragment == null) {
        break missingId;
      }

      id = R.id.insertMediaSettingsFragment;
      FragmentContainerView insertMediaSettingsFragment = ViewBindings.findChildViewById(rootView, id);
      if (insertMediaSettingsFragment == null) {
        break missingId;
      }

      CoordinatorLayout notificationsCoordinatorLayout = (CoordinatorLayout) rootView;

      id = R.id.progressBar;
      LinearProgressIndicator progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.recyclerView;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.refreshView;
      WikiSwipeRefreshLayout refreshView = ViewBindings.findChildViewById(rootView, id);
      if (refreshView == null) {
        break missingId;
      }

      id = R.id.scrollableContainer;
      FrameLayout scrollableContainer = ViewBindings.findChildViewById(rootView, id);
      if (scrollableContainer == null) {
        break missingId;
      }

      id = R.id.search_container;
      WikiCardView searchContainer = ViewBindings.findChildViewById(rootView, id);
      if (searchContainer == null) {
        break missingId;
      }

      id = R.id.searchInputField;
      TextView searchInputField = ViewBindings.findChildViewById(rootView, id);
      if (searchInputField == null) {
        break missingId;
      }

      id = R.id.selectedImage;
      FaceAndColorDetectImageView selectedImage = ViewBindings.findChildViewById(rootView, id);
      if (selectedImage == null) {
        break missingId;
      }

      id = R.id.selectedImageContainer;
      FrameLayout selectedImageContainer = ViewBindings.findChildViewById(rootView, id);
      if (selectedImageContainer == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.toolbarContainer;
      AppBarLayout toolbarContainer = ViewBindings.findChildViewById(rootView, id);
      if (toolbarContainer == null) {
        break missingId;
      }

      return new ActivityInsertMediaBinding((CoordinatorLayout) rootView, emptyImageContainer,
          emptyMessage, imageInfoButton, imageInfoContainer, imageViewContainer,
          insertMediaAdvancedSettingsFragment, insertMediaSettingsFragment,
          notificationsCoordinatorLayout, progressBar, recyclerView, refreshView,
          scrollableContainer, searchContainer, searchInputField, selectedImage,
          selectedImageContainer, toolbar, toolbarContainer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
